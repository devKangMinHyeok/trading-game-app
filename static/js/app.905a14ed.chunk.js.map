{"version":3,"sources":["styles/theme.ts","styles/rootStyles.ts","globalConstant.ts","atom.ts","functions/convertKrNumberType.ts","styles/TextStyledComponents.tsx","components/account/MiddleAccount.tsx","components/account/TopAccount.tsx","functions/calDate.ts","functions/getRandomRate.ts","functions/candleGenerator.ts","styles/chartStyles.ts","components/chart/CandleChart.tsx","components/chart/Chart.tsx","hooks/useComponentSize.ts","components/assets/CustomVictoryStack.tsx","components/position-info/EmptyPositionBox.tsx","styles/buttonStyles.tsx","components/position-info/position-box/components/CloseButton.tsx","components/position-info/position-box/components/CurrentPositionInfo.tsx","components/position-info/position-box/components/LeverageInfoBox.tsx","components/position-info/position-box/components/OpenPositionInfo.tsx","components/position-info/position-box/components/ProfitInfoBox.tsx","components/position-info/position-box/components/TitleBox.tsx","components/position-info/position-box/PositionBox.tsx","components/position-info/PositionInfoViewer.tsx","components/position-info/PositionInfo.tsx","components/control-panel/shop/Shop.tsx","components/assets/CustomSwitch.tsx","components/control-panel/trade/trade-controller/components/AmountSettingBox.tsx","components/control-panel/trade/trade-controller/components/CoinAmountBox.tsx","components/control-panel/trade/trade-controller/components/LeverageControlBox.tsx","components/control-panel/trade/trade-controller/components/LiquidPriceBox.tsx","components/control-panel/trade/trade-controller/components/TotalPriceBox.tsx","components/control-panel/trade/trade-controller/components/TradeButton.tsx","components/control-panel/trade/trade-controller/components/TransactionFeeRateBox.tsx","components/control-panel/trade/trade-controller/TradeController.tsx","components/control-panel/trade/trade-controller/LongTradeController.tsx","components/control-panel/trade/trade-controller/ShortTradeController.tsx","components/control-panel/trade/Trade.tsx","components/control-panel/ControlPanel.tsx","components/root-control-button/RootControlButton.tsx","components/level/LevelLabelBox.tsx","components/level/LevelProgressBar.tsx","components/level/LevelUpButton.tsx","components/level/LevelInfoBox.tsx","components/Display.tsx","App.tsx"],"names":["theme","colors","backgroundColor1","backgroundColor2","backgroundColor3","baseTextColor","toneDownTextColor","positiveTextColor","negativeTextColor","longButtonColor","longCandleColor","positivePriceColor","shortButtonColor","shortCandleColor","negativePriceColor","longLiquidActiveLineColor","longLiquidInactiveLineColor","shortLiquidActiveLineColor","shortLiquidInactiveLineColor","crossHairLineColor","openPriceLineColor","LevelUpButtonBackgroundColor","CloseButtonBackgroundColor","CloseButtonBackgroundColor2","nextTurnButtonBackgroundColor","resetButtonBackgroundColor","font","bigValueFontSize","midiumValueFontSize","smallValueFontSize","bigRateFontSize","bigTextFontSize","midiumTextFontSize","smallTextFontSize","boldFontWeight","regularFontWeight","lightFontWeight","SCREEN_WIDTH","Dimensions","get","width","rootStyles","StyleSheet","create","display","flex","backgroundColor","topAccount","flexDirection","gap","justifyContent","alignItems","level","chart","overflow","middleAccount","positionInfo","controlPanel","trade","shop","rootControlButton","CANDLE_INITIAL_DATE","Date","LEVEL_SETTING","levelNumber","levelName","randomGap","stddev","transactionFeeRate","color","loan","LEVERAGE_UNITS","label","value","INITIAL_CANDLE_SET","x","open","close","high","low","candleDataState","atom","key","default","turnNumberState","isLongControllerActiveState","isCandleMovingState","lastClosePriceState","lastOpenPriceState","longLiquidState","shortLiquidState","cashAccountState","levelNumberState","levelInfoState","selector","longAccountState","positionActive","openPrice","liquidPrice","leverage","openPositionAmount","openPositionValue","currentPositionValue","shortAccountState","longAccountDetailState","longAccount","unrealizedPnl","profitRate","totalAsset","isPositive","shortAccountDetailState","shortAccount","totalFutureAccountState","longAccountDetail","shortAccountDetail","totalAccountState","cashAccount","futureAccount","openValuation","realizedPnl","cash","futureValuation","convertKrNumberType","number","toString","replace","BaseTextContainer","styled","Text","props","TopAccountText","TopAccountValue","TopAccountRate","LevelLabelText","ProgressValueText","LevelUpText","MiddleAccountText","MiddleAccountValue","PositionTitleBoxText","isLong","PositionLeverageBoxText","PositionInfoTitleBoxText","PositionInfoValueBoxText","LiquidValueText","OpenValueText","UnrealizedPnlBoxText","UnrealizedPnlBoxValue","PositionCloseButtonText","EmptyPositionText","ControlSectionTitleText","ControlSectionValueText","LiquidControlSectionValueText","OpenButtonText","ResetButtonText","NextTurnButtonText","memo","totalAccount","useRecoilValue","View","style","padding","Math","ceil","toFixed","calDate","date","resDate","setDate","getDate","spareRandom","normalRandom","val","u","v","s","mul","random","sqrt","log","normalRandomScaled","mean","r","getRandomRate","min","max","normalRandomScaledInRange","candleGenerator","time","lastClosePrice","numberPerUnit","random_gap","previousCandle","candleSet","i","newCandle","cloneDeep","newClose","newHigh","newLow","push","sharedLabelStyle","fontSize","fill","CandleChart","turnNumber","levelInfo","useRecoilState","candleData","setCandleData","setIsCandleMoving","setLastClosePrice","lastOpenPrice","setLastOpenPrice","setLongAccount","setShortAccount","resetLongAccount","useResetRecoilState","resetShortAccount","longLiquid","shortLiquid","useState","chartXDomain","setChartXDomain","INITIAL_CANDLE_LOW","LAST_OF_INITIAL_CANDLE_HIGH","chartYDomain","setChartYDomain","updateCandleData","useCallback","index","lastIndex","setTimeout","prev","newData","slice","length","shift","newLog","useEffect","timers","lastDate","nextDate","lastPrice","newCandleSet","forEach","ele","clearTimeout","targetCandles","startDate","lowestPrice","highestPrice","domainPadding","containerComponent","cursorLabel","datum","round","y","cursorComponent","stroke","strokeWidth","cursorLabelComponent","parent","background","dependentAxis","offsetX","orientation","grid","tickLabels","candleWidth","data","d","candleColors","positive","negative","domain","text","textAnchor","backgroundPadding","left","right","top","bottom","backgroundStyle","opacity","strokeDasharray","Chart","useComponentSize","height","size","setSize","onLayout","event","nativeEvent","layout","parentSize","barCashRate","barFutureRate","position","barColor","setBarColor","animate","duration","colorScale","labels","labelComponent","dx","dy","barWidth","paddingTop","BaseButton","TouchableOpacity","LevelUpButtonContainer","disabled","CloseButtonContainer","OpenButtonContainer","AccountResetButtonContainer","NextTurnButtonContainer","closeHandler","onPress","PositionSettingInfo","Number","currentfutureTotalAsset","marginTop","marginBottom","borderRadius","PositionBox","accountDetail","paddingRight","isCandleMoving","setCashAccount","totalAcount","setBarCashRate","setBarFutureRate","Shop","switchStyle","selectedValue","selectedColor","nonSelectedColor","thisValue","container","box","borderWidth","borderStyle","borderColor","textStyle","options","setValueFunction","map","evt","newValue","isLongSelected","amountRate","setAmountRate","MultiSlider","sliderLength","values","onValuesChange","step","snapped","markerStyle","selectedStyle","trackStyle","coinAmount","activeLeverage","setLeverage","totalPrice","buttonHandler","isBuy","transactionFee","TradeController","setLongLiquid","setShortLiquid","setTotalPrice","setCoinAmount","buyButtonHandler","alert","newOpenPositionValue","sellButtonHandler","targetCash","ableCoinAmount","floor","LongTradeController","ShortTradeController","Trade","setIsLongSelected","ControlPanel","RootControlButton","setTurnNumber","resetCashAccount","resetLevelNumber","marginRight","progressRate","ProgressBar","progress","Colors","greenA200","isReadyToLevelUp","setLevelNumber","setProgressRate","setIsReadyToLevelUp","Display","App","StatusBar"],"mappings":"2OAoHeA,EALO,CACpBC,OA3EsB,CACtBC,iBAAkB,UAClBC,iBAAkB,YAClBC,iBAAkB,YAElBC,cAAe,UACfC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UAEnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,mBAAoB,UAEpBC,iBAAkB,UAClBC,iBAAkB,UAClBC,mBAAoB,UAEpBC,0BAA2B,UAC3BC,4BAA6B,YAE7BC,2BAA4B,UAC5BC,6BAA8B,YAE9BC,mBAAoB,UAEpBC,mBAAoB,UAEpBC,6BAA8B,UAE9BC,2BAA4B,UAC5BC,4BAA6B,UAE7BC,8BAA+B,UAC/BC,2BAA4B,WA0C5BC,KAvBkB,CAClBC,iBAAkB,OAClBC,oBAAqB,OACrBC,mBAAoB,OAEpBC,gBAAiB,OAEjBC,gBAAiB,OACjBC,mBAAoB,OACpBC,kBAAmB,OAEnBC,eAAgB,IAChBC,kBAAmB,IACnBC,gBAAiB,MCpGGC,EAAiBC,UAAWC,IAAI,UAAvCC,MAwEAC,EAtEIC,UAAWC,OAAO,CACnCC,QAAS,CACPC,KAAM,EACNC,gBAAiB,QAGnBC,WAAY,CACVC,cAAe,MACfH,KAAM,GACNI,IAAK,EACLC,eAAgB,SAChBC,WAAY,WACZL,gBAAiB9C,EAAMC,OAAOC,kBAGhCkD,MAAO,CACLP,KAAM,IACNG,cAAe,MACfE,eAAgB,SAChBC,WAAY,SACZL,gBAAiB9C,EAAMC,OAAOC,kBAGhCmD,MAAO,CACLR,KAAM,IACNK,eAAgB,SAChBI,SAAU,SACVR,gBAAiB9C,EAAMC,OAAOC,kBAGhCqD,cAAe,CACbV,KAAM,GACNG,cAAe,MACfE,eAAgB,eAChBC,WAAY,SACZL,gBAAiB9C,EAAMC,OAAOE,kBAGhCqD,aAAc,CACZX,KAAM,IACNG,cAAe,MACfE,eAAgB,eAChBJ,gBAAiB9C,EAAMC,OAAOE,kBAGhCsD,aAAc,CACZZ,KAAM,IACNC,gBAAiB,OACjBE,cAAe,OAGjBU,MAAO,CACLb,KAAM,IACNC,gBAAiB,QAGnBa,KAAM,CACJd,KAAM,IACNK,eAAgB,SAChBC,WAAY,SACZL,gBAAiB9C,EAAMC,OAAOC,kBAGhC0D,kBAAmB,CACjBf,KAAM,GACNC,gBAAiB9C,EAAMC,OAAOE,iBAC9B6C,cAAe,S,OCrCNa,EAAsB,IAAIC,KAAK,KAAM,EAAG,GAUxCC,EAA8B,CACzC,CACEC,YAAa,EACbC,UAAW,qBACXC,UAAW,IACXC,OAAQ,EACRC,mBAAoB,IACpBC,MAAO,UACPC,KAAM,KAER,CACEN,YAAa,EACbC,UAAW,qBACXC,UAAW,IACXC,OAAQ,EACRC,mBAAoB,IACpBC,MAAO,UACPC,KAAM,KAER,CACEN,YAAa,EACbC,UAAW,qBACXC,UAAW,IACXC,OAAQ,EACRC,mBAAoB,IACpBC,MAAO,UACPC,KAAM,KAER,CACEN,YAAa,EACbC,UAAW,qBACXC,UAAW,IACXC,OAAQ,EACRC,mBAAoB,GACpBC,MAAO,UACPC,KAAM,KAER,CACEN,YAAa,EACbC,UAAW,qBACXC,UAAW,IACXC,OAAQ,EACRC,mBAAoB,IACpBC,MAAO,UACPC,KAAM,KAER,CACEN,YAAa,EACbC,UAAW,qBACXC,UAAW,IACXC,OAAQ,EACRC,mBAAoB,GACpBC,MAAO,UACPC,KAAM,KAER,CACEN,YAAa,EACbC,UAAW,SACXC,UAAW,GACXC,OAAQ,EACRC,mBAAoB,IACpBC,MAAO,UACPC,KAAM,OASGC,EAAiB,CAC5B,CAAEC,MAAO,KAAMC,MAAO,GACtB,CAAED,MAAO,KAAMC,MAAO,GACtB,CAAED,MAAO,KAAMC,MAAO,GACtB,CAAED,MAAO,KAAMC,MAAO,GACtB,CAAED,MAAO,MAAOC,MAAO,IACvB,CAAED,MAAO,MAAOC,MAAO,IACvB,CAAED,MAAO,MAAOC,MAAO,KAEZC,EAAqC,CAChD,CACEC,EAAGd,EACHe,KAvG+B,IAwG/BC,MAvGgC,IAwGhCC,KAvG+B,IAwG/BC,IAvG8B,IAyGhC,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,GAAIc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KAClE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,GAAIc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,IAClE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,GAAIc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KAClE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,GAAIc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KAClE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,GAAIc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KAClE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,GAAIc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KAClE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,GAAIc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KAClE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,GAAIc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KAClE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,IAAKc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KACnE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,IAAKc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KACnE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,IAAKc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KACnE,CAAEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,IAAKc,KAAM,IAAKC,MAAO,IAAKC,KAAM,IAAKC,IAAK,KACnE,CACEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,IACrBc,KAAM,IACNC,MAtHuC,IAuHvCC,KAAM,IACNC,IAAK,KAEP,CACEJ,EAAG,IAAIb,KAAK,KAAM,EAAG,IACrBc,KA5HuC,IA6HvCC,MA5HwC,IA6HxCC,KA5HuC,IA6HvCC,IA5HsC,MCR7BC,EAAkBC,eAAK,CAClCC,IAAK,kBACLC,QAAST,IAGEU,EAAkBH,eAAK,CAClCC,IAAK,kBACLC,QAAS,IAGEE,EAA8BJ,eAAK,CAC9CC,IAAK,8BACLC,SAAS,IAGEG,EAAsBL,eAAK,CACtCC,IAAK,sBACLC,SAAS,IAGEI,EAAsBN,eAAK,CACtCC,IAAK,sBACLC,QDhB0C,MCmB/BK,EAAqBP,eAAK,CACrCC,IAAK,qBACLC,QDtByC,MCmC9BM,GAVqBR,eAAK,CACrCC,IAAK,qBACLC,QDzByC,MC4BVF,eAAK,CACpCC,IAAK,oBACLC,QD7BwC,MCgCXF,eAAK,CAClCC,IAAK,kBACLC,QAAS,KAGEO,EAAmBT,eAAK,CACnCC,IAAK,mBACLC,QAAS,IAIEQ,EAAmBV,eAAK,CACnCC,IAAK,eACLC,QAAS,MAGES,EAAmBX,eAAK,CACnCC,IAAK,mBACLC,QAAS,IAGEU,EAAiBC,mBAAS,CACrCZ,IAAK,iBACL3C,IAAK,YAAc,IACXyB,GAAczB,EADJ,EAAVA,KACkBqD,GACxB,OAAO7B,EAAcC,EAAc,MAI1B+B,EAAmBd,eAAK,CACnCC,IAAK,mBACLC,QAAS,CACPa,gBAAgB,EAChBC,UAAW,EACXC,YAAa,EACbC,SAAU,EACVC,mBAAoB,EACpBC,kBAAmB,EACnBC,qBAAsB,KAIbC,GAAoBtB,eAAK,CACpCC,IAAK,oBACLC,QAAS,CACPa,gBAAgB,EAChBC,UAAW,EACXC,YAAa,EACbC,SAAU,EACVC,mBAAoB,EACpBC,kBAAmB,EACnBC,qBAAsB,KAIbE,GAAyBV,mBAAS,CAC7CZ,IAAK,yBACL3C,IAAK,YAAc,IACXkE,GAAclE,EADJ,EAAVA,KACkBwD,GAClBW,EACJD,EAAYN,UACXM,EAAYH,qBAAuBG,EAAYJ,mBAClD,MAAO,CACLL,eAAgBS,EAAYT,eAC5BC,UAAWQ,EAAYR,UACvBC,YAAaO,EAAYP,YACzBC,SAAUM,EAAYN,SACtBC,mBAAoBK,EAAYL,mBAChCC,kBAAmBI,EAAYJ,kBAC/BC,qBAAsBG,EAAYH,qBAClCI,gBACAC,WAAYD,EAAgBD,EAAYJ,kBACxCO,WAAYF,EAAgBD,EAAYJ,kBACxCQ,WACEH,EAAgB,EDnGA,WCmGeA,EAAgB,EDlG/B,WACJ,WCsGPI,GAA0BhB,mBAAS,CAC9CZ,IAAK,0BACL3C,IAAK,YAAc,IACXwE,GAAexE,EADL,EAAVA,KACmBgE,IACnBG,EACJK,EAAaZ,UACZY,EAAaV,kBAAoBU,EAAaT,sBACjD,MAAO,CACLN,eAAgBe,EAAaf,eAC7BC,UAAWc,EAAad,UACxBC,YAAaa,EAAab,YAC1BC,SAAUY,EAAaZ,SACvBC,mBAAoBW,EAAaX,mBACjCC,kBAAmBU,EAAaV,kBAChCC,qBAAsBS,EAAaT,qBACnCI,gBACAC,WAAYD,EAAgBK,EAAaV,kBACzCO,WAAYF,EAAgBK,EAAaV,kBACzCQ,WACEH,EAAgB,ED3HA,WC2HeA,EAAgB,ED1H/B,WACJ,WC8HPM,GAA0BlB,mBAAS,CAC9CZ,IAAK,qBACL3C,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACA0E,EAAoB1E,EAAIiE,IACxBU,EAAqB3E,EAAIuE,IAEzBT,EACJY,EAAkBZ,kBAClBa,EAAmBb,kBACfC,EACJW,EAAkBX,qBAClBY,EAAmBZ,qBACfI,EACJO,EAAkBP,cAAgBQ,EAAmBR,cAEvD,MAAO,CACLV,eACEiB,EAAkBjB,gBAAkBkB,EAAmBlB,eACzDK,oBACAC,uBACAI,gBACAC,WAAYD,EAAgBL,EAC5BO,WAAYF,EAAgBL,EAC5BQ,WACEH,EAAgB,EDxJA,WCwJeA,EAAgB,EDvJ/B,WACJ,WC2JPS,GAAoBrB,mBAAS,CACxCZ,IAAK,oBACL3C,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACA6E,EAAc7E,EAAIoD,GAClB0B,EAAgB9E,EAAIyE,IAEpBM,EAAgBD,EAAchB,kBAAoBe,EAClDR,EAAaQ,EAAcC,EAAcT,WACzCF,EAAgBE,EAAaU,EAC7BC,EAAcX,EDxKI,ICyKxB,MAAO,CACLY,KAAMJ,EACNK,gBAAiBJ,EAAcT,WAC/BA,aACAF,gBACAC,WAAYD,EAAgBY,EAC5BT,WACEU,EAAc,ED9KE,WC8KaA,EAAc,ED7K3B,WACJ,WErCLG,GAJa,SAACC,GAC3B,OAAOA,EAAOC,WAAWC,QAAQ,wBAAyB,M,oBCmB/CC,GAAoBC,UAAOC,KAAV,oCACnB,SAACC,GAAD,OAA4BA,EAAMjI,MAAMC,OAAOI,iBAI7C6H,GAAiBH,kBAAOD,GAAPC,CAAH,wCACZ,SAACE,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKM,sBAG/CmG,GAAkBJ,kBAAOD,GAAPC,CAAH,uDACb,SAACE,GAAD,OACXA,EAAMjI,MAAM0B,KAAKC,oBACV,SAACsG,GAAD,MHOa,YGNpBA,EAAMpB,WACFoB,EAAMjI,MAAMC,OAAOM,kBHMH,YGLhB0H,EAAMpB,WACNoB,EAAMjI,MAAMC,OAAOO,kBACnByH,EAAMjI,MAAMC,OAAOI,iBAGd+H,GAAiBL,kBAAOD,GAAPC,CAAH,uDACZ,SAACE,GAAD,OACXA,EAAMjI,MAAM0B,KAAKI,mBACV,SAACmG,GAAD,MHJa,YGKpBA,EAAMpB,WACFoB,EAAMjI,MAAMC,OAAOM,kBHLH,YGMhB0H,EAAMpB,WACNoB,EAAMjI,MAAMC,OAAOO,kBACnByH,EAAMjI,MAAMC,OAAOI,iBAIdgI,GAAiBN,kBAAOD,GAAPC,CAAH,2DAEZ,SAACE,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKM,sBAG/CsG,GAAoBP,kBAAOD,GAAPC,CAAH,wCACf,SAACE,GAAD,OACXA,EAAMjI,MAAM0B,KAAKE,uBAGR2G,GAAcR,kBAAOD,GAAPC,CAAH,wCACT,SAACE,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKM,sBAI/CwG,GAAoBT,kBAAOD,GAAPC,CAAH,uDACnB,SAACE,GAAD,OAA4BA,EAAMjI,MAAMC,OAAOK,qBAC3C,SAAC2H,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKO,qBAE/CwG,GAAqBV,kBAAOD,GAAPC,CAAH,uDACpB,SAACE,GAAD,OAA4BA,EAAMjI,MAAMC,OAAOI,iBAC3C,SAAC4H,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKC,oBAI/C+G,GAAuBX,kBAAOD,GAAPC,CAAH,sHACX,SAACE,GAAD,OAClBA,EAAMU,OACFV,EAAMjI,MAAMC,OAAOM,kBACnB0H,EAAMjI,MAAMC,OAAOO,qBACZ,SAACyH,GAAD,OACXA,EAAMjI,MAAM0B,KAAKM,sBAKR4G,GAA0Bb,kBAAOD,GAAPC,CAAH,iGACzB,SAACE,GAAD,OACPA,EAAMU,OACFV,EAAMjI,MAAMC,OAAOM,kBACnB0H,EAAMjI,MAAMC,OAAOO,qBACZ,SAACyH,GAAD,OACXA,EAAMjI,MAAM0B,KAAKC,oBACJ,SAACsG,GAAD,OACbA,EAAMjI,MAAM0B,KAAKQ,kBAIR2G,GAA2Bd,kBAAOD,GAAPC,CAAH,uDAC1B,SAACE,GAAD,OACPA,EAAMjI,MAAMC,OAAOK,qBACR,SAAC2H,GAAD,OACXA,EAAMjI,MAAM0B,KAAKO,qBAGR6G,GAA2Bf,kBAAOD,GAAPC,CAAH,wCACtB,SAACE,GAAD,OACXA,EAAMjI,MAAM0B,KAAKE,uBAGRmH,GAAkBhB,kBAAOe,GAAPf,CAAH,oCACjB,SAACE,GAAD,OACPA,EAAMU,OACFV,EAAMjI,MAAMC,OAAOc,0BACnBkH,EAAMjI,MAAMC,OAAOgB,8BAGd+H,GAAgBjB,kBAAOe,GAAPf,CAAH,oCACf,SAACE,GAAD,OAA4BA,EAAMjI,MAAMC,OAAOmB,sBAG7C6H,GAAuBlB,kBAAOc,GAAPd,CAAH,mBAEpBmB,GAAwBnB,kBAAOe,GAAPf,CAAH,oCACvB,SAACE,GAAD,MHvFa,YGwFpBA,EAAMpB,WACFoB,EAAMjI,MAAMC,OAAOM,kBHxFH,YGyFhB0H,EAAMpB,WACNoB,EAAMjI,MAAMC,OAAOO,kBACnByH,EAAMjI,MAAMC,OAAOI,iBAGd8I,GAA0BpB,kBAAOD,GAAPC,CAAH,kFACtB,SAACE,GAAD,OACVA,EAAMU,OACFV,EAAMjI,MAAMC,OAAOM,kBACnB0H,EAAMjI,MAAMC,OAAOO,qBAEV,SAACyH,GAAD,OACbA,EAAMjI,MAAM0B,KAAKQ,kBAGRkH,GAAoBrB,kBAAOD,GAAPC,CAAH,0CACb,SAACE,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKQ,kBAIjDmH,GAA0BtB,kBAAOD,GAAPC,CAAH,uDACrB,SAACE,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKO,qBACjD,SAACgG,GAAD,OAA4BA,EAAMjI,MAAMC,OAAOK,qBAG7CgJ,GAA0BvB,kBAAOD,GAAPC,CAAH,wCACrB,SAACE,GAAD,OACXA,EAAMjI,MAAM0B,KAAKE,uBAGR2H,GAAgCxB,kBAAOuB,GAAPvB,CAAH,oCAC/B,SAACE,GAAD,OACPA,EAAMU,OACFV,EAAMjI,MAAMC,OAAOc,0BACnBkH,EAAMjI,MAAMC,OAAOgB,8BAGduI,GAAiBzB,kBAAOD,GAAPC,CAAH,+DACb,SAACE,GAAD,OACVA,EAAMU,OACFV,EAAMjI,MAAMC,OAAOM,kBACnB0H,EAAMjI,MAAMC,OAAOO,qBACV,SAACyH,GAAD,OACbA,EAAMjI,MAAM0B,KAAKQ,kBAIRuH,GAAkB1B,kBAAOD,GAAPC,CAAH,6DACb,SAACE,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKK,mBAC3C,SAACkG,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKQ,kBAEjDwH,GAAqB3B,kBAAOD,GAAPC,CAAH,6DAChB,SAACE,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKK,mBAC3C,SAACkG,GAAD,OAA4BA,EAAMjI,MAAM0B,KAAKQ,kB,QCvJ/CyH,uBApBf,WACE,IAAMC,EAAeC,yBAAe1C,IACpC,OACE,gBAAC2C,EAAA,QAAD,CAAMC,MAAOtH,EAAWc,cAAxB,UACE,gBAACuG,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGmH,QAAS,IAAjC,UACE,eAACxB,GAAD,4BACA,gBAACC,GAAD,WACGf,GAAoBuC,KAAKC,KAAKN,EAAanC,kBAD9C,eAIF,gBAACqC,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGmH,QAAS,IAAjC,UACE,eAACxB,GAAD,4BACA,gBAACC,GAAD,WACGf,GAAoBuC,KAAKC,KAAKN,EAAapC,OAD9C,qBCmBOmC,uBAxBf,WACE,IAAMC,EAAeC,yBAAe1C,IAEpC,OACE,gBAAC2C,EAAA,QAAD,CAAMC,MAAOtH,EAAWM,WAAxB,UACE,eAAC+G,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGM,WAAY,YAApC,SACE,eAAC+E,GAAD,mDAEF,gBAAC4B,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,IAAKG,cAAe,MAAOG,WAAY,YAA5D,UACE,gBAACgF,GAAD,CAAiBtB,WAAY+C,EAAa/C,WAA1C,UACGa,GAAoBuC,KAAKC,KAAKN,EAAahD,aAD9C,SAC6D,OAE7D,gBAACwB,GAAD,CAAgBvB,WAAY+C,EAAa/C,WAAzC,YAEM+C,EAAahD,WLKC,SKJhB,KACAuD,QAAQ,GAJZ,gB,wHCvBOC,GAPC,SAACC,EAAY1C,GAC3B,IAAM2C,EAAU,IAAIxG,KAAKuG,GAGzB,OAFAC,EAAQC,QAAQD,EAAQE,UAAY7C,GAE7B2C,GCJLG,GAAc,KAElB,SAASC,KACP,IAAIC,EAAaC,EAAWC,EAAWC,EAAWC,EAElD,GAAoB,OAAhBN,GACFE,EAAMF,GACNA,GAAc,SACT,CACL,GAIEK,GAHAF,EAAoB,EAAhBX,KAAKe,SAAe,GAGhBJ,GAFRC,EAAoB,EAAhBZ,KAAKe,SAAe,GAERH,QACH,IAANC,GAAWA,GAAK,GAIzBH,EAAMC,GAFNG,EAAMd,KAAKgB,MAAO,EAAIhB,KAAKiB,IAAIJ,GAAMA,IAGrCL,GAAcI,EAAIE,EAGpB,OAAOJ,EAYT,SAASQ,GAAmBC,EAAcjH,GACxC,IAAIkH,EAAIX,KAIR,OAFAW,EAAIA,EAAIlH,EAASiH,EAmBnB,IAUeE,GAVO,SACpBF,EACAjH,EACAoH,EACAC,GAGA,OArBF,SACEJ,EACAjH,EACAoH,EACAC,GAEA,IAAIH,EACJ,GACEA,EAAIF,GAAmBC,EAAMjH,SACtBkH,EAAIE,GAAOF,EAAIG,GAExB,OAAOH,EASMI,CAA0BL,EAAMjH,EAAQoH,EAAKC,ICrB7CE,GArCS,SACtBC,EACAC,EACAC,GAaA,IAVI,IAFJC,EAEG,uDAFkB,IACrB3H,EACG,uDADc,EAEb4H,EAA+B,CACjCpH,EAAGgH,EACH/G,KAAMgH,EACN9G,KAAM8G,EACN7G,IAAK6G,EACL/G,MAAO+G,GAEHI,EAAY,CAACD,GAEVE,EAAI,EAAGA,EAAIJ,EAAeI,IAAK,CACtC,IAAMC,EAAYC,qBAAUJ,GAGtBK,EACJF,EAAUrH,MACVyG,GAAc,EAAGnH,EAAQ,EAAI2H,EAAY,EAAIA,GACzCO,EAAUH,EAAUpH,KAAOsH,EAAWA,EAAWF,EAAUpH,KAC3DwH,EAASJ,EAAUnH,IAAMqH,EAAWA,EAAWF,EAAUnH,IAE/DmH,EAAUrH,MAAQuH,EAClBF,EAAUpH,KAAOuH,EACjBH,EAAUnH,IAAMuH,EAEhBP,EAAiBG,EACjBF,EAAUO,KAAKL,GAGjB,OAAOF,GCpCIQ,GAAmB,CAC9BC,SAAUzM,EAAM0B,KAAKG,mBACrB6K,KAAM1M,EAAMC,OAAOI,eCmcNsM,OAnZf,WACE,IAAMC,EAAa/C,yBAAezE,GAC5ByH,EAAYhD,yBAAehE,GACjC,EAAoCiH,yBAAe9H,GAAnD,YAAO+H,EAAP,KAAmBC,EAAnB,KACA,EACEF,yBAAexH,GADjB,YAAuB2H,GAAvB,WAEA,EACEH,yBAAevH,GADjB,YAAOqG,EAAP,KAAuBsB,EAAvB,KAEA,EAA0CJ,yBAAetH,GAAzD,YAAO2H,EAAP,KAAsBC,EAAtB,KAEA,EAAsCN,yBAAe/G,GAArD,YAAoBsH,GAApB,WACA,EAAwCP,yBAAevG,IAAvD,YAAqB+G,GAArB,WACMrG,EAAoB4C,yBAAerD,IACnCU,EAAqB2C,yBAAe/C,IACpCyG,EAAmBC,8BAAoBzH,GACvC0H,EAAoBD,8BAAoBjH,IAE9C,EAAoCuG,yBAAerH,GAAnD,YAAOiI,EAAP,KACA,GADA,KACsCZ,yBAAepH,IAArD,YAAOiI,EAAP,KAEA,GAFA,KAEwCC,mBAAsB,CAC5D,IAAI9J,KAAK,KAAM,EAAG,GAClB,IAAIA,KAAK,KAAM,EAAG,OAFpB,YAAO+J,EAAP,KAAqBC,EAArB,KAIA,EAAwCF,mBAAsB,CAC5DG,GACAC,MAFF,YAAOC,EAAP,KAAqBC,GAArB,KAKMC,GAAmBC,uBACvB,SAAClC,EAAyBmC,EAAeC,GACvC,OAAOC,YAAW,WAChBvB,GAAc,SAACwB,GACb,IAAMC,EAAO,KAAOD,GAOpB,OANIC,EAAQC,OAAO,GAAG,GAAG/J,EAAEiD,YAAcsE,EAAUvH,EAAEiD,WACnD6G,EAAQA,EAAQE,OAAS,GAAKzC,GAE9BuC,EAAQlC,KAAKL,GACTuC,EAAQE,OVnFa,IUmFmBF,EAAQG,SAE/CH,KAGTvB,EAAkBhB,EAAUrH,OAExBoC,EAAkBjB,iBACpBqH,GAAe,SAACmB,GACd,IAAMK,EAAS1C,qBAAUqC,GAGzB,OAFAK,EAAOvI,qBACL4F,EAAUrH,MAAQgK,EAAOzI,mBACpByI,KAEL5H,EAAkBf,aAAegG,EAAUnH,KAC7CwI,KAIArG,EAAmBlB,iBACrBsH,GAAgB,SAACkB,GACf,IAAMK,EAAS1C,qBAAUqC,GAGzB,OAFAK,EAAOvI,qBACL4F,EAAUrH,MAAQgK,EAAOzI,mBACpByI,KAEL3H,EAAmBhB,aAAegG,EAAUpH,MAC9C2I,KAIAY,IAAUC,GACZrB,GAAkB,KVpGS,IUsGJoB,KAE7B,CAACpH,EAAmBC,IAwDtB,OArDA4H,qBAAU,WACR,GAAIlC,EAAa,EAAG,CAClB,IAAMmC,EAA2B,GAC3BC,EAAWjC,EAAW2B,OAAO,GAAG,GAAG/J,EACnCsK,EAAW7E,GAAQ,IAAItG,KAAKkL,GAAW,GACvCE,EAAYnC,EAAW2B,OAAO,GAAG,GAAG7J,MACpCsK,EAAezD,GACnBuD,EACAC,EVpH4B,GUsH5BrC,EAAU3I,UACV2I,EAAU1I,QAEZiJ,EAAiB+B,EAAa,GAAGvK,MACjC,IAAK,IAAIqH,EAAI,EAAGA,EAAIkD,EAAaR,OAAQ1C,IAAK,CAC5C,IAAMC,EAAYiD,EAAalD,GAC/B8C,EAAOxC,KAAK4B,GAAiBjC,EAAWD,EAAGkD,EAAaR,OAAS,IAGnE,OAAO,WACLI,EAAOK,SAAQ,SAACC,GAAD,OAASC,aAAaD,UAGxC,CAACzC,IAEJkC,qBAAU,WACR,IAAMS,EAAgBxC,EAAW2B,OVpJA,IUuJ3Bc,EAAYD,EAAc,GAAG5K,EAC7BqK,EAAW,IAAIlL,KAAK0L,GAC1BR,EAASzE,QAAQiF,EAAUhF,UVzJM,IU0JjCsD,EAAgB,CAAC0B,EAAWR,IAG5B,IAAIS,EAAc,KACdC,EAAe,EAEnBH,EAAcH,SAAQ,SAACC,GACjBA,EAAItK,IAAM0K,IACZA,EAAcJ,EAAItK,KAEhBsK,EAAIvK,KAAO4K,IACbA,EAAeL,EAAIvK,SAIvBoJ,GAAgB,CACduB,EVzKgC,GU0KhCC,EV1KgC,OU4KjC,CAAC3C,IAGF,eAACjD,EAAA,QAAD,UACE,gBAAC,gBAAD,CACEtH,MAAOH,EACPsN,cAAe,CAAEhL,EVtLK,IUuLtBiL,mBACE,eAAC,0BAAD,CACEC,YAAa,gBAAGC,EAAH,EAAGA,MAAH,MAAe,eAAoBC,iBAAMD,EAAME,EAAG,IAC/DC,gBACE,eAAC,QAAD,CACElG,MAAO,CACLmG,OAAQlQ,EAAMC,OAAOkB,mBACrBgP,YAAa,KAInBC,qBACE,eAAC,gBAAD,CACErG,MAAO,CACL2C,KAAM1M,EAAMC,OAAOI,cACnBoM,SAAUzM,EAAM0B,KAAKG,wBAM/BkI,MAAO,CACLsG,OAAQ,CACNvN,gBAAiB,eAEnBwN,WAAY,CACV5D,KAAM1M,EAAMC,OAAOC,mBA7BzB,UAiCE,eAAC,eAAD,CACEqQ,eAAa,EACbC,QAAS,GACTC,YAAY,QACZ1G,MAAO,CACL2G,KAAM,CAAER,OAAQ,UAAWC,YAAa,IACxCQ,WAAY,CACVjE,KAAM1M,EAAMC,OAAOI,cACnBoM,SAAU,OAIhB,eAAC,WAAD,CACEmE,YVjOkB,EUkOlB7G,MAAO,CACL8G,KAAM,CACJV,YAAa,EACbD,OAAQ,SAACY,GAAD,OACNA,EAAEjM,MAAQiM,EAAElM,KACR5E,EAAMC,OAAOS,gBACbV,EAAMC,OAAOY,oBAGvBkQ,aAAc,CACZC,SAAUhR,EAAMC,OAAOS,gBACvBuQ,SAAUjR,EAAMC,OAAOY,kBAEzBgQ,KAAM9D,EACNmE,OAAQ,CACNvM,EAAGkJ,EACHmC,EAAG/B,KAKP,eAAC,gBAAD,CACEkD,KAAMvF,EAAezB,QAAQ,GAC7B2F,MAAO,CACLnL,EAAGyF,GAAQ,IAAItG,KAAK+J,EAAa,IAAK,GACtCmC,EAAGpE,EAAiB,GAEtBwF,WAAW,MACXrH,MAAOyC,GACP6E,kBAAmB,CAAC,CAAEC,KAAM,EAAGC,MAAO,EAAGC,IAAK,EAAGC,OAAQ,IACzDC,gBAAiB,CACf,CACEhF,KACEd,EAAiBuB,EACbnN,EAAMC,OAAOS,gBACbV,EAAMC,OAAOY,iBACnB8Q,QAAS,QAIf,eAAC,eAAD,CACET,OAAQ,CACNvM,EAAGkJ,EACHmC,EAAG/B,GAEL+B,EAAG,kBAAMpE,GACT7B,MAAO,CACL8G,KAAM,CACJX,OAAQ,SAACY,GAAD,OACNlF,EAAiBuB,EACbnN,EAAMC,OAAOS,gBACbV,EAAMC,OAAOY,kBACnBsP,YVjR0B,IUkR1ByB,gBVjR+B,MUuRpC3K,EAAkBjB,eACjB,eAAC,gBAAD,CACEmL,KAAK,qBACLrB,MAAO,CACLnL,EAAGyF,GAAQ,IAAItG,KAAK+J,EAAa,KVnSd,GUoSnBmC,EAAG/I,EAAkBf,aAEvBkL,WAAW,MACXrH,MAAOyC,KAGT,eAAC,gBAAD,CACE2E,KAAK,qBACLrB,MAAO,CACLnL,EAAGyF,GAAQ,IAAItG,KAAK+J,EAAa,KV7Sd,GU8SnBmC,EAAGtC,GAEL0D,WAAW,MACXrH,MAAOyC,KAGVvF,EAAkBjB,eACjB,eAAC,eAAD,CACEkL,OAAQ,CACNvM,EAAGkJ,EACHmC,EAAG/B,GAEL+B,EAAG,kBAAM/I,EAAkBf,aAC3B6D,MAAO,CACL8G,KAAM,CACJX,OAAQlQ,EAAMC,OAAOc,0BACrBoP,YVpTyB,QUyT/B,eAAC,eAAD,CACEe,OAAQ,CACNvM,EAAGkJ,EACHmC,EAAG/B,GAEL+B,EAAG,kBAAMtC,GACT3D,MAAO,CACL8G,KAAM,CACJX,OAAQlQ,EAAMC,OAAOe,4BACrBmP,YVlUyB,QUyUhCjJ,EAAmBlB,eAClB,eAAC,gBAAD,CACEmL,KAAK,qBACLrB,MAAO,CACLnL,EAAGyF,GAAQ,IAAItG,KAAK+J,EAAa,KVvVd,GUwVnBmC,EAAG9I,EAAmBhB,aAExBkL,WAAW,MACXrH,MAAOyC,KAGT,eAAC,gBAAD,CACE2E,KAAK,qBACLrB,MAAO,CACLnL,EAAGyF,GAAQ,IAAItG,KAAK+J,EAAa,KVjWd,GUkWnBmC,EAAGrC,GAELyD,WAAW,MACXrH,MAAOyC,KAGVtF,EAAmBlB,eAClB,eAAC,eAAD,CACEkL,OAAQ,CACNvM,EAAGkJ,EACHmC,EAAG/B,GAEL+B,EAAG,kBAAM9I,EAAmBhB,aAC5B6D,MAAO,CACL8G,KAAM,CACJX,OAAQlQ,EAAMC,OAAOgB,2BACrBkP,YVxWyB,QU6W/B,eAAC,eAAD,CACEe,OAAQ,CACNvM,EAAGkJ,EACHmC,EAAG/B,GAEL+B,EAAG,kBAAMrC,GACT5D,MAAO,CACL8G,KAAM,CACJX,OAAQlQ,EAAMC,OAAOiB,6BACrBiP,YVtXyB,QU6XhClJ,EAAkBjB,eACjB,eAAC,gBAAD,CACEmL,KAAK,qBACLrB,MAAO,CACLnL,EAAGyF,GAAQ,IAAItG,KAAK+J,EAAa,KV3Yd,GU4YnBmC,EAAG/I,EAAkBhB,WAEvBmL,WAAW,MACXrH,MAAOyC,KAEP,KACHvF,EAAkBjB,eACjB,eAAC,eAAD,CACEkL,OAAQ,CACNvM,EAAGkJ,EACHmC,EAAG/B,GAEL+B,EAAG,kBAAM/I,EAAkBhB,WAC3B8D,MAAO,CACL8G,KAAM,CACJX,OAAQlQ,EAAMC,OAAOmB,mBACrB+O,YVhZuB,IUiZvByB,gBVhZ4B,QUoZhC,KAGH1K,EAAmBlB,eAClB,eAAC,gBAAD,CACEmL,KAAK,qBACLrB,MAAO,CACLnL,EAAGyF,GAAQ,IAAItG,KAAK+J,EAAa,KVxad,GUyanBmC,EAAG9I,EAAmBjB,WAExBmL,WAAW,MACXrH,MAAOyC,KAEP,KACHtF,EAAmBlB,eAClB,eAAC,eAAD,CACEkL,OAAQ,CACNvM,EAAGkJ,EACHmC,EAAG/B,GAEL+B,EAAG,kBAAM9I,EAAmBjB,WAC5B8D,MAAO,CACL8G,KAAM,CACJX,OAAQlQ,EAAMC,OAAOmB,mBACrB+O,YV7auB,IU8avByB,gBV7a4B,QUibhC,WCpbGC,OARf,WACE,OACE,eAAC/H,EAAA,QAAD,CAAMC,MAAOtH,EAAWY,MAAxB,SACE,eAAC,GAAD,OCiBSyO,GAfU,WACvB,MAAwBlE,mBAAgB,CACtCpL,MAAO,EACPuP,OAAQ,EACRpN,EAAG,EACHqL,EAAG,IAJL,YAAOgC,EAAP,KAAaC,EAAb,KAWA,MAAO,CAAED,OAAME,SALE9D,uBAAY,SAAC+D,GAC5B,MAAgCA,EAAMC,YAAYC,OAA1C7P,EAAR,EAAQA,MAAOuP,EAAf,EAAeA,OAAQpN,EAAvB,EAAuBA,EAAGqL,EAA1B,EAA0BA,EAC1BiC,EAAQ,CAAEzP,QAAOuP,SAAQpN,IAAGqL,QAC3B,M,oBC2BUrG,uBA3Cf,YAUI,IATF2I,EASC,EATDA,WACAC,EAQC,EARDA,YACAC,EAOC,EAPDA,cACAC,EAMC,EANDA,SAOA,EAAgC7E,mBAC9B6E,EAAWzS,EAAMC,OAAOU,mBAAqBX,EAAMC,OAAOa,oBAD5D,YAAO4R,EAAP,KAAiBC,EAAjB,KAYA,OARA7D,qBAAU,WACR6D,EACEF,EACIzS,EAAMC,OAAOU,mBACbX,EAAMC,OAAOa,sBAElB,CAAC2R,IAGF,gBAAC,gBAAD,CACEjQ,MAAO8P,EAAW9P,OAAS,IAC3BuP,OAAQO,EAAWP,QAAU,IAC7B/H,QAAS,GACT4I,QAAS,CAAEC,SAAU,KACrBC,WAAY,CAACJ,EAAU,cALzB,UAOE,eAAC,WAAD,CACE7B,KAAM,CAAC,CAAElM,EAAG,IAAKqL,EAAGwC,IACpBO,OAAQ,gBAAGjD,EAAH,EAAGA,MAAH,OAAkB7F,KAAKC,KAAe,IAAV4F,EAAME,GAAlC,KACRjG,MAAO,CAAEgJ,OAAQ,CAAErG,KAAM,UACzBsG,eAAgB,eAAC,gBAAD,CAAcC,GAAI,GAAIC,GAAI,IAC1CC,SAAU,KAEZ,eAAC,WAAD,CAAYtC,KAAM,CAAC,CAAElM,EAAG,IAAKqL,EAAGuC,IAAgBY,SAAU,WC5BjDxJ,I,kBAAAA,mBAVf,WACE,OACE,eAACG,EAAA,QAAD,CACEC,MAAO,CAAE7G,eAAgB,SAAUC,WAAY,SAAUiQ,WAAY,IADvE,SAGE,eAAChK,GAAD,sECMOiK,GAAatL,UAAOuL,iBAAV,4HACD,SAACrL,GAAD,OAClBA,EAAMjI,MAAMC,OAAOqB,8BAMViS,GAAyBxL,kBAAOsL,GAAPtL,CAAH,iGACb,SAACE,GAAD,OAClBA,EAAMjI,MAAMC,OAAOoB,gCACV,SAAC4G,GAAD,OAAoCA,EAAMuL,SAAW,GAAM,KAK3DC,GAAuB1L,kBAAOsL,GAAPtL,CAAH,kFACX,SAACE,GAAD,OAClBA,EAAMjI,MAAMC,OAAOsB,+BAKVmS,GAAsB3L,kBAAOsL,GAAPtL,CAAH,gFACV,SAACE,GAAD,OAClBA,EAAMU,OACFV,EAAMjI,MAAMC,OAAOQ,gBACnBwH,EAAMjI,MAAMC,OAAOW,oBAKd+S,GAA8B5L,kBAAOsL,GAAPtL,CAAH,gFAClB,SAACE,GAAD,OAClBA,EAAMjI,MAAMC,OAAOwB,8BAKVmS,GAA0B7L,kBAAOsL,GAAPtL,CAAH,gFACd,SAACE,GAAD,OAClBA,EAAMjI,MAAMC,OAAOuB,iCCpCRmI,uBAVf,YAAkE,IAA3ChB,EAA0C,EAA1CA,OAAQkL,EAAkC,EAAlCA,aAC7B,OACE,eAACJ,GAAD,CAAsBK,QAASD,EAA/B,SACE,eAAC1K,GAAD,CAAyBR,OAAQA,EAAjC,kDCyBSoL,OAvBf,YAI8B,IAH5B7N,EAG2B,EAH3BA,YACAD,EAE2B,EAF3BA,UACA0C,EAC2B,EAD3BA,OAEA,OACE,gBAACmB,EAAA,QAAD,CAAMC,MAAO,CAAE/G,cAAe,OAA9B,UACE,gBAAC8G,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,KAArB,UACE,eAACgG,GAAD,iCACA,eAACE,GAAD,CAAiBJ,OAAQA,EAAzB,SACGjB,GAAoBsM,OAAO9N,EAAYiE,QAAQ,UAGpD,gBAACL,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,GAArB,UACE,eAACgG,GAAD,iCACA,eAACG,GAAD,UACGtB,GAAoBsM,OAAO/N,EAAUkE,QAAQ,cCZzCR,uBAVf,YAAsE,IAA3CxD,EAA0C,EAA1CA,SAAUwC,EAAgC,EAAhCA,OACnC,OACE,eAACmB,EAAA,QAAD,UACE,gBAAClB,GAAD,CAAyBD,OAAQA,EAAjC,cACIxC,UCyBKwD,uBAvBf,YAI2B,IAHzBtD,EAGwB,EAHxBA,kBACA4N,EAEwB,EAFxBA,wBACApN,EACwB,EADxBA,WAEA,OACE,gBAACiD,EAAA,QAAD,CAAMC,MAAO,CAAE/G,cAAe,OAA9B,UACE,gBAAC8G,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,KAArB,UACE,eAACgG,GAAD,kCACA,eAACC,GAAD,UACGpB,GAAoBuC,KAAKC,KAAK7D,SAGnC,gBAACyD,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,GAArB,UACE,eAACgG,GAAD,kCACA,eAACK,GAAD,CAAuBrC,WAAYA,EAAnC,SACGa,GAAoBuC,KAAKC,KAAK+J,eCY1BtK,uBA7Bf,YAIwB,IAHtBjD,EAGqB,EAHrBA,cACAC,EAEqB,EAFrBA,WACAE,EACqB,EADrBA,WAEA,OACE,gBAACiD,EAAA,QAAD,CACEC,MAAO,CACL/G,cAAe,MACfE,eAAgB,eAChBC,WAAY,UAJhB,UAOE,gBAAC2G,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,KAArB,UACE,eAACoG,GAAD,8CACA,gBAACC,GAAD,CAAuBrC,WAAYA,EAAnC,UACGa,GAAoBuC,KAAKC,KAAKxD,IADjC,SACmD,UAGrD,gBAACoD,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,GAArB,UACE,eAACoG,GAAD,iCACA,gBAACC,GAAD,CAAuBrC,WAAYA,EAAnC,WACiB,IAAbF,GAAkBwD,QAAQ,GAD9B,gBCFOR,uBAxBf,YAA8C,IAA1BhB,EAAyB,EAAzBA,OAClB,OACE,eAACmB,EAAA,QAAD,CACEC,MAAO,CACLmK,UAAW,EACXC,aAAc,EACd3R,MAAO,GACPuP,OAAQ,GACRqC,aAAc,EACd9Q,SAAU,SACVH,WAAY,SACZD,eAAgB,SAChBJ,gBAAiB6F,EACb3I,EAAMC,OAAOM,kBACbP,EAAMC,OAAOO,mBAZrB,SAeE,eAACkI,GAAD,CAAsBC,OAAQA,EAA9B,SACGA,EAAS,SAAM,gBCyBT0L,OArCf,YAIsB,IAHpBC,EAGmB,EAHnBA,cACAT,EAEmB,EAFnBA,aACAlL,EACmB,EADnBA,OAEA,OACE,gBAACmB,EAAA,QAAD,CAAMC,MAAO,CAAEgI,OAAQ,OAAQ/O,cAAe,SAAUgH,QAAS,GAAjE,UACE,gBAACF,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGG,cAAe,MAAOuR,aAAc,IAA5D,UACE,gBAACzK,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGG,cAAe,MAAOG,WAAY,UAA1D,UACE,eAAC,GAAD,CAAUwF,OAAQA,IAClB,eAAC,GAAD,CAAiBA,OAAQA,EAAQxC,SAAUmO,EAAcnO,cAE3D,eAAC2D,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,GAArB,SACE,eAAC,GAAD,CAAa8F,OAAQA,EAAQkL,aAAcA,SAG/C,gBAAC/J,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGK,eAAgB,gBAAxC,UACE,eAAC,GAAD,CACEwD,cAAe4N,EAAc5N,cAC7BC,WAAY2N,EAAc3N,WAC1BE,WAAYyN,EAAczN,aAE5B,eAAC,GAAD,CACER,kBAAmBiO,EAAcjO,kBACjC4N,wBAAyBK,EAAc1N,WACvCC,WAAYyN,EAAczN,aAE5B,eAAC,GAAD,CACEX,YAAaoO,EAAcpO,YAC3BD,UAAWqO,EAAcrO,UACzB0C,OAAQA,WCpBHgB,uBAdf,YAI6B,IAH3B2K,EAG0B,EAH1BA,cACAT,EAE0B,EAF1BA,aACAlL,EAC0B,EAD1BA,OAEA,OACE,eAAC,GAAD,CACE2L,cAAeA,EACfT,aAAcA,EACdlL,OAAQA,OCuFCgB,uBAxFf,WACE,IAAM6K,EAAiB3K,yBAAevE,GAChCuH,EAAYhD,yBAAehE,GAEjC,EAAsCiH,yBAAenH,GAArD,YAAoB8O,GAApB,WACMxN,EAAoB4C,yBAAerD,IACnC+G,EAAmBC,8BAAoBzH,GACvCmB,EAAqB2C,yBAAe/C,IACpC2G,EAAoBD,8BAAoBjH,IACxCmO,EAAc7K,yBAAe1C,IAEnC,EAAsCyG,mBACpC8G,EAAYlN,KAAOkN,EAAY9N,YADjC,YAAO2L,EAAP,KAAoBoC,EAApB,KAGA,EAA0C/G,mBACxC8G,EAAYjN,gBAAkBiN,EAAY9N,YAD5C,YAAO4L,EAAP,KAAsBoC,EAAtB,KAIA,EAA2B9C,KAAnBE,EAAR,EAAQA,KAAME,EAAd,EAAcA,SAoCd,OAPApD,qBAAU,WACH0F,IACHG,EAAeD,EAAYlN,KAAOkN,EAAY9N,YAC9CgO,EAAiBF,EAAYjN,gBAAkBiN,EAAY9N,eAE5D,CAAC4N,EAAgBE,IAGlB,gBAAC5K,EAAA,QAAD,CAAMC,MAAOtH,EAAWe,aAAxB,UACE,eAACsG,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,GAAKqP,SAAUA,EAApC,SACE,eAAC,GAAD,CACEI,WAAYN,EACZO,YAAaA,EACbC,cAAeA,EACfC,SAAUxL,EAAkBjB,mBAGhC,gBAAC8D,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,KAArB,UACGoE,EAAkBjB,eACjB,eAAC,GAAD,CACEsO,cAAerN,EACf4M,aAhDe,WAClBW,IACHC,GACE,SAACjG,GAAD,OACEA,EACAvH,EAAkBL,YACf,EACEiG,EAAUzI,mBAAqB6C,EAAkBd,SAAY,QAEtEoH,MAwCM5E,QAAQ,IAER,KACHzB,EAAmBlB,eAClB,eAAC,GAAD,CACEsO,cAAepN,EACf2M,aA1CgB,WACnBW,IACHC,GACE,SAACjG,GAAD,OACEA,EACAtH,EAAmBN,YAChB,EACEiG,EAAUzI,mBAAqB8C,EAAmBf,SACjD,QAEVsH,MAiCM9E,QAAQ,IAER,KACF1B,EAAkBjB,gBACnBkB,EAAmBlB,eAEhB,KADF,eAAC,GAAD,aCvFK6O,OATf,WACE,OACE,gBAAC/K,EAAA,QAAD,CAAMC,MAAOtH,EAAWkB,KAAxB,UACE,eAACmE,GAAD,mBACA,eAACA,GAAD,uC,mBCCAgN,GAAc,SAClBtB,EACAuB,EACAC,EACAC,EACAC,GAEA,OAAOxS,UAAWC,OAAO,CACvBwS,UAAW,CACTrS,gBAAiB,cACjBN,MAAO,OACPuP,OAAQ,OACR/O,cAAe,MACf2O,QAAS6B,EAAW,GAAM,GAE5B4B,IAAK,CACHvS,KAAM,EACNC,gBAAiB,aACjBuS,YAAa,EACbC,YAAa,QACbC,YACER,IAAkBG,EAAYF,EAAgBC,EAChD9R,WAAY,SACZD,eAAgB,aAKhBsS,GAAY,SAChBhC,EACAuB,EACAC,EACAC,EACAC,GAEA,OAAOxS,UAAWC,OAAO,CACvBwO,KAAM,CACJ9M,MAAO0Q,IAAkBG,EAAYF,EAAgBC,MAgE5CtL,uBAlDf,YAO6B,IAN3B8L,EAM0B,EAN1BA,QACAhR,EAK0B,EAL1BA,MACAiR,EAI0B,EAJ1BA,iBACAlC,EAG0B,EAH1BA,SAG0B,IAF1BwB,qBAE0B,MAFV,UAEU,MAD1BC,wBAC0B,MADP,UACO,EAO1B,OACE,eAACnL,EAAA,QAAD,CAAMC,MAAO+K,GAAYtB,GAAU2B,UAAnC,SACGM,EAAQE,KAAI,SAACtG,EAAKhB,GAAN,OACX,eAACiF,GAAA,QAAD,CAEEQ,QAAS,SAAC8B,GAAD,OATfC,EAS4CxG,EAAI5K,WAPhDiR,EAAiBG,GAJI,IAErBA,GAUM9L,MACE+K,GACEtB,EACA/O,EACAuQ,EACAC,EACA5F,EAAI5K,OACJ2Q,IAEJ5B,SAAUA,EAZZ,SAcE,eAACxL,GAAA,QAAD,CACE+B,MACEyL,GACEhC,EACA/O,EACAuQ,EACAC,EACA5F,EAAI5K,OACJ0M,KARN,SAWG9B,EAAI7K,SAxBF6J,W,UChBA1E,uBA7Cf,YAK2B,IAJzB2I,EAIwB,EAJxBA,WACAwD,EAGwB,EAHxBA,eACAC,EAEwB,EAFxBA,WACAC,EACwB,EADxBA,cAKA,OACE,gBAAClM,EAAA,QAAD,CACEC,MAAO,CACL/G,cAAe,MACfG,WAAY,SACZD,eAAgB,gBAJpB,UAOE,eAAC+S,GAAA,QAAD,CACEC,aAAiC,GAAnB5D,EAAW9P,OAAe,IACxC2T,OAAQ,CAACJ,GACTK,eAdoB,SAAC3R,GACzBuR,EAAcvR,EAAM,KAchB8G,IAAK,EACLC,IAAK,IACL6K,KAAM,EACNC,SAAS,EACTC,YAAa,CACX/T,MAAO,GACPuP,OAAQ,GACRjP,gBAAiBgT,EACb9V,EAAMC,OAAOQ,gBACbT,EAAMC,OAAOW,kBAEnB4V,cAAe,CACb1T,gBAAiBgT,EACb9V,EAAMC,OAAOQ,gBACbT,EAAMC,OAAOW,kBAEnB6V,WAAY,CAAE3T,gBAAiB9C,EAAMC,OAAOK,qBAG9C,gBAAC+I,GAAD,eAA2B0M,EAA3B,aClCSpM,uBAXf,YAA4D,IAAnC+M,EAAkC,EAAlCA,WACvB,OACE,gBAAC5M,EAAA,QAAD,CAAMC,MAAO,CAAE/G,cAAe,MAAOG,WAAY,UAAjD,UACE,eAACkG,GAAD,8BACA,eAACC,GAAD,UACG5B,GAAoBgP,WCwBd/M,uBA3Bf,YAM6B,IAL3BmM,EAK0B,EAL1BA,eACAa,EAI0B,EAJ1BA,eACAxQ,EAG0B,EAH1BA,SACAyQ,EAE0B,EAF1BA,YACApD,EAC0B,EAD1BA,SAEA,OACE,eAAC1J,EAAA,QAAD,CAAMC,MAAO,CAAEvH,MAAO,OAAQuP,OAAQ,QAAtC,SACE,eAACjI,EAAA,QAAD,CAAMC,MAAO,CAAEmK,UAAW,IAA1B,SACE,eAAC,GAAD,CACEuB,QAASlR,EACTE,MAAOkS,GAAkCxQ,EACzCuP,iBAAkBkB,EAClBpD,SAAUA,EACVwB,cACEc,EACI9V,EAAMC,OAAOQ,gBACbT,EAAMC,OAAOW,iBAEnBqU,iBAAkBjV,EAAMC,OAAOK,2BCG1BqJ,uBAtBf,YAIyB,IAHvBmM,EAGsB,EAHtBA,eACApI,EAEsB,EAFtBA,WACAC,EACsB,EADtBA,YAEA,OACE,gBAAC7D,EAAA,QAAD,CACEC,MAAO,CACL/G,cAAe,MACfG,WAAY,UAHhB,UAME,eAACkG,GAAD,kCACA,eAACE,GAAD,CAA+BZ,OAAQmN,EAAvC,SAEMpO,GADHoO,EACuB7L,KAAKC,KAAKwD,GACVzD,KAAKC,KAAKyD,YCR3BhE,uBAXf,YAA4D,IAAnCkN,EAAkC,EAAlCA,WACvB,OACE,gBAAC/M,EAAA,QAAD,CAAMC,MAAO,CAAE/G,cAAe,MAAOG,WAAY,UAAjD,UACE,eAACkG,GAAD,0CACA,gBAACC,GAAD,WACG5B,GAAoBuC,KAAKC,KAAK2M,IADjC,kBCaSlN,uBAlBf,YAIsB,IAHpB6K,EAGmB,EAHnBA,eACAsC,EAEmB,EAFnBA,cACAC,EACmB,EADnBA,MAEA,OACE,eAACrD,GAAD,CACE/K,OAAQoO,EACRjD,QAASgD,EACTtD,SAAUgB,EAHZ,SAKE,eAAChL,GAAD,CAAgBb,OAAQoO,EAAxB,SACGA,EAAQ,eAAY,uBCQdpN,uBAlBf,YAAgF,IAA/CqN,EAA8C,EAA9CA,eACzBnK,EAAYhD,yBAAehE,GAEjC,OACE,gBAACiE,EAAA,QAAD,CACEC,MAAO,CACL/G,cAAe,MACfG,WAAY,UAHhB,UAME,eAACkG,GAAD,wCACA,gBAACC,GAAD,CAAyBS,MAAO,CAAE1F,MAAOwI,EAAUxI,OAAnD,UACG2S,EADH,aCkPSC,OA/Of,YAMI,IALFzD,EAKC,EALDA,SACAmD,EAIC,EAJDA,eAMM9J,EAAYhD,yBAAehE,GACjC,EAAsCiH,yBAAenH,GAArD,YAAOyB,EAAP,KAAoBqN,EAApB,KACA,EAAoC3H,yBAAerH,GAAnD,YAAOiI,EAAP,KAAmBwJ,EAAnB,KACA,EAAsCpK,yBAAepH,GAArD,YAAOiI,EAAP,KAAoBwJ,EAApB,KACMvL,EAAiB/B,yBAAetE,GACtC,EAAsCuH,yBAAe/G,GAArD,YAAoBsH,GAApB,WACA,EAAwCP,yBAAevG,IAAvD,YAAqB+G,GAArB,WACMrG,EAAoB4C,yBAAerD,IACnCU,EAAqB2C,yBAAe/C,IAEpC0N,EAAiB3K,yBAAevE,GAChCwQ,EAAiBjM,yBAAexE,GAEtC,EAAgCuI,mBAAS,GAAzC,YAAOzH,EAAP,KAAiByQ,EAAjB,KACA,EAAoChJ,mBAAS,GAA7C,YAAOmI,EAAP,KAAmBC,EAAnB,KACA,EAAoCpI,mBAAS,GAA7C,YAAOiJ,EAAP,KAAmBO,EAAnB,KACA,EAAoCxJ,mBAAS,GAA7C,YAAO8I,EAAP,KAAmBW,EAAnB,KAEA,GAA2BvF,KAAnBE,GAAR,GAAQA,KAAME,GAAd,GAAcA,SAERoF,GAAmBlJ,uBAAY,WACnC,GAAI0H,IACGtB,EAAgB,CACnB,GAAItN,EAAmBlB,eACrBuR,MAAM,4IACD,IAAKtQ,EAAkBjB,gBAAkB0Q,EAAa,EAAG,CAC9DjC,GAAe,SAACjG,GAAD,OAAUA,EAAOqI,KAUhCxJ,EATuB,CACrBrH,gBAAgB,EAChBC,UAAW2F,EACX1F,YAAawH,EACbvH,SAAUA,EACVE,kBAAmBuF,EAAiB8K,EACpCtQ,mBAAoBsQ,EACpBpQ,qBAAsBsF,EAAiB8K,SAGhCzP,EAAkBjB,gBAAkB0Q,EAAa,GAC1DjC,GAAe,SAACjG,GAAD,OAAUA,EAAOqI,KAChCxJ,GAAe,SAACmB,GACd,IAAMK,EAAS1C,qBAAUqC,GACnBgJ,EAAuB5L,EAAiB8K,EAe9C,OAdA7H,EAAO5I,WACJ4I,EAAO5I,UAAY4I,EAAOzI,mBACzBoR,IACD3I,EAAOzI,mBAAqBsQ,GAE/B7H,EAAOzI,mBAAqByI,EAAOzI,mBAAqBsQ,EAExD7H,EAAOxI,kBACLwI,EAAOxI,kBAAoBmR,EAE7B3I,EAAOvI,qBACLuI,EAAOvI,qBAAuBkR,EAEhC3I,EAAO3I,YAAc2I,EAAO5I,WAAa,EAAI,EAAI4I,EAAO1I,UACjD0I,MAEe,IAAf6H,GACTa,MAAM,qEAERvB,EAAc,MAGjB,CACDF,EACAtB,EACAvN,EACA4P,EACAH,IAGIe,GAAoBrJ,uBAAY,WACpC,IAAK0H,IACEtB,EAAgB,CACnB,GAAIvN,EAAkBjB,eACpBuR,MAAM,4IACD,IAAKrQ,EAAmBlB,gBAAkB0Q,EAAa,EAAG,CAC/DjC,GAAe,SAACjG,GAAD,OAAUA,EAAOqI,KAUhCvJ,EATwB,CACtBtH,gBAAgB,EAChBC,UAAW2F,EACX1F,YAAayH,EACbxH,SAAUA,EACVE,kBAAmBuF,EAAiB8K,EACpCtQ,mBAAoBsQ,EACpBpQ,qBAAsBsF,EAAiB8K,SAGhCxP,EAAmBlB,gBAAkB0Q,EAAa,GAC3DjC,GAAe,SAACjG,GAAD,OAAUA,EAAOqI,KAChCvJ,GAAgB,SAACkB,GACf,IAAMK,EAAS1C,qBAAUqC,GACnBgJ,EAAuB5L,EAAiB8K,EAe9C,OAdA7H,EAAO5I,WACJ4I,EAAO5I,UAAY4I,EAAOzI,mBACzBoR,IACD3I,EAAOzI,mBAAqBsQ,GAE/B7H,EAAOzI,mBAAqByI,EAAOzI,mBAAqBsQ,EAExD7H,EAAOxI,kBACLwI,EAAOxI,kBAAoBmR,EAE7B3I,EAAOvI,qBACLuI,EAAOvI,qBAAuBkR,EAEhC3I,EAAO3I,YAAc2I,EAAO5I,WAAa,EAAI,EAAI4I,EAAO1I,UACjD0I,MAEe,IAAf6H,GACTa,MAAM,qEAERvB,EAAc,MAGjB,CACDF,EACAtB,EACAtN,EACA2P,EACAH,IA2CF,OAxCA5H,qBAAU,WACR,IAAM4I,EAActQ,EAAc2O,EAAc,IAC1C4B,EAAiB1N,KAAK2N,MAC1BF,GACG9L,GAAkB,EAAKiB,EAAUzI,mBAAqB,IAAO+B,KAElEkR,EAAcM,KACb,CAAC5B,EAAY5P,IAEhB2I,qBAAU,WACRsI,EACExL,EACE8K,GACC,EAAK7J,EAAUzI,mBAAqB,IAAO+B,MAE/C,CAACyF,EAAgB8K,IAEpB5H,qBAAU,WAWR,OAVI0F,GACF0C,EAAc,GACdC,EAAe,IAEXrB,EACFoB,EAActL,GAAkB,EAAI,EAAIzF,IAExCgR,EAAevL,GAAkB,EAAI,EAAIzF,IAGtC,WACL+Q,EAAc,GACdC,EAAe,MAEhB,CAACvL,EAAgBzF,EAAUqO,EAAgBsB,IAE9ChH,qBAAU,WACJ0F,GACFwB,EAAc,KAEf,CAACxB,IAGF,gBAAC1K,EAAA,QAAD,CAAMC,MAAO,CAAEgI,OAAQ,OAAQvP,MAAO,QAAU0P,SAAUA,GAA1D,UACE,eAACpI,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,KAArB,SACE,eAAC,GAAD,CACEiT,eAAgBA,EAChBa,eAAgBA,EAChBxQ,SAAUA,EACVyQ,YAAaA,EACbpD,SAAUA,MAGd,gBAAC1J,EAAA,QAAD,CACEC,MAAO,CACLlH,KAAM,IACNG,cAAe,MACfG,WAAY,SACZD,eAAgB,UALpB,UAQE,gBAAC4G,EAAA,QAAD,CACEC,MAAO,CAAEgI,OAAQ,OAAQlP,KAAM,EAAGK,eAAgB,gBADpD,UAGE,eAAC,GAAD,CAAe2T,WAAYA,IAC3B,eAAC,GAAD,CAAeH,WAAYA,OAE7B,gBAAC5M,EAAA,QAAD,CACEC,MAAO,CAAEgI,OAAQ,OAAQlP,KAAM,EAAGK,eAAgB,gBADpD,UAGE,eAAC,GAAD,CACE4S,eAAgBA,EAChBpI,WAAYA,EACZC,YAAaA,IAEf,eAAC,GAAD,CACEqJ,eAAgBnK,EAAUzI,2BAIhC,eAAC0F,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,KAArB,SACE,eAAC,GAAD,CACEyP,WAAYN,GACZ8D,eAAgBA,EAChBC,WAAYA,EACZC,cAAeA,MAGnB,eAAClM,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,IAAKG,cAAe,OAAzC,SACE,eAAC8G,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGM,WAAY,UAApC,SACG2S,EACC,eAAC,GAAD,CACEtB,eAAgBA,EAChBsC,cAAeQ,GACfP,OAAO,IAGT,eAAC,GAAD,CACEvC,eAAgBA,EAChBsC,cAAeW,GACfV,OAAO,YChPNc,OAbf,WACE,IAAM5Q,EAAoB4C,yBAAerD,IAEzC,OACE,eAAC,GAAD,CACEgN,SAAUvM,EAAkBjB,eAC5B2Q,eACE1P,EAAkBjB,eAAiBiB,EAAkBd,SAAW,QCKzD2R,OAZf,WACE,IAAM5Q,EAAqB2C,yBAAe/C,IAC1C,OACE,eAAC,GAAD,CACE0M,SAAUtM,EAAmBlB,eAC7B2Q,eACEzP,EAAmBlB,eAAiBkB,EAAmBf,SAAW,QC6B3D4R,OA7Bf,WACE,MAA4CjL,yBAC1CzH,GADF,YAAOyQ,EAAP,KAAuBkC,EAAvB,KAGA,OACE,gBAAClO,EAAA,QAAD,CAAMC,MAAOtH,EAAWiB,MAAxB,UACE,eAACoG,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGC,gBAAiB9C,EAAMC,OAAOC,kBAAtD,SACE,eAAC,GAAD,CACEuV,QAAS,CACP,CAAEjR,MAAO,SAAKC,OAAO,GACrB,CAAED,MAAO,SAAKC,OAAO,IAEvBA,MAAOqR,EACPJ,iBAAkBsC,EAClBhD,cACEc,EACI9V,EAAMC,OAAOQ,gBACbT,EAAMC,OAAOW,iBAEnBqU,iBAAkBjV,EAAMC,OAAOK,sBAGnC,eAACwJ,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAGC,gBAAiB9C,EAAMC,OAAOC,kBAAtD,SACG4V,EAAiB,eAAC,GAAD,IAA0B,eAAC,GAAD,UClBrCmC,OATf,WACE,OACE,gBAACnO,EAAA,QAAD,CAAMC,MAAOtH,EAAWgB,aAAxB,UACE,eAAC,GAAD,IACA,eAAC,GAAD,QC4DSyU,OAjDf,WACE,MAAoCpL,yBAAe1H,GAAnD,YAAmB+S,GAAnB,WACMC,EAAmB5K,8BAAoB7H,GACvC4H,EAAmBC,8BAAoBzH,GACvC0H,EAAoBD,8BAAoBjH,IACxC8R,EAAmB7K,8BAAoB5H,GAC7C,EACEkH,yBAAexH,GADjB,YAAOkP,EAAP,KAAuBvH,EAAvB,KAaA,OACE,gBAACnD,EAAA,QAAD,CAAMC,MAAOtH,EAAWmB,kBAAxB,UACE,eAACkG,EAAA,QAAD,CACEC,MAAO,CAAElH,KAAM,EAAGK,eAAgB,aAAcC,WAAY,UAD9D,SAGE,eAACwQ,GAAD,CACEG,QAbmB,WACzBsE,IACA7K,IACAE,IACA4K,KAUM7E,SAAUgB,EAFZ,SAIE,eAAC/K,GAAD,+BAGJ,eAACK,EAAA,QAAD,CACEC,MAAO,CACLlH,KAAM,IACNK,eAAgB,aAChBC,WAAY,UAJhB,SAOE,eAACyQ,GAAD,CACEE,QA/BgB,WACtB7G,GAAkB,GAClBkL,GAAc,SAAC3J,GAAD,OAAUA,EAAO,MA8BzBgF,SAAUgB,EAFZ,SAIE,eAAC9K,GAAD,gCC9CKC,uBARf,YAA8D,IAArCnF,EAAoC,EAApCA,MAAOH,EAA6B,EAA7BA,MAC9B,OACE,eAACyF,EAAA,QAAD,CAAMC,MAAO,CAAEjH,gBAAiBuB,EAAO2F,QAAS,EAAGsO,YAAa,GAAhE,SACE,eAACjQ,GAAD,UAAiB7D,S,oBCURmF,uBAbf,YAAoE,IAAxC4O,EAAuC,EAAvCA,aAC1B,OACE,gBAACzO,EAAA,QAAD,CAAMC,MAAO,CAAEvH,MAAO,OAAtB,UACE,eAACgW,GAAA,QAAD,CAAaC,SAAUF,EAAclU,MAAOqU,UAAOC,YACnD,eAAC7O,EAAA,QAAD,CAAMC,MAAO,CAAE5G,WAAY,YAA3B,SACE,gBAACmF,GAAD,YACmB,IAAfiQ,GAAoBpO,QAAQ,GADhC,eC6BOR,uBA3Bf,YAAkE,IAAzCiP,EAAwC,EAAxCA,iBACvB,EAAsC9L,yBAAelH,GAArD,YAAO5B,EAAP,KAAoB6U,EAApB,KACMT,EAAmB5K,8BAAoB7H,GACvC4H,EAAmBC,8BAAoBzH,GACvC0H,EAAoBD,8BAAoBjH,IAW9C,OACE,eAACuD,EAAA,QAAD,CAAMC,MAAO,CAAE7G,eAAgB,SAAUC,WAAY,UAArD,SACE,eAACoQ,GAAD,CACEC,UAAWoF,EACX9E,QAbiB,WACjB9P,EAAc,IAChB6U,GAAe,SAACrK,GAAD,OAAUA,EAAO,KAChC4J,IACA7K,IACAE,MAMA,SAIE,eAAClF,GAAD,wCCoBOoB,uBA1Cf,WACE,IAAM3F,EAAc6F,yBAAejE,GAC7BiH,EAAYhD,yBAAehE,GAC3B+D,EAAeC,yBAAe1C,IAC9BqN,EAAiB3K,yBAAevE,GACtC,EAAwCsI,mBACtChE,EAAahD,WAAaiG,EAAUvI,MADtC,YAAOiU,EAAP,KAAqBO,EAArB,KAGA,EAAgDlL,mBAC9C2K,GAAgB,GADlB,YAAOK,EAAP,KAAyBG,EAAzB,KAcA,OAVAjK,qBAAU,WACH0F,GACHsE,EAAgBlP,EAAahD,WAAaiG,EAAUvI,QAErD,CAACkQ,EAAgBxQ,IAEpB8K,qBAAU,WACRiK,EAAoBR,GAAgB,KACnC,CAACA,IAGF,gBAACzO,EAAA,QAAD,CAAMC,MAAOtH,EAAWW,MAAxB,UACE,gBAAC0G,EAAA,QAAD,CACEC,MAAO,CACLlH,KAAM,IACNG,cAAe,MACfE,eAAgB,WAChBC,WAAY,YALhB,UAQE,eAAC,GAAD,CAAeqB,MAAOqI,EAAU5I,UAAWI,MAAOwI,EAAUxI,QAC5D,eAAC,GAAD,CAAkBkU,aAAcA,OAElC,eAACzO,EAAA,QAAD,CAAMC,MAAO,CAAElH,KAAM,EAAG0R,aAAc,IAAtC,SACE,eAAC,GAAD,CAAeqE,iBAAkBA,YCzB1BI,OAhBf,WACE,OACE,qCACE,gBAAClP,EAAA,QAAD,CAAMC,MAAOtH,EAAWG,QAAxB,UACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,UCdO,SAASqW,KACtB,OACE,eAAC,aAAD,UACE,gBAAC,gBAAD,CAAejZ,MAAOA,EAAtB,UACE,eAAC,GAAD,IACA,eAACkZ,EAAA,UAAD,CAAWnP,MAAM,iB","file":"static/js/app.905a14ed.chunk.js","sourcesContent":["interface IColors {\r\n  backgroundColor1: string;\r\n  backgroundColor2: string;\r\n  backgroundColor3: string;\r\n\r\n  baseTextColor: string;\r\n  toneDownTextColor: string;\r\n  positiveTextColor: string;\r\n  negativeTextColor: string;\r\n\r\n  longButtonColor: string;\r\n  longCandleColor: string;\r\n  positivePriceColor: string;\r\n\r\n  shortButtonColor: string;\r\n  shortCandleColor: string;\r\n  negativePriceColor: string;\r\n\r\n  longLiquidActiveLineColor: string;\r\n  longLiquidInactiveLineColor: string;\r\n\r\n  shortLiquidActiveLineColor: string;\r\n  shortLiquidInactiveLineColor: string;\r\n\r\n  crossHairLineColor: string;\r\n\r\n  openPriceLineColor: string;\r\n\r\n  LevelUpButtonBackgroundColor: string;\r\n\r\n  CloseButtonBackgroundColor: string;\r\n  CloseButtonBackgroundColor2: string;\r\n\r\n  resetButtonBackgroundColor: string;\r\n  nextTurnButtonBackgroundColor: string;\r\n}\r\n\r\nconst colors: IColors = {\r\n  backgroundColor1: \"#161A1E\",\r\n  backgroundColor2: \"#1e2227ff\",\r\n  backgroundColor3: \"#303030ff\",\r\n\r\n  baseTextColor: \"#FFFFFF\",\r\n  toneDownTextColor: \"#bebebe\",\r\n  positiveTextColor: \"#32D993\",\r\n  negativeTextColor: \"#F6465D\",\r\n\r\n  longButtonColor: \"#32D993\",\r\n  longCandleColor: \"#0ECB81\",\r\n  positivePriceColor: \"#13B074\",\r\n\r\n  shortButtonColor: \"#F6465D\",\r\n  shortCandleColor: \"#F6465D\",\r\n  negativePriceColor: \"#F6465D\",\r\n\r\n  longLiquidActiveLineColor: \"#2be6ff\",\r\n  longLiquidInactiveLineColor: \"#2be6ff8e\",\r\n\r\n  shortLiquidActiveLineColor: \"#ee32ff\",\r\n  shortLiquidInactiveLineColor: \"#ee32ff8c\",\r\n\r\n  crossHairLineColor: \"#FFFFFF\",\r\n\r\n  openPriceLineColor: \"#ffc56e\",\r\n\r\n  LevelUpButtonBackgroundColor: \"#00b052\",\r\n\r\n  CloseButtonBackgroundColor: \"#ffffff\",\r\n  CloseButtonBackgroundColor2: \"#f2b71c\",\r\n\r\n  nextTurnButtonBackgroundColor: \"#6c17ff\",\r\n  resetButtonBackgroundColor: \"#ff1616\",\r\n};\r\n\r\ninterface IFont {\r\n  bigValueFontSize: string;\r\n  midiumValueFontSize: string;\r\n  smallValueFontSize: string;\r\n\r\n  bigRateFontSize: string;\r\n\r\n  midiumTextFontSize: string;\r\n  bigTextFontSize: string;\r\n  smallTextFontSize: string;\r\n\r\n  boldFontWeight: number;\r\n  regularFontWeight: number;\r\n  lightFontWeight: number;\r\n}\r\n\r\nconst font: IFont = {\r\n  bigValueFontSize: \"16px\",\r\n  midiumValueFontSize: \"14px\",\r\n  smallValueFontSize: \"12px\",\r\n\r\n  bigRateFontSize: \"14px\",\r\n\r\n  bigTextFontSize: \"16px\",\r\n  midiumTextFontSize: \"14px\",\r\n  smallTextFontSize: \"12px\",\r\n\r\n  boldFontWeight: 600,\r\n  regularFontWeight: 500,\r\n  lightFontWeight: 400,\r\n};\r\n\r\nexport interface ITheme {\r\n  colors: IColors;\r\n  font: IFont;\r\n}\r\n\r\nconst theme: ITheme = {\r\n  colors,\r\n  font,\r\n};\r\n\r\nexport default theme;\r\n","import { Dimensions, StyleSheet } from \"react-native\";\r\nimport theme from \"./theme\";\r\n\r\nexport const { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\r\n\r\nconst rootStyles = StyleSheet.create({\r\n  display: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  topAccount: {\r\n    flexDirection: \"row\",\r\n    flex: 0.4,\r\n    gap: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n  },\r\n\r\n  level: {\r\n    flex: 0.25,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n  },\r\n\r\n  chart: {\r\n    flex: 1.6,\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n  },\r\n\r\n  middleAccount: {\r\n    flex: 0.3,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.backgroundColor2,\r\n  },\r\n\r\n  positionInfo: {\r\n    flex: 1.2,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    backgroundColor: theme.colors.backgroundColor2,\r\n  },\r\n\r\n  controlPanel: {\r\n    flex: 1.4,\r\n    backgroundColor: \"pink\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  trade: {\r\n    flex: 7.5,\r\n    backgroundColor: \"grey\",\r\n  },\r\n\r\n  shop: {\r\n    flex: 1.5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n  },\r\n\r\n  rootControlButton: {\r\n    flex: 0.6,\r\n    backgroundColor: theme.colors.backgroundColor2,\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n\r\nexport default rootStyles;\r\n","import { ICandleStick, ILevelInfo } from \"./interfaces/interface\";\r\n\r\n// Chart Style\r\nexport const LABEL_GAP_OF_LINE = 2;\r\nexport const DOMAIN_PADDING = 15;\r\nexport const CANDLE_WIDTH = 8;\r\n\r\nexport const CHART_X_DOMAIN_LENGTH = 25;\r\nexport const CHART_Y_DOMAIN_PADDING = 15;\r\n\r\nexport const TRADE_PRICE_STROKE_WIDTH = 1.5;\r\nexport const TRADE_PRICE_STROKE_DASH_ARRAY = 1;\r\n\r\nexport const LIQUID_PRICE_STROKE_WIDTH = 1.5;\r\n\r\nexport const OPEN_PRICE_STROKE_WIDTH = 1.5;\r\nexport const OPEN_PRICE_STROKE_DASH_ARRAY = 1.5;\r\n\r\nexport const LEFT_LABEL_FONT_SIZE = 9;\r\n\r\n// Chart System\r\nexport const SPLIT_UNIT_OF_CANDLE = 20;\r\nexport const CANDLE_MOVING_UNIT_MS = 200;\r\n\r\nexport const INITIAL_CANDLE_OPEN = 100;\r\nexport const INITIAL_CANDLE_CLOSE = 110;\r\nexport const INITIAL_CANDLE_HIGH = 120;\r\nexport const INITIAL_CANDLE_LOW = 90;\r\n\r\nexport const LAST_OF_INITIAL_CANDLE_OPEN = 180;\r\nexport const LAST_OF_INITIAL_CANDLE_CLOSE = 150;\r\nexport const LAST_OF_INITIAL_CANDLE_HIGH = 180;\r\nexport const LAST_OF_INITIAL_CANDLE_LOW = 140;\r\n\r\nexport const CANDLE_INITIAL_DATE = new Date(2022, 0, 1);\r\n\r\n// Account\r\nexport const INITIAL_CASH = 1000000;\r\n\r\nexport const POSITIVE = \"positive\";\r\nexport const NEGATIVE = \"negative\";\r\nexport const ZERO = \"zero\";\r\n\r\nexport const INTEREST_RATE = 0.0001;\r\nexport const LEVEL_SETTING: ILevelInfo[] = [\r\n  {\r\n    levelNumber: 1,\r\n    levelName: \"입문자\",\r\n    randomGap: 0.04,\r\n    stddev: 1,\r\n    transactionFeeRate: 0.04,\r\n    color: \"#ead600\",\r\n    loan: 2000000,\r\n  },\r\n  {\r\n    levelNumber: 2,\r\n    levelName: \"코린이\",\r\n    randomGap: 0.05,\r\n    stddev: 2,\r\n    transactionFeeRate: 0.06,\r\n    color: \"#ff7e2e\",\r\n    loan: 5000000,\r\n  },\r\n  {\r\n    levelNumber: 3,\r\n    levelName: \"초보자\",\r\n    randomGap: 0.06,\r\n    stddev: 3,\r\n    transactionFeeRate: 0.08,\r\n    color: \"#00dfb2\",\r\n    loan: 10000000,\r\n  },\r\n  {\r\n    levelNumber: 4,\r\n    levelName: \"중급자\",\r\n    randomGap: 0.07,\r\n    stddev: 4,\r\n    transactionFeeRate: 0.1,\r\n    color: \"#043efa\",\r\n    loan: 100000000,\r\n  },\r\n  {\r\n    levelNumber: 5,\r\n    levelName: \"전문가\",\r\n    randomGap: 0.08,\r\n    stddev: 5,\r\n    transactionFeeRate: 0.12,\r\n    color: \"#ad00dd\",\r\n    loan: 1000000000,\r\n  },\r\n  {\r\n    levelNumber: 6,\r\n    levelName: \"예언자\",\r\n    randomGap: 0.09,\r\n    stddev: 6,\r\n    transactionFeeRate: 0.2,\r\n    color: \"#ff0099\",\r\n    loan: 5000000000,\r\n  },\r\n  {\r\n    levelNumber: 7,\r\n    levelName: \"신\",\r\n    randomGap: 0.1,\r\n    stddev: 7,\r\n    transactionFeeRate: 0.35,\r\n    color: \"#ffffff\",\r\n    loan: 10000000000,\r\n  },\r\n];\r\n\r\n// Leverage\r\nexport const INIT_LEVERAGE = 1;\r\nexport const LEVERAGE_MIN = 1;\r\nexport const LEVERAGE_MAX = 50;\r\n\r\nexport const LEVERAGE_UNITS = [\r\n  { label: \"x1\", value: 1 },\r\n  { label: \"x2\", value: 2 },\r\n  { label: \"x3\", value: 3 },\r\n  { label: \"x5\", value: 5 },\r\n  { label: \"x10\", value: 10 },\r\n  { label: \"x25\", value: 25 },\r\n  { label: \"x50\", value: 50 },\r\n];\r\nexport const INITIAL_CANDLE_SET: ICandleStick[] = [\r\n  {\r\n    x: CANDLE_INITIAL_DATE,\r\n    open: INITIAL_CANDLE_OPEN,\r\n    close: INITIAL_CANDLE_CLOSE,\r\n    high: INITIAL_CANDLE_HIGH,\r\n    low: INITIAL_CANDLE_LOW,\r\n  },\r\n  { x: new Date(2022, 0, 2), open: 110, close: 130, high: 130, low: 100 },\r\n  { x: new Date(2022, 0, 3), open: 130, close: 100, high: 140, low: 90 },\r\n  { x: new Date(2022, 0, 4), open: 100, close: 125, high: 150, low: 100 },\r\n  { x: new Date(2022, 0, 5), open: 125, close: 150, high: 170, low: 120 },\r\n  { x: new Date(2022, 0, 6), open: 150, close: 130, high: 160, low: 120 },\r\n  { x: new Date(2022, 0, 7), open: 130, close: 180, high: 200, low: 100 },\r\n  { x: new Date(2022, 0, 8), open: 180, close: 200, high: 200, low: 160 },\r\n  { x: new Date(2022, 0, 9), open: 200, close: 160, high: 210, low: 150 },\r\n  { x: new Date(2022, 0, 10), open: 160, close: 150, high: 200, low: 150 },\r\n  { x: new Date(2022, 0, 11), open: 150, close: 120, high: 160, low: 110 },\r\n  { x: new Date(2022, 0, 12), open: 120, close: 130, high: 140, low: 110 },\r\n  { x: new Date(2022, 0, 13), open: 130, close: 160, high: 180, low: 130 },\r\n  {\r\n    x: new Date(2022, 0, 14),\r\n    open: 160,\r\n    close: LAST_OF_INITIAL_CANDLE_OPEN,\r\n    high: 200,\r\n    low: 150,\r\n  },\r\n  {\r\n    x: new Date(2022, 0, 15),\r\n    open: LAST_OF_INITIAL_CANDLE_OPEN,\r\n    close: LAST_OF_INITIAL_CANDLE_CLOSE,\r\n    high: LAST_OF_INITIAL_CANDLE_HIGH,\r\n    low: LAST_OF_INITIAL_CANDLE_LOW,\r\n  },\r\n];\r\n","import { atom, selector } from \"recoil\";\r\nimport {\r\n  INITIAL_CANDLE_SET,\r\n  INITIAL_CASH,\r\n  LAST_OF_INITIAL_CANDLE_CLOSE,\r\n  LAST_OF_INITIAL_CANDLE_HIGH,\r\n  LAST_OF_INITIAL_CANDLE_LOW,\r\n  LAST_OF_INITIAL_CANDLE_OPEN,\r\n  LEVEL_SETTING,\r\n  NEGATIVE,\r\n  POSITIVE,\r\n  ZERO,\r\n} from \"./globalConstant\";\r\nimport {\r\n  IFutureAccount,\r\n  IFutureAccountDetail,\r\n  ILevelInfo,\r\n  ITotalAccount,\r\n  ITotalFutureAccount,\r\n} from \"./interfaces/interface\";\r\n\r\n// UI 시스템\r\n\r\n// 게임 시스템\r\nexport const candleDataState = atom({\r\n  key: \"candleDataState\",\r\n  default: INITIAL_CANDLE_SET,\r\n});\r\n\r\nexport const turnNumberState = atom({\r\n  key: \"turnNumberState\",\r\n  default: 1,\r\n});\r\n\r\nexport const isLongControllerActiveState = atom({\r\n  key: \"isLongControllerActiveState\",\r\n  default: true,\r\n});\r\n\r\nexport const isCandleMovingState = atom({\r\n  key: \"isCandleMovingState\",\r\n  default: false,\r\n});\r\n\r\nexport const lastClosePriceState = atom({\r\n  key: \"lastClosePriceState\",\r\n  default: LAST_OF_INITIAL_CANDLE_CLOSE,\r\n});\r\n\r\nexport const lastOpenPriceState = atom({\r\n  key: \"lastOpenPriceState\",\r\n  default: LAST_OF_INITIAL_CANDLE_OPEN,\r\n});\r\n\r\nexport const lastHighPriceState = atom({\r\n  key: \"lastHighPriceState\",\r\n  default: LAST_OF_INITIAL_CANDLE_HIGH,\r\n});\r\n\r\nexport const lastLowPriceState = atom({\r\n  key: \"lastLowPriceState\",\r\n  default: LAST_OF_INITIAL_CANDLE_LOW,\r\n});\r\n\r\nexport const longLiquidState = atom({\r\n  key: \"longLiquidState\",\r\n  default: 0,\r\n});\r\n\r\nexport const shortLiquidState = atom({\r\n  key: \"shortLiquidState\",\r\n  default: 0,\r\n});\r\n\r\n// 게좌 시스템\r\nexport const cashAccountState = atom({\r\n  key: \"accountState\",\r\n  default: 1000000,\r\n});\r\n\r\nexport const levelNumberState = atom({\r\n  key: \"levelNumberState\",\r\n  default: 1,\r\n});\r\n\r\nexport const levelInfoState = selector({\r\n  key: \"levelInfoState\",\r\n  get: ({ get }) => {\r\n    const levelNumber = get(levelNumberState);\r\n    return LEVEL_SETTING[levelNumber - 1];\r\n  },\r\n});\r\n\r\nexport const longAccountState = atom({\r\n  key: \"longAccountState\",\r\n  default: {\r\n    positionActive: false,\r\n    openPrice: 0,\r\n    liquidPrice: 0,\r\n    leverage: 1,\r\n    openPositionAmount: 0,\r\n    openPositionValue: 0,\r\n    currentPositionValue: 0,\r\n  } as IFutureAccount,\r\n});\r\n\r\nexport const shortAccountState = atom({\r\n  key: \"shortAccountState\",\r\n  default: {\r\n    positionActive: false,\r\n    openPrice: 0,\r\n    liquidPrice: 0,\r\n    leverage: 1,\r\n    openPositionAmount: 0,\r\n    openPositionValue: 0,\r\n    currentPositionValue: 0,\r\n  } as IFutureAccount,\r\n});\r\n\r\nexport const longAccountDetailState = selector({\r\n  key: \"longAccountDetailState\",\r\n  get: ({ get }) => {\r\n    const longAccount = get(longAccountState);\r\n    const unrealizedPnl =\r\n      longAccount.leverage *\r\n      (longAccount.currentPositionValue - longAccount.openPositionValue);\r\n    return {\r\n      positionActive: longAccount.positionActive,\r\n      openPrice: longAccount.openPrice,\r\n      liquidPrice: longAccount.liquidPrice,\r\n      leverage: longAccount.leverage,\r\n      openPositionAmount: longAccount.openPositionAmount,\r\n      openPositionValue: longAccount.openPositionValue,\r\n      currentPositionValue: longAccount.currentPositionValue,\r\n      unrealizedPnl,\r\n      profitRate: unrealizedPnl / longAccount.openPositionValue,\r\n      totalAsset: unrealizedPnl + longAccount.openPositionValue,\r\n      isPositive:\r\n        unrealizedPnl > 0 ? POSITIVE : unrealizedPnl < 0 ? NEGATIVE : ZERO,\r\n    } as IFutureAccountDetail;\r\n  },\r\n});\r\n\r\nexport const shortAccountDetailState = selector({\r\n  key: \"shortAccountDetailState\",\r\n  get: ({ get }) => {\r\n    const shortAccount = get(shortAccountState);\r\n    const unrealizedPnl =\r\n      shortAccount.leverage *\r\n      (shortAccount.openPositionValue - shortAccount.currentPositionValue);\r\n    return {\r\n      positionActive: shortAccount.positionActive,\r\n      openPrice: shortAccount.openPrice,\r\n      liquidPrice: shortAccount.liquidPrice,\r\n      leverage: shortAccount.leverage,\r\n      openPositionAmount: shortAccount.openPositionAmount,\r\n      openPositionValue: shortAccount.openPositionValue,\r\n      currentPositionValue: shortAccount.currentPositionValue,\r\n      unrealizedPnl,\r\n      profitRate: unrealizedPnl / shortAccount.openPositionValue,\r\n      totalAsset: unrealizedPnl + shortAccount.openPositionValue,\r\n      isPositive:\r\n        unrealizedPnl > 0 ? POSITIVE : unrealizedPnl < 0 ? NEGATIVE : ZERO,\r\n    } as IFutureAccountDetail;\r\n  },\r\n});\r\n\r\nexport const totalFutureAccountState = selector({\r\n  key: \"futureAccountState\",\r\n  get: ({ get }) => {\r\n    const longAccountDetail = get(longAccountDetailState);\r\n    const shortAccountDetail = get(shortAccountDetailState);\r\n\r\n    const openPositionValue =\r\n      longAccountDetail.openPositionValue +\r\n      shortAccountDetail.openPositionValue;\r\n    const currentPositionValue =\r\n      longAccountDetail.currentPositionValue +\r\n      shortAccountDetail.currentPositionValue;\r\n    const unrealizedPnl =\r\n      longAccountDetail.unrealizedPnl + shortAccountDetail.unrealizedPnl;\r\n\r\n    return {\r\n      positionActive:\r\n        longAccountDetail.positionActive || shortAccountDetail.positionActive,\r\n      openPositionValue,\r\n      currentPositionValue,\r\n      unrealizedPnl,\r\n      profitRate: unrealizedPnl / openPositionValue,\r\n      totalAsset: unrealizedPnl + openPositionValue,\r\n      isPositive:\r\n        unrealizedPnl > 0 ? POSITIVE : unrealizedPnl < 0 ? NEGATIVE : ZERO,\r\n    } as ITotalFutureAccount;\r\n  },\r\n});\r\n\r\nexport const totalAccountState = selector({\r\n  key: \"totalAccountState\",\r\n  get: ({ get }) => {\r\n    const cashAccount = get(cashAccountState);\r\n    const futureAccount = get(totalFutureAccountState);\r\n\r\n    const openValuation = futureAccount.openPositionValue + cashAccount;\r\n    const totalAsset = cashAccount + futureAccount.totalAsset;\r\n    const unrealizedPnl = totalAsset - openValuation;\r\n    const realizedPnl = totalAsset - INITIAL_CASH;\r\n    return {\r\n      cash: cashAccount,\r\n      futureValuation: futureAccount.totalAsset,\r\n      totalAsset,\r\n      unrealizedPnl,\r\n      profitRate: unrealizedPnl / openValuation,\r\n      isPositive:\r\n        realizedPnl > 0 ? POSITIVE : realizedPnl < 0 ? NEGATIVE : ZERO,\r\n    } as ITotalAccount;\r\n  },\r\n});\r\n","const convertKrNumberType = (number: number) => {\r\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport default convertKrNumberType;\r\n","import styled from \"styled-components/native\";\r\nimport { NEGATIVE, POSITIVE } from \"../globalConstant\";\r\nimport { ITheme } from \"./theme\";\r\n\r\ninterface IContainerProps {\r\n  theme?: ITheme;\r\n}\r\n\r\ninterface ITextContainerProps extends IContainerProps {\r\n  isPositive: string;\r\n}\r\n\r\ninterface IInfoContainerProps extends IContainerProps {\r\n  isLong: boolean;\r\n}\r\n\r\ninterface ICloseButtonContainerProps extends IContainerProps {\r\n  isLong: boolean;\r\n}\r\n\r\nexport const BaseTextContainer = styled.Text`\r\n  color: ${(props: IContainerProps) => props.theme.colors.baseTextColor};\r\n`;\r\n\r\n// Top Account\r\nexport const TopAccountText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.midiumTextFontSize};\r\n`;\r\n\r\nexport const TopAccountValue = styled(BaseTextContainer)`\r\n  font-size: ${(props: ITextContainerProps) =>\r\n    props.theme.font.bigValueFontSize};\r\n  color: ${(props: ITextContainerProps) =>\r\n    props.isPositive == POSITIVE\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.isPositive == NEGATIVE\r\n      ? props.theme.colors.negativeTextColor\r\n      : props.theme.colors.baseTextColor};\r\n`;\r\n\r\nexport const TopAccountRate = styled(BaseTextContainer)`\r\n  font-size: ${(props: ITextContainerProps) =>\r\n    props.theme.font.bigRateFontSize};\r\n  color: ${(props: ITextContainerProps) =>\r\n    props.isPositive == POSITIVE\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.isPositive == NEGATIVE\r\n      ? props.theme.colors.negativeTextColor\r\n      : props.theme.colors.baseTextColor};\r\n`;\r\n\r\n// Level\r\nexport const LevelLabelText = styled(BaseTextContainer)`\r\n  color: \"black\";\r\n  font-size: ${(props: IContainerProps) => props.theme.font.midiumTextFontSize};\r\n`;\r\n\r\nexport const ProgressValueText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) =>\r\n    props.theme.font.midiumValueFontSize};\r\n`;\r\n\r\nexport const LevelUpText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.midiumTextFontSize};\r\n`;\r\n\r\n// Middle Account\r\nexport const MiddleAccountText = styled(BaseTextContainer)`\r\n  color: ${(props: IContainerProps) => props.theme.colors.toneDownTextColor};\r\n  font-size: ${(props: IContainerProps) => props.theme.font.smallTextFontSize};\r\n`;\r\nexport const MiddleAccountValue = styled(BaseTextContainer)`\r\n  color: ${(props: IContainerProps) => props.theme.colors.baseTextColor};\r\n  font-size: ${(props: IContainerProps) => props.theme.font.bigValueFontSize};\r\n`;\r\n\r\n// Position Info\r\nexport const PositionTitleBoxText = styled(BaseTextContainer)`\r\n  background-color: ${(props: IInfoContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.theme.colors.negativeTextColor};\r\n  font-size: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.midiumTextFontSize};\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PositionLeverageBoxText = styled(BaseTextContainer)`\r\n  color: ${(props: IInfoContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.theme.colors.negativeTextColor};\r\n  font-size: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.bigValueFontSize};\r\n  font-weight: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.boldFontWeight};\r\n  margin-left: 5px;\r\n`;\r\n\r\nexport const PositionInfoTitleBoxText = styled(BaseTextContainer)`\r\n  color: ${(props: IInfoContainerProps) =>\r\n    props.theme.colors.toneDownTextColor};\r\n  font-size: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.smallTextFontSize};\r\n`;\r\n\r\nexport const PositionInfoValueBoxText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.midiumValueFontSize};\r\n`;\r\n\r\nexport const LiquidValueText = styled(PositionInfoValueBoxText)`\r\n  color: ${(props: IInfoContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.longLiquidActiveLineColor\r\n      : props.theme.colors.shortLiquidActiveLineColor};\r\n`;\r\n\r\nexport const OpenValueText = styled(PositionInfoValueBoxText)`\r\n  color: ${(props: IContainerProps) => props.theme.colors.openPriceLineColor};\r\n`;\r\n\r\nexport const UnrealizedPnlBoxText = styled(PositionInfoTitleBoxText)``;\r\n\r\nexport const UnrealizedPnlBoxValue = styled(PositionInfoValueBoxText)`\r\n  color: ${(props: ITextContainerProps) =>\r\n    props.isPositive == POSITIVE\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.isPositive == NEGATIVE\r\n      ? props.theme.colors.negativeTextColor\r\n      : props.theme.colors.baseTextColor};\r\n`;\r\n\r\nexport const PositionCloseButtonText = styled(BaseTextContainer)`\r\n  /* color: ${(props: ICloseButtonContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.theme.colors.negativeTextColor}; */\r\n  color: \"black\";\r\n  font-weight: ${(props: ICloseButtonContainerProps) =>\r\n    props.theme.font.boldFontWeight};\r\n`;\r\n\r\nexport const EmptyPositionText = styled(BaseTextContainer)`\r\n  font-weight: ${(props: IContainerProps) => props.theme.font.boldFontWeight};\r\n`;\r\n\r\n// Controll Panel\r\nexport const ControlSectionTitleText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.smallTextFontSize};\r\n  color: ${(props: IContainerProps) => props.theme.colors.toneDownTextColor};\r\n`;\r\n\r\nexport const ControlSectionValueText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) =>\r\n    props.theme.font.midiumValueFontSize};\r\n`;\r\n\r\nexport const LiquidControlSectionValueText = styled(ControlSectionValueText)`\r\n  color: ${(props: IInfoContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.longLiquidActiveLineColor\r\n      : props.theme.colors.shortLiquidActiveLineColor};\r\n`;\r\n\r\nexport const OpenButtonText = styled(BaseTextContainer)`\r\n  /* color: ${(props: ICloseButtonContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.theme.colors.negativeTextColor}; */\r\n  font-weight: ${(props: ICloseButtonContainerProps) =>\r\n    props.theme.font.boldFontWeight};\r\n`;\r\n\r\n// Root Control Button\r\nexport const ResetButtonText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.bigTextFontSize};\r\n  font-weight: ${(props: IContainerProps) => props.theme.font.boldFontWeight};\r\n`;\r\nexport const NextTurnButtonText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.bigTextFontSize};\r\n  font-weight: ${(props: IContainerProps) => props.theme.font.boldFontWeight};\r\n`;\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { totalAccountState } from \"../../atom\";\r\nimport convertKrNumberType from \"../../functions/convertKrNumberType\";\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport {\r\n  MiddleAccountText,\r\n  MiddleAccountValue,\r\n} from \"../../styles/TextStyledComponents\";\r\n\r\nfunction MiddleAccount() {\r\n  const totalAccount = useRecoilValue(totalAccountState);\r\n  return (\r\n    <View style={rootStyles.middleAccount}>\r\n      <View style={{ flex: 1, padding: 10 }}>\r\n        <MiddleAccountText>선물 </MiddleAccountText>\r\n        <MiddleAccountValue>\r\n          {convertKrNumberType(Math.ceil(totalAccount.futureValuation))}원\r\n        </MiddleAccountValue>\r\n      </View>\r\n      <View style={{ flex: 1, padding: 10 }}>\r\n        <MiddleAccountText>현금 </MiddleAccountText>\r\n        <MiddleAccountValue>\r\n          {convertKrNumberType(Math.ceil(totalAccount.cash))}원\r\n        </MiddleAccountValue>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(MiddleAccount);\r\n","import { memo, useEffect, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  isCandleMovingState,\r\n  levelInfoState,\r\n  levelNumberState,\r\n  totalAccountState,\r\n} from \"../../atom\";\r\nimport convertKrNumberType from \"../../functions/convertKrNumberType\";\r\nimport { INITIAL_CASH } from \"../../globalConstant\";\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport {\r\n  TopAccountRate,\r\n  TopAccountText,\r\n  TopAccountValue,\r\n} from \"../../styles/TextStyledComponents\";\r\n\r\nfunction TopAccount() {\r\n  const totalAccount = useRecoilValue(totalAccountState);\r\n\r\n  return (\r\n    <View style={rootStyles.topAccount}>\r\n      <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n        <TopAccountText>총 보유자산 | </TopAccountText>\r\n      </View>\r\n      <View style={{ flex: 2.3, flexDirection: \"row\", alignItems: \"flex-end\" }}>\r\n        <TopAccountValue isPositive={totalAccount.isPositive}>\r\n          {convertKrNumberType(Math.ceil(totalAccount.totalAsset))}원{\" \"}\r\n        </TopAccountValue>\r\n        <TopAccountRate isPositive={totalAccount.isPositive}>\r\n          {(\r\n            ((totalAccount.totalAsset - INITIAL_CASH) / INITIAL_CASH) *\r\n            100\r\n          ).toFixed(2)}\r\n          %\r\n        </TopAccountRate>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TopAccount);\r\n","const calDate = (date: Date, number: number) => {\r\n  const resDate = new Date(date);\r\n  resDate.setDate(resDate.getDate() + number);\r\n\r\n  return resDate;\r\n};\r\n\r\nexport default calDate;\r\n","var spareRandom = null;\r\n\r\nfunction normalRandom() {\r\n  let val: number, u: number, v: number, s: number, mul: number;\r\n\r\n  if (spareRandom !== null) {\r\n    val = spareRandom;\r\n    spareRandom = null;\r\n  } else {\r\n    do {\r\n      u = Math.random() * 2 - 1;\r\n      v = Math.random() * 2 - 1;\r\n\r\n      s = u * u + v * v;\r\n    } while (s === 0 || s >= 1);\r\n\r\n    mul = Math.sqrt((-2 * Math.log(s)) / s);\r\n\r\n    val = u * mul;\r\n    spareRandom = v * mul;\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\nfunction normalRandomInRange(min: number, max: number) {\r\n  var val: number;\r\n  do {\r\n    val = normalRandom();\r\n  } while (val < min || val > max);\r\n\r\n  return val;\r\n}\r\n\r\nfunction normalRandomScaled(mean: number, stddev: number) {\r\n  var r = normalRandom();\r\n\r\n  r = r * stddev + mean;\r\n\r\n  return r;\r\n}\r\n\r\nfunction normalRandomScaledInRange(\r\n  mean: number,\r\n  stddev: number,\r\n  min: number,\r\n  max: number\r\n) {\r\n  let r: number;\r\n  do {\r\n    r = normalRandomScaled(mean, stddev);\r\n  } while (r < min || r > max);\r\n\r\n  return r;\r\n}\r\n\r\nconst getRandomRate = (\r\n  mean: number,\r\n  stddev: number,\r\n  min: number,\r\n  max: number\r\n) => {\r\n  const rate = normalRandomScaledInRange(mean, stddev, min, max);\r\n  return rate;\r\n};\r\n\r\nexport default getRandomRate;\r\n","import { cloneDeep, random } from \"lodash\";\r\nimport { ICandleStick } from \"../interfaces/interface\";\r\nimport getRandomRate from \"./getRandomRate\";\r\n\r\nconst candleGenerator = (\r\n  time: Date,\r\n  lastClosePrice: number,\r\n  numberPerUnit: number,\r\n  random_gap: number = 0.05,\r\n  stddev: number = 1\r\n) => {\r\n  let previousCandle: ICandleStick = {\r\n    x: time,\r\n    open: lastClosePrice,\r\n    high: lastClosePrice,\r\n    low: lastClosePrice,\r\n    close: lastClosePrice,\r\n  };\r\n  const candleSet = [previousCandle];\r\n\r\n  for (let i = 0; i < numberPerUnit; i++) {\r\n    const newCandle = cloneDeep(previousCandle);\r\n    // const newClose =\r\n    //   newCandle.close * random(1 - random_gap, 1 + random_gap, true);\r\n    const newClose =\r\n      newCandle.close *\r\n      getRandomRate(1, stddev, 1 - random_gap, 1 + random_gap);\r\n    const newHigh = newCandle.high < newClose ? newClose : newCandle.high;\r\n    const newLow = newCandle.low > newClose ? newClose : newCandle.low;\r\n\r\n    newCandle.close = newClose;\r\n    newCandle.high = newHigh;\r\n    newCandle.low = newLow;\r\n\r\n    previousCandle = newCandle;\r\n    candleSet.push(newCandle);\r\n  }\r\n\r\n  return candleSet;\r\n};\r\n\r\nexport default candleGenerator;\r\n","import theme from \"./theme\";\r\n\r\nexport const sharedLabelStyle = {\r\n  fontSize: theme.font.smallValueFontSize,\r\n  fill: theme.colors.baseTextColor,\r\n};\r\n","import { cloneDeep, round } from \"lodash\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Dimensions, View } from \"react-native\";\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\r\nimport { DomainTuple } from \"victory-core\";\r\nimport {\r\n  VictoryAxis,\r\n  VictoryCandlestick,\r\n  VictoryChart,\r\n  VictoryCursorContainer,\r\n  VictoryLine,\r\n  VictoryLabel,\r\n  Line,\r\n} from \"victory-native\";\r\nimport {\r\n  candleDataState,\r\n  isCandleMovingState,\r\n  lastClosePriceState,\r\n  lastOpenPriceState,\r\n  levelInfoState,\r\n  longAccountDetailState,\r\n  longAccountState,\r\n  longLiquidState,\r\n  shortAccountDetailState,\r\n  shortAccountState,\r\n  shortLiquidState,\r\n  turnNumberState,\r\n} from \"../../atom\";\r\nimport calDate from \"../../functions/calDate\";\r\nimport candleGenerator from \"../../functions/candleGenerator\";\r\nimport {\r\n  CANDLE_MOVING_UNIT_MS,\r\n  CANDLE_WIDTH,\r\n  CHART_X_DOMAIN_LENGTH,\r\n  CHART_Y_DOMAIN_PADDING,\r\n  DOMAIN_PADDING,\r\n  INITIAL_CANDLE_LOW,\r\n  LABEL_GAP_OF_LINE,\r\n  LAST_OF_INITIAL_CANDLE_HIGH,\r\n  LEFT_LABEL_FONT_SIZE,\r\n  LIQUID_PRICE_STROKE_WIDTH,\r\n  OPEN_PRICE_STROKE_DASH_ARRAY,\r\n  OPEN_PRICE_STROKE_WIDTH,\r\n  SPLIT_UNIT_OF_CANDLE,\r\n  TRADE_PRICE_STROKE_DASH_ARRAY,\r\n  TRADE_PRICE_STROKE_WIDTH,\r\n} from \"../../globalConstant\";\r\nimport { ICandleStick } from \"../../interfaces/interface\";\r\nimport { sharedLabelStyle } from \"../../styles/chartStyles\";\r\nimport { SCREEN_WIDTH } from \"../../styles/rootStyles\";\r\nimport theme from \"../../styles/theme\";\r\n\r\nfunction CandleChart() {\r\n  const turnNumber = useRecoilValue(turnNumberState);\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n  const [candleData, setCandleData] = useRecoilState(candleDataState);\r\n  const [isCandleMoving, setIsCandleMoving] =\r\n    useRecoilState(isCandleMovingState);\r\n  const [lastClosePrice, setLastClosePrice] =\r\n    useRecoilState(lastClosePriceState);\r\n  const [lastOpenPrice, setLastOpenPrice] = useRecoilState(lastOpenPriceState);\r\n\r\n  const [longAccount, setLongAccount] = useRecoilState(longAccountState);\r\n  const [shortAccount, setShortAccount] = useRecoilState(shortAccountState);\r\n  const longAccountDetail = useRecoilValue(longAccountDetailState);\r\n  const shortAccountDetail = useRecoilValue(shortAccountDetailState);\r\n  const resetLongAccount = useResetRecoilState(longAccountState);\r\n  const resetShortAccount = useResetRecoilState(shortAccountState);\r\n\r\n  const [longLiquid, setLongLiquid] = useRecoilState(longLiquidState);\r\n  const [shortLiquid, setShortLiquid] = useRecoilState(shortLiquidState);\r\n\r\n  const [chartXDomain, setChartXDomain] = useState<DomainTuple>([\r\n    new Date(2022, 0, 1),\r\n    new Date(2022, 0, 15),\r\n  ]);\r\n  const [chartYDomain, setChartYDomain] = useState<DomainTuple>([\r\n    INITIAL_CANDLE_LOW - CHART_Y_DOMAIN_PADDING,\r\n    LAST_OF_INITIAL_CANDLE_HIGH + CHART_Y_DOMAIN_PADDING,\r\n  ]);\r\n\r\n  const updateCandleData = useCallback(\r\n    (newCandle: ICandleStick, index: number, lastIndex: number) => {\r\n      return setTimeout(() => {\r\n        setCandleData((prev) => {\r\n          const newData = [...prev];\r\n          if (newData.slice(-1)[0].x.toString() == newCandle.x.toString()) {\r\n            newData[newData.length - 1] = newCandle;\r\n          } else {\r\n            newData.push(newCandle);\r\n            if (newData.length > CHART_X_DOMAIN_LENGTH) newData.shift();\r\n          }\r\n          return newData;\r\n        });\r\n\r\n        setLastClosePrice(newCandle.close);\r\n\r\n        if (longAccountDetail.positionActive) {\r\n          setLongAccount((prev) => {\r\n            const newLog = cloneDeep(prev);\r\n            newLog.currentPositionValue =\r\n              newCandle.close * newLog.openPositionAmount;\r\n            return newLog;\r\n          });\r\n          if (longAccountDetail.liquidPrice >= newCandle.low) {\r\n            resetLongAccount();\r\n          }\r\n        }\r\n\r\n        if (shortAccountDetail.positionActive) {\r\n          setShortAccount((prev) => {\r\n            const newLog = cloneDeep(prev);\r\n            newLog.currentPositionValue =\r\n              newCandle.close * newLog.openPositionAmount;\r\n            return newLog;\r\n          });\r\n          if (shortAccountDetail.liquidPrice <= newCandle.high) {\r\n            resetShortAccount();\r\n          }\r\n        }\r\n\r\n        if (index === lastIndex) {\r\n          setIsCandleMoving(false);\r\n        }\r\n      }, CANDLE_MOVING_UNIT_MS * index);\r\n    },\r\n    [longAccountDetail, shortAccountDetail]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (turnNumber > 1) {\r\n      const timers: NodeJS.Timeout[] = [];\r\n      const lastDate = candleData.slice(-1)[0].x;\r\n      const nextDate = calDate(new Date(lastDate), 1);\r\n      const lastPrice = candleData.slice(-1)[0].close;\r\n      const newCandleSet = candleGenerator(\r\n        nextDate,\r\n        lastPrice,\r\n        SPLIT_UNIT_OF_CANDLE,\r\n        levelInfo.randomGap,\r\n        levelInfo.stddev\r\n      );\r\n      setLastOpenPrice(newCandleSet[0].open);\r\n      for (let i = 0; i < newCandleSet.length; i++) {\r\n        const newCandle = newCandleSet[i];\r\n        timers.push(updateCandleData(newCandle, i, newCandleSet.length - 1));\r\n      }\r\n\r\n      return () => {\r\n        timers.forEach((ele) => clearTimeout(ele));\r\n      };\r\n    }\r\n  }, [turnNumber]);\r\n\r\n  useEffect(() => {\r\n    const targetCandles = candleData.slice(-CHART_X_DOMAIN_LENGTH);\r\n\r\n    // x domain\r\n    const startDate = targetCandles[0].x;\r\n    const lastDate = new Date(startDate);\r\n    lastDate.setDate(startDate.getDate() + CHART_X_DOMAIN_LENGTH);\r\n    setChartXDomain([startDate, lastDate]);\r\n\r\n    // y domain\r\n    let lowestPrice = 10000000000;\r\n    let highestPrice = 0;\r\n\r\n    targetCandles.forEach((ele) => {\r\n      if (ele.low < lowestPrice) {\r\n        lowestPrice = ele.low;\r\n      }\r\n      if (ele.high > highestPrice) {\r\n        highestPrice = ele.high;\r\n      }\r\n    });\r\n\r\n    setChartYDomain([\r\n      lowestPrice - CHART_Y_DOMAIN_PADDING,\r\n      highestPrice + CHART_Y_DOMAIN_PADDING,\r\n    ]);\r\n  }, [candleData]);\r\n\r\n  return (\r\n    <View>\r\n      <VictoryChart\r\n        width={SCREEN_WIDTH}\r\n        domainPadding={{ x: DOMAIN_PADDING }}\r\n        containerComponent={\r\n          <VictoryCursorContainer\r\n            cursorLabel={({ datum }) => \"            \" + `${round(datum.y, 1)}`}\r\n            cursorComponent={\r\n              <Line\r\n                style={{\r\n                  stroke: theme.colors.crossHairLineColor,\r\n                  strokeWidth: 1,\r\n                }}\r\n              />\r\n            }\r\n            cursorLabelComponent={\r\n              <VictoryLabel\r\n                style={{\r\n                  fill: theme.colors.baseTextColor,\r\n                  fontSize: theme.font.smallValueFontSize,\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        }\r\n        style={{\r\n          parent: {\r\n            backgroundColor: \"transparent\",\r\n          },\r\n          background: {\r\n            fill: theme.colors.backgroundColor1,\r\n          },\r\n        }}\r\n      >\r\n        <VictoryAxis\r\n          dependentAxis\r\n          offsetX={50}\r\n          orientation=\"right\"\r\n          style={{\r\n            grid: { stroke: \"#b6b6b6\", strokeWidth: 0.5 },\r\n            tickLabels: {\r\n              fill: theme.colors.baseTextColor,\r\n              fontSize: 14,\r\n            },\r\n          }}\r\n        />\r\n        <VictoryCandlestick\r\n          candleWidth={CANDLE_WIDTH}\r\n          style={{\r\n            data: {\r\n              strokeWidth: 1,\r\n              stroke: (d: any) =>\r\n                d.close < d.open\r\n                  ? theme.colors.longCandleColor\r\n                  : theme.colors.shortCandleColor,\r\n            },\r\n          }}\r\n          candleColors={{\r\n            positive: theme.colors.longCandleColor,\r\n            negative: theme.colors.shortCandleColor,\r\n          }}\r\n          data={candleData}\r\n          domain={{\r\n            x: chartXDomain,\r\n            y: chartYDomain,\r\n          }}\r\n        />\r\n\r\n        {/* 현재가 Line */}\r\n        <VictoryLabel\r\n          text={lastClosePrice.toFixed(1)}\r\n          datum={{\r\n            x: calDate(new Date(chartXDomain[1]), 4),\r\n            y: lastClosePrice + 5,\r\n          }}\r\n          textAnchor=\"end\"\r\n          style={sharedLabelStyle}\r\n          backgroundPadding={[{ left: 5, right: 3, top: 3, bottom: 3 }]}\r\n          backgroundStyle={[\r\n            {\r\n              fill:\r\n                lastClosePrice > lastOpenPrice\r\n                  ? theme.colors.longCandleColor\r\n                  : theme.colors.shortCandleColor,\r\n              opacity: 0.98,\r\n            },\r\n          ]}\r\n        />\r\n        <VictoryLine\r\n          domain={{\r\n            x: chartXDomain,\r\n            y: chartYDomain,\r\n          }}\r\n          y={() => lastClosePrice}\r\n          style={{\r\n            data: {\r\n              stroke: (d: any) =>\r\n                lastClosePrice > lastOpenPrice\r\n                  ? theme.colors.longCandleColor\r\n                  : theme.colors.shortCandleColor,\r\n              strokeWidth: TRADE_PRICE_STROKE_WIDTH,\r\n              strokeDasharray: TRADE_PRICE_STROKE_DASH_ARRAY,\r\n            },\r\n          }}\r\n        />\r\n\r\n        {/* Long 청산가 */}\r\n        {longAccountDetail.positionActive ? (\r\n          <VictoryLabel\r\n            text=\"청산가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: longAccountDetail.liquidPrice,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        ) : (\r\n          <VictoryLabel\r\n            text=\"청산가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: longLiquid,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        )}\r\n        {longAccountDetail.positionActive ? (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => longAccountDetail.liquidPrice}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.longLiquidActiveLineColor,\r\n                strokeWidth: LIQUID_PRICE_STROKE_WIDTH,\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => longLiquid}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.longLiquidInactiveLineColor,\r\n                strokeWidth: LIQUID_PRICE_STROKE_WIDTH,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* Short 청산가 */}\r\n        {shortAccountDetail.positionActive ? (\r\n          <VictoryLabel\r\n            text=\"청산가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: shortAccountDetail.liquidPrice,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        ) : (\r\n          <VictoryLabel\r\n            text=\"청산가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: shortLiquid,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        )}\r\n        {shortAccountDetail.positionActive ? (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => shortAccountDetail.liquidPrice}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.shortLiquidActiveLineColor,\r\n                strokeWidth: LIQUID_PRICE_STROKE_WIDTH,\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => shortLiquid}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.shortLiquidInactiveLineColor,\r\n                strokeWidth: LIQUID_PRICE_STROKE_WIDTH,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* Long 평단가 */}\r\n        {longAccountDetail.positionActive ? (\r\n          <VictoryLabel\r\n            text=\"평단가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: longAccountDetail.openPrice,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        ) : null}\r\n        {longAccountDetail.positionActive ? (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => longAccountDetail.openPrice}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.openPriceLineColor,\r\n                strokeWidth: OPEN_PRICE_STROKE_WIDTH,\r\n                strokeDasharray: OPEN_PRICE_STROKE_DASH_ARRAY,\r\n              },\r\n            }}\r\n          />\r\n        ) : null}\r\n\r\n        {/* Short 평단가 */}\r\n        {shortAccountDetail.positionActive ? (\r\n          <VictoryLabel\r\n            text=\"평단가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: shortAccountDetail.openPrice,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        ) : null}\r\n        {shortAccountDetail.positionActive ? (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => shortAccountDetail.openPrice}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.openPriceLineColor,\r\n                strokeWidth: OPEN_PRICE_STROKE_WIDTH,\r\n                strokeDasharray: OPEN_PRICE_STROKE_DASH_ARRAY,\r\n              },\r\n            }}\r\n          />\r\n        ) : null}\r\n      </VictoryChart>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CandleChart;\r\n","import { Text, View } from \"react-native\";\r\n\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport CandleChart from \"./CandleChart\";\r\n\r\nfunction Chart() {\r\n  return (\r\n    <View style={rootStyles.chart}>\r\n      <CandleChart />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useCallback, useState } from \"react\";\r\nimport { LayoutChangeEvent } from \"react-native\";\r\n\r\nexport interface ISize {\r\n  width: number;\r\n  height: number;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst useComponentSize = () => {\r\n  const [size, setSize] = useState<ISize>({\r\n    width: 0,\r\n    height: 0,\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const onLayout = useCallback((event: LayoutChangeEvent) => {\r\n    const { width, height, x, y } = event.nativeEvent.layout;\r\n    setSize({ width, height, x, y });\r\n  }, []);\r\n\r\n  return { size, onLayout };\r\n};\r\n\r\nexport default useComponentSize;\r\n","import { memo, useEffect, useState } from \"react\";\r\nimport { VictoryBar, VictoryLabel, VictoryStack } from \"victory-native\";\r\nimport theme from \"../../styles/theme\";\r\n\r\nfunction CustomVictoryStack({\r\n  parentSize,\r\n  barCashRate,\r\n  barFutureRate,\r\n  position,\r\n}: {\r\n  parentSize: { width: number; height: number; x: number; y: number };\r\n  barCashRate: number;\r\n  barFutureRate: number;\r\n  position: boolean;\r\n}) {\r\n  const [barColor, setBarColor] = useState(\r\n    position ? theme.colors.positivePriceColor : theme.colors.negativePriceColor\r\n  );\r\n\r\n  useEffect(() => {\r\n    setBarColor(\r\n      position\r\n        ? theme.colors.positivePriceColor\r\n        : theme.colors.negativePriceColor\r\n    );\r\n  }, [position]);\r\n\r\n  return (\r\n    <VictoryStack\r\n      width={parentSize.width || 100}\r\n      height={parentSize.height || 100}\r\n      padding={10}\r\n      animate={{ duration: 300 }}\r\n      colorScale={[barColor, \"whitesmoke\"]}\r\n    >\r\n      <VictoryBar\r\n        data={[{ x: \"a\", y: barFutureRate }]}\r\n        labels={({ datum }) => `${Math.ceil(datum.y * 100)}%`}\r\n        style={{ labels: { fill: \"white\" } }}\r\n        labelComponent={<VictoryLabel dx={25} dy={8} />}\r\n        barWidth={15}\r\n      />\r\n      <VictoryBar data={[{ x: \"a\", y: barCashRate }]} barWidth={15} />\r\n    </VictoryStack>\r\n  );\r\n}\r\n\r\nexport default memo(CustomVictoryStack);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { EmptyPositionText } from \"../../styles/TextStyledComponents\";\r\n\r\nfunction EmptyPositionBox() {\r\n  return (\r\n    <View\r\n      style={{ justifyContent: \"center\", alignItems: \"center\", paddingTop: 10 }}\r\n    >\r\n      <EmptyPositionText>포지션이 없습니다.</EmptyPositionText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(EmptyPositionBox);\r\n","import styled from \"styled-components/native\";\r\nimport { ITheme } from \"./theme\";\r\n\r\ninterface IContainerProps {\r\n  theme?: ITheme;\r\n}\r\n\r\ninterface IOpenContainerProps extends IContainerProps {\r\n  isLong: boolean;\r\n}\r\n\r\ninterface ILevelUpContainerProps extends IContainerProps {\r\n  disabled: boolean;\r\n}\r\n\r\nexport const BaseButton = styled.TouchableOpacity`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.CloseButtonBackgroundColor};\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const LevelUpButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.LevelUpButtonBackgroundColor};\r\n  opacity: ${(props: ILevelUpContainerProps) => (props.disabled ? 0.4 : 1)};\r\n  width: 85%;\r\n  height: 85%;\r\n`;\r\n\r\nexport const CloseButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.CloseButtonBackgroundColor2};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const OpenButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IOpenContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.longButtonColor\r\n      : props.theme.colors.shortButtonColor};\r\n  width: 80%;\r\n  height: 90%;\r\n`;\r\n\r\nexport const AccountResetButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.resetButtonBackgroundColor};\r\n  width: 80%;\r\n  height: 40%;\r\n`;\r\n\r\nexport const NextTurnButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.nextTurnButtonBackgroundColor};\r\n  width: 80%;\r\n  height: 40%;\r\n`;\r\n","import { memo } from \"react\";\r\nimport { Text, TouchableOpacity } from \"react-native\";\r\nimport { CloseButtonContainer } from \"../../../../styles/buttonStyles\";\r\nimport { PositionCloseButtonText } from \"../../../../styles/TextStyledComponents\";\r\n\r\ninterface CloseButtonProps {\r\n  isLong: boolean;\r\n  closeHandler: () => void;\r\n}\r\n\r\nfunction CloseButton({ isLong, closeHandler }: CloseButtonProps) {\r\n  return (\r\n    <CloseButtonContainer onPress={closeHandler}>\r\n      <PositionCloseButtonText isLong={isLong}>\r\n        포지션 종료\r\n      </PositionCloseButtonText>\r\n    </CloseButtonContainer>\r\n  );\r\n}\r\n\r\nexport default memo(CloseButton);\r\n","import { View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../functions/convertKrNumberType\";\r\nimport {\r\n  LiquidValueText,\r\n  OpenValueText,\r\n  PositionInfoTitleBoxText,\r\n  PositionInfoValueBoxText,\r\n} from \"../../../../styles/TextStyledComponents\";\r\n\r\ninterface PositionSettingInfoProps {\r\n  liquidPrice: number;\r\n  openPrice: number;\r\n  isLong: boolean;\r\n}\r\n\r\nfunction PositionSettingInfo({\r\n  liquidPrice,\r\n  openPrice,\r\n  isLong,\r\n}: PositionSettingInfoProps) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\" }}>\r\n      <View style={{ flex: 1.3 }}>\r\n        <PositionInfoTitleBoxText>청산가</PositionInfoTitleBoxText>\r\n        <LiquidValueText isLong={isLong}>\r\n          {convertKrNumberType(Number(liquidPrice.toFixed(2)))}\r\n        </LiquidValueText>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <PositionInfoTitleBoxText>평단가</PositionInfoTitleBoxText>\r\n        <OpenValueText>\r\n          {convertKrNumberType(Number(openPrice.toFixed(2)))}\r\n        </OpenValueText>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default PositionSettingInfo;\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { PositionLeverageBoxText } from \"../../../../styles/TextStyledComponents\";\r\n\r\ninterface LeverageInfoBoxProps {\r\n  leverage: number;\r\n  isLong: boolean;\r\n}\r\n\r\nfunction LeverageInfoBox({ leverage, isLong }: LeverageInfoBoxProps) {\r\n  return (\r\n    <View>\r\n      <PositionLeverageBoxText isLong={isLong}>\r\n        X{leverage}\r\n      </PositionLeverageBoxText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LeverageInfoBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../functions/convertKrNumberType\";\r\nimport {\r\n  PositionInfoTitleBoxText,\r\n  PositionInfoValueBoxText,\r\n  UnrealizedPnlBoxValue,\r\n} from \"../../../../styles/TextStyledComponents\";\r\n\r\ninterface OpenPositionInfoProps {\r\n  openPositionValue: number;\r\n  currentfutureTotalAsset: number;\r\n  isPositive: string;\r\n}\r\n\r\nfunction OpenPositionInfo({\r\n  openPositionValue,\r\n  currentfutureTotalAsset,\r\n  isPositive,\r\n}: OpenPositionInfoProps) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\" }}>\r\n      <View style={{ flex: 1.3 }}>\r\n        <PositionInfoTitleBoxText>총 매수</PositionInfoTitleBoxText>\r\n        <PositionInfoValueBoxText>\r\n          {convertKrNumberType(Math.ceil(openPositionValue))}\r\n        </PositionInfoValueBoxText>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <PositionInfoTitleBoxText>총 평가</PositionInfoTitleBoxText>\r\n        <UnrealizedPnlBoxValue isPositive={isPositive}>\r\n          {convertKrNumberType(Math.ceil(currentfutureTotalAsset))}\r\n        </UnrealizedPnlBoxValue>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(OpenPositionInfo);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../functions/convertKrNumberType\";\r\nimport {\r\n  UnrealizedPnlBoxText,\r\n  UnrealizedPnlBoxValue,\r\n} from \"../../../../styles/TextStyledComponents\";\r\n\r\ninterface ProfitInfoBoxProps {\r\n  unrealizedPnl: number;\r\n  profitRate: number;\r\n  isPositive: string;\r\n}\r\n\r\nfunction ProfitInfoBox({\r\n  unrealizedPnl,\r\n  profitRate,\r\n  isPositive,\r\n}: ProfitInfoBoxProps) {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <View style={{ flex: 1.3 }}>\r\n        <UnrealizedPnlBoxText>미실현 손익</UnrealizedPnlBoxText>\r\n        <UnrealizedPnlBoxValue isPositive={isPositive}>\r\n          {convertKrNumberType(Math.ceil(unrealizedPnl))}원{\" \"}\r\n        </UnrealizedPnlBoxValue>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <UnrealizedPnlBoxText>수익률</UnrealizedPnlBoxText>\r\n        <UnrealizedPnlBoxValue isPositive={isPositive}>\r\n          {(profitRate * 100).toFixed(2)}%\r\n        </UnrealizedPnlBoxValue>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(ProfitInfoBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { PositionTitleBoxText } from \"../../../../styles/TextStyledComponents\";\r\nimport theme from \"../../../../styles/theme\";\r\n\r\ninterface TitleBoxProps {\r\n  isLong: boolean;\r\n}\r\n\r\nfunction TitleBox({ isLong }: TitleBoxProps) {\r\n  return (\r\n    <View\r\n      style={{\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: 4,\r\n        overflow: \"hidden\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: isLong\r\n          ? theme.colors.positiveTextColor\r\n          : theme.colors.negativeTextColor,\r\n      }}\r\n    >\r\n      <PositionTitleBoxText isLong={isLong}>\r\n        {isLong ? \"롱\" : \"숏\"}\r\n      </PositionTitleBoxText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TitleBox);\r\n","import { View } from \"react-native\";\r\nimport { IFutureAccountDetail } from \"../../../interfaces/interface\";\r\nimport CloseButton from \"./components/CloseButton\";\r\nimport PositionSettingInfo from \"./components/CurrentPositionInfo\";\r\nimport LeverageInfoBox from \"./components/LeverageInfoBox\";\r\nimport OpenPositionInfo from \"./components/OpenPositionInfo\";\r\nimport ProfitInfoBox from \"./components/ProfitInfoBox\";\r\nimport TitleBox from \"./components/TitleBox\";\r\n\r\ninterface PositionBoxProps {\r\n  isLong: boolean;\r\n  accountDetail: IFutureAccountDetail;\r\n  closeHandler: () => void;\r\n}\r\n\r\nfunction PositionBox({\r\n  accountDetail,\r\n  closeHandler,\r\n  isLong,\r\n}: PositionBoxProps) {\r\n  return (\r\n    <View style={{ height: \"100%\", flexDirection: \"column\", padding: 5 }}>\r\n      <View style={{ flex: 1, flexDirection: \"row\", paddingRight: 10 }}>\r\n        <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TitleBox isLong={isLong} />\r\n          <LeverageInfoBox isLong={isLong} leverage={accountDetail.leverage} />\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <CloseButton isLong={isLong} closeHandler={closeHandler} />\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 5, justifyContent: \"space-evenly\" }}>\r\n        <ProfitInfoBox\r\n          unrealizedPnl={accountDetail.unrealizedPnl}\r\n          profitRate={accountDetail.profitRate}\r\n          isPositive={accountDetail.isPositive}\r\n        />\r\n        <OpenPositionInfo\r\n          openPositionValue={accountDetail.openPositionValue}\r\n          currentfutureTotalAsset={accountDetail.totalAsset}\r\n          isPositive={accountDetail.isPositive}\r\n        />\r\n        <PositionSettingInfo\r\n          liquidPrice={accountDetail.liquidPrice}\r\n          openPrice={accountDetail.openPrice}\r\n          isLong={isLong}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default PositionBox;\r\n","import { memo } from \"react\";\r\nimport { IFutureAccountDetail } from \"../../interfaces/interface\";\r\nimport EmptyPositionBox from \"./EmptyPositionBox\";\r\nimport PositionBox from \"./position-box/PositionBox\";\r\n\r\ninterface PositionInfoViewerProps {\r\n  accountDetail: IFutureAccountDetail;\r\n  closeHandler: () => void;\r\n  isLong: boolean;\r\n}\r\n\r\nfunction PositionInfoViewer({\r\n  accountDetail,\r\n  closeHandler,\r\n  isLong,\r\n}: PositionInfoViewerProps) {\r\n  return (\r\n    <PositionBox\r\n      accountDetail={accountDetail}\r\n      closeHandler={closeHandler}\r\n      isLong={isLong}\r\n    />\r\n  );\r\n}\r\n\r\nexport default memo(PositionInfoViewer);\r\n","import { memo, useEffect, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\r\nimport {\r\n  cashAccountState,\r\n  isCandleMovingState,\r\n  levelInfoState,\r\n  longAccountDetailState,\r\n  longAccountState,\r\n  shortAccountDetailState,\r\n  shortAccountState,\r\n  totalAccountState,\r\n} from \"../../atom\";\r\nimport useComponentSize from \"../../hooks/useComponentSize\";\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport CustomVictoryStack from \"../assets/CustomVictoryStack\";\r\nimport EmptyPositionBox from \"./EmptyPositionBox\";\r\nimport PositionInfoViewer from \"./PositionInfoViewer\";\r\n\r\nfunction PositionInfo() {\r\n  const isCandleMoving = useRecoilValue(isCandleMovingState);\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n\r\n  const [cashAccount, setCashAccount] = useRecoilState(cashAccountState);\r\n  const longAccountDetail = useRecoilValue(longAccountDetailState);\r\n  const resetLongAccount = useResetRecoilState(longAccountState);\r\n  const shortAccountDetail = useRecoilValue(shortAccountDetailState);\r\n  const resetShortAccount = useResetRecoilState(shortAccountState);\r\n  const totalAcount = useRecoilValue(totalAccountState);\r\n\r\n  const [barCashRate, setBarCashRate] = useState(\r\n    totalAcount.cash / totalAcount.totalAsset\r\n  );\r\n  const [barFutureRate, setBarFutureRate] = useState(\r\n    totalAcount.futureValuation / totalAcount.totalAsset\r\n  );\r\n\r\n  const { size, onLayout } = useComponentSize();\r\n\r\n  const longCloseHandler = () => {\r\n    if (!isCandleMoving) {\r\n      setCashAccount(\r\n        (prev) =>\r\n          prev +\r\n          longAccountDetail.totalAsset *\r\n            (1 -\r\n              (levelInfo.transactionFeeRate * longAccountDetail.leverage) / 100)\r\n      );\r\n      resetLongAccount();\r\n    }\r\n  };\r\n\r\n  const shortCloseHandler = () => {\r\n    if (!isCandleMoving) {\r\n      setCashAccount(\r\n        (prev) =>\r\n          prev +\r\n          shortAccountDetail.totalAsset *\r\n            (1 -\r\n              (levelInfo.transactionFeeRate * shortAccountDetail.leverage) /\r\n                100)\r\n      );\r\n      resetShortAccount();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isCandleMoving) {\r\n      setBarCashRate(totalAcount.cash / totalAcount.totalAsset);\r\n      setBarFutureRate(totalAcount.futureValuation / totalAcount.totalAsset);\r\n    }\r\n  }, [isCandleMoving, totalAcount]);\r\n\r\n  return (\r\n    <View style={rootStyles.positionInfo}>\r\n      <View style={{ flex: 1 }} onLayout={onLayout}>\r\n        <CustomVictoryStack\r\n          parentSize={size}\r\n          barCashRate={barCashRate}\r\n          barFutureRate={barFutureRate}\r\n          position={longAccountDetail.positionActive}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 2.5 }}>\r\n        {longAccountDetail.positionActive ? (\r\n          <PositionInfoViewer\r\n            accountDetail={longAccountDetail}\r\n            closeHandler={longCloseHandler}\r\n            isLong={true}\r\n          />\r\n        ) : null}\r\n        {shortAccountDetail.positionActive ? (\r\n          <PositionInfoViewer\r\n            accountDetail={shortAccountDetail}\r\n            closeHandler={shortCloseHandler}\r\n            isLong={false}\r\n          />\r\n        ) : null}\r\n        {!longAccountDetail.positionActive &&\r\n        !shortAccountDetail.positionActive ? (\r\n          <EmptyPositionBox />\r\n        ) : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(PositionInfo);\r\n","import { Text, View } from \"react-native\";\r\nimport rootStyles from \"../../../styles/rootStyles\";\r\nimport { BaseTextContainer } from \"../../../styles/TextStyledComponents\";\r\n\r\nfunction Shop() {\r\n  return (\r\n    <View style={rootStyles.shop}>\r\n      <BaseTextContainer>Shop</BaseTextContainer>\r\n      <BaseTextContainer>(준비중)</BaseTextContainer>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Shop;\r\n","import { memo } from \"react\";\r\nimport {\r\n  GestureResponderEvent,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\n\r\nconst switchStyle = (\r\n  disabled?: boolean,\r\n  selectedValue?: number | boolean,\r\n  selectedColor?: string,\r\n  nonSelectedColor?: string,\r\n  thisValue?: number | boolean\r\n) => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      backgroundColor: \"transparent\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"row\",\r\n      opacity: disabled ? 0.5 : 1,\r\n    },\r\n    box: {\r\n      flex: 1,\r\n      backgroundColor: \"transprent\",\r\n      borderWidth: 1,\r\n      borderStyle: \"solid\",\r\n      borderColor:\r\n        selectedValue === thisValue ? selectedColor : nonSelectedColor,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  });\r\n};\r\n\r\nconst textStyle = (\r\n  disabled?: boolean,\r\n  selectedValue?: number | boolean,\r\n  selectedColor?: string,\r\n  nonSelectedColor?: string,\r\n  thisValue?: number | boolean\r\n) => {\r\n  return StyleSheet.create({\r\n    text: {\r\n      color: selectedValue === thisValue ? selectedColor : nonSelectedColor,\r\n    },\r\n  });\r\n};\r\n\r\nexport interface CustomToggleSwitchProps {\r\n  options: { label: string; value: number | boolean }[];\r\n  value: number | boolean;\r\n  setValueFunction: React.Dispatch<React.SetStateAction<number | boolean>>;\r\n  disabled?: boolean;\r\n  selectedColor?: string;\r\n  nonSelectedColor?: string;\r\n}\r\n\r\nfunction CustomToggleSwitch({\r\n  options,\r\n  value,\r\n  setValueFunction,\r\n  disabled,\r\n  selectedColor = \"#32D993\",\r\n  nonSelectedColor = \"#bebebe\",\r\n}: CustomToggleSwitchProps) {\r\n  const onPressHandler = (\r\n    evt: GestureResponderEvent,\r\n    newValue: number | boolean\r\n  ) => {\r\n    setValueFunction(newValue);\r\n  };\r\n  return (\r\n    <View style={switchStyle(disabled).container}>\r\n      {options.map((ele, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={(evt) => onPressHandler(evt, ele.value)}\r\n          style={\r\n            switchStyle(\r\n              disabled,\r\n              value,\r\n              selectedColor,\r\n              nonSelectedColor,\r\n              ele.value\r\n            ).box\r\n          }\r\n          disabled={disabled}\r\n        >\r\n          <Text\r\n            style={\r\n              textStyle(\r\n                disabled,\r\n                value,\r\n                selectedColor,\r\n                nonSelectedColor,\r\n                ele.value\r\n              ).text\r\n            }\r\n          >\r\n            {ele.label}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(CustomToggleSwitch);\r\n","import MultiSlider from \"@ptomasroos/react-native-multi-slider\";\r\nimport { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { ISize } from \"../../../../../hooks/useComponentSize\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\nimport theme from \"../../../../../styles/theme\";\r\n\r\ninterface AmountSettingBoxProps {\r\n  parentSize: ISize;\r\n  isLongSelected: boolean;\r\n  amountRate: number;\r\n  setAmountRate: (value: number) => void;\r\n}\r\n\r\nfunction AmountSettingBox({\r\n  parentSize,\r\n  isLongSelected,\r\n  amountRate,\r\n  setAmountRate,\r\n}: AmountSettingBoxProps) {\r\n  const amountRateHandler = (value: number[]) => {\r\n    setAmountRate(value[0]);\r\n  };\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n      }}\r\n    >\r\n      <MultiSlider\r\n        sliderLength={parentSize.width * 0.8 || 200}\r\n        values={[amountRate]}\r\n        onValuesChange={amountRateHandler}\r\n        min={0}\r\n        max={101}\r\n        step={5}\r\n        snapped={true}\r\n        markerStyle={{\r\n          width: 18,\r\n          height: 18,\r\n          backgroundColor: isLongSelected\r\n            ? theme.colors.longButtonColor\r\n            : theme.colors.shortButtonColor,\r\n        }}\r\n        selectedStyle={{\r\n          backgroundColor: isLongSelected\r\n            ? theme.colors.longButtonColor\r\n            : theme.colors.shortButtonColor,\r\n        }}\r\n        trackStyle={{ backgroundColor: theme.colors.toneDownTextColor }}\r\n      />\r\n\r\n      <ControlSectionTitleText> {amountRate}%</ControlSectionTitleText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(AmountSettingBox);\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface CoinAmountBoxProps {\r\n  coinAmount: number;\r\n}\r\n\r\nfunction CoinAmountBox({ coinAmount }: CoinAmountBoxProps) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n      <ControlSectionTitleText>개수 | </ControlSectionTitleText>\r\n      <ControlSectionValueText>\r\n        {convertKrNumberType(coinAmount)}\r\n      </ControlSectionValueText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(CoinAmountBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { LEVERAGE_UNITS } from \"../../../../../globalConstant\";\r\nimport { ControlSectionTitleText } from \"../../../../../styles/TextStyledComponents\";\r\nimport theme from \"../../../../../styles/theme\";\r\nimport CustomToggleSwitch from \"../../../../assets/CustomSwitch\";\r\ninterface LeverageControlBoxProps {\r\n  isLongSelected: boolean;\r\n  activeLeverage: number;\r\n  leverage: number;\r\n  setLeverage: React.Dispatch<React.SetStateAction<number>>;\r\n  disabled: boolean;\r\n}\r\n\r\nfunction LeverageControlBox({\r\n  isLongSelected,\r\n  activeLeverage,\r\n  leverage,\r\n  setLeverage,\r\n  disabled,\r\n}: LeverageControlBoxProps) {\r\n  return (\r\n    <View style={{ width: \"100%\", height: \"100%\" }}>\r\n      <View style={{ marginTop: 10 }}>\r\n        <CustomToggleSwitch\r\n          options={LEVERAGE_UNITS}\r\n          value={activeLeverage ? activeLeverage : leverage}\r\n          setValueFunction={setLeverage}\r\n          disabled={disabled}\r\n          selectedColor={\r\n            isLongSelected\r\n              ? theme.colors.longButtonColor\r\n              : theme.colors.shortButtonColor\r\n          }\r\n          nonSelectedColor={theme.colors.toneDownTextColor}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LeverageControlBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n  LiquidControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface LiquidPriceBoxProps {\r\n  isLongSelected: boolean;\r\n  longLiquid: number;\r\n  shortLiquid: number;\r\n}\r\n\r\nfunction LiquidPriceBox({\r\n  isLongSelected,\r\n  longLiquid,\r\n  shortLiquid,\r\n}: LiquidPriceBoxProps) {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <ControlSectionTitleText>청산가 </ControlSectionTitleText>\r\n      <LiquidControlSectionValueText isLong={isLongSelected}>\r\n        {isLongSelected\r\n          ? convertKrNumberType(Math.ceil(longLiquid))\r\n          : convertKrNumberType(Math.ceil(shortLiquid))}\r\n      </LiquidControlSectionValueText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LiquidPriceBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface TotalPriceBoxProps {\r\n  totalPrice: number;\r\n}\r\n\r\nfunction TotalPriceBox({ totalPrice }: TotalPriceBoxProps) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n      <ControlSectionTitleText>주문총액 | </ControlSectionTitleText>\r\n      <ControlSectionValueText>\r\n        {convertKrNumberType(Math.ceil(totalPrice))}원\r\n      </ControlSectionValueText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TotalPriceBox);\r\n","import { memo } from \"react\";\r\nimport { Text, TouchableOpacity } from \"react-native\";\r\nimport { OpenButtonContainer } from \"../../../../../styles/buttonStyles\";\r\nimport { OpenButtonText } from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface TradeButtonProps {\r\n  isCandleMoving: boolean;\r\n  buttonHandler: () => void;\r\n  isBuy: boolean;\r\n}\r\n\r\nfunction TradeButton({\r\n  isCandleMoving,\r\n  buttonHandler,\r\n  isBuy,\r\n}: TradeButtonProps) {\r\n  return (\r\n    <OpenButtonContainer\r\n      isLong={isBuy}\r\n      onPress={buttonHandler}\r\n      disabled={isCandleMoving}\r\n    >\r\n      <OpenButtonText isLong={isBuy}>\r\n        {isBuy ? \"BUY / 롱\" : \"Sell / 숏\"}\r\n      </OpenButtonText>\r\n    </OpenButtonContainer>\r\n  );\r\n}\r\n\r\nexport default memo(TradeButton);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { levelInfoState } from \"../../../../../atom\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface TransactionFeeRateBoxProps {\r\n  transactionFee: number;\r\n}\r\n\r\nfunction TransactionFeeRateBox({ transactionFee }: TransactionFeeRateBoxProps) {\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <ControlSectionTitleText>수수료율 </ControlSectionTitleText>\r\n      <ControlSectionValueText style={{ color: levelInfo.color }}>\r\n        {transactionFee}%\r\n      </ControlSectionValueText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TransactionFeeRateBox);\r\n","import { cloneDeep } from \"lodash\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  cashAccountState,\r\n  isCandleMovingState,\r\n  isLongControllerActiveState,\r\n  lastClosePriceState,\r\n  levelInfoState,\r\n  longAccountDetailState,\r\n  longAccountState,\r\n  longLiquidState,\r\n  shortAccountDetailState,\r\n  shortAccountState,\r\n  shortLiquidState,\r\n} from \"../../../../atom\";\r\nimport useComponentSize from \"../../../../hooks/useComponentSize\";\r\nimport AmountSettingBox from \"./components/AmountSettingBox\";\r\nimport CoinAmountBox from \"./components/CoinAmountBox\";\r\n\r\nimport LeverageControlBox from \"./components/LeverageControlBox\";\r\nimport LiquidPriceBox from \"./components/LiquidPriceBox\";\r\nimport TotalPriceBox from \"./components/TotalPriceBox\";\r\nimport TradeButton from \"./components/TradeButton\";\r\nimport TransactionFeeRateBox from \"./components/TransactionFeeRateBox\";\r\n\r\nfunction TradeController({\r\n  disabled,\r\n  activeLeverage,\r\n}: {\r\n  disabled: boolean;\r\n  activeLeverage?: number;\r\n}) {\r\n  // Account System\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n  const [cashAccount, setCashAccount] = useRecoilState(cashAccountState);\r\n  const [longLiquid, setLongLiquid] = useRecoilState(longLiquidState);\r\n  const [shortLiquid, setShortLiquid] = useRecoilState(shortLiquidState);\r\n  const lastClosePrice = useRecoilValue(lastClosePriceState);\r\n  const [longAccount, setLongAccount] = useRecoilState(longAccountState);\r\n  const [shortAccount, setShortAccount] = useRecoilState(shortAccountState);\r\n  const longAccountDetail = useRecoilValue(longAccountDetailState);\r\n  const shortAccountDetail = useRecoilValue(shortAccountDetailState);\r\n  // UI System\r\n  const isCandleMoving = useRecoilValue(isCandleMovingState);\r\n  const isLongSelected = useRecoilValue(isLongControllerActiveState);\r\n\r\n  const [leverage, setLeverage] = useState(1);\r\n  const [amountRate, setAmountRate] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [coinAmount, setCoinAmount] = useState(0);\r\n\r\n  const { size, onLayout } = useComponentSize();\r\n\r\n  const buyButtonHandler = useCallback(() => {\r\n    if (isLongSelected) {\r\n      if (!isCandleMoving) {\r\n        if (shortAccountDetail.positionActive) {\r\n          alert(\"Long 포지션과 Short 포지션을 동시에 보유할 수 없습니다.\");\r\n        } else if (!longAccountDetail.positionActive && coinAmount > 0) {\r\n          setCashAccount((prev) => prev - totalPrice);\r\n          const newLongAccount = {\r\n            positionActive: true,\r\n            openPrice: lastClosePrice,\r\n            liquidPrice: longLiquid,\r\n            leverage: leverage,\r\n            openPositionValue: lastClosePrice * coinAmount,\r\n            openPositionAmount: coinAmount,\r\n            currentPositionValue: lastClosePrice * coinAmount,\r\n          };\r\n          setLongAccount(newLongAccount);\r\n        } else if (longAccountDetail.positionActive && coinAmount > 0) {\r\n          setCashAccount((prev) => prev - totalPrice);\r\n          setLongAccount((prev) => {\r\n            const newLog = cloneDeep(prev);\r\n            const newOpenPositionValue = lastClosePrice * coinAmount;\r\n            newLog.openPrice =\r\n              (newLog.openPrice * newLog.openPositionAmount +\r\n                newOpenPositionValue) /\r\n              (newLog.openPositionAmount + coinAmount);\r\n\r\n            newLog.openPositionAmount = newLog.openPositionAmount + coinAmount;\r\n\r\n            newLog.openPositionValue =\r\n              newLog.openPositionValue + newOpenPositionValue;\r\n\r\n            newLog.currentPositionValue =\r\n              newLog.currentPositionValue + newOpenPositionValue;\r\n\r\n            newLog.liquidPrice = newLog.openPrice * (1 - 1 / newLog.leverage);\r\n            return newLog;\r\n          });\r\n        } else if (coinAmount === 0) {\r\n          alert(\"0개는 주문할 수 없습니다.\");\r\n        }\r\n        setAmountRate(0);\r\n      }\r\n    }\r\n  }, [\r\n    isLongSelected,\r\n    isCandleMoving,\r\n    longAccountDetail,\r\n    totalPrice,\r\n    coinAmount,\r\n  ]);\r\n\r\n  const sellButtonHandler = useCallback(() => {\r\n    if (!isLongSelected) {\r\n      if (!isCandleMoving) {\r\n        if (longAccountDetail.positionActive) {\r\n          alert(\"Long 포지션과 Short 포지션을 동시에 보유할 수 없습니다.\");\r\n        } else if (!shortAccountDetail.positionActive && coinAmount > 0) {\r\n          setCashAccount((prev) => prev - totalPrice);\r\n          const newShortAccount = {\r\n            positionActive: true,\r\n            openPrice: lastClosePrice,\r\n            liquidPrice: shortLiquid,\r\n            leverage: leverage,\r\n            openPositionValue: lastClosePrice * coinAmount,\r\n            openPositionAmount: coinAmount,\r\n            currentPositionValue: lastClosePrice * coinAmount,\r\n          };\r\n          setShortAccount(newShortAccount);\r\n        } else if (shortAccountDetail.positionActive && coinAmount > 0) {\r\n          setCashAccount((prev) => prev - totalPrice);\r\n          setShortAccount((prev) => {\r\n            const newLog = cloneDeep(prev);\r\n            const newOpenPositionValue = lastClosePrice * coinAmount;\r\n            newLog.openPrice =\r\n              (newLog.openPrice * newLog.openPositionAmount +\r\n                newOpenPositionValue) /\r\n              (newLog.openPositionAmount + coinAmount);\r\n\r\n            newLog.openPositionAmount = newLog.openPositionAmount + coinAmount;\r\n\r\n            newLog.openPositionValue =\r\n              newLog.openPositionValue + newOpenPositionValue;\r\n\r\n            newLog.currentPositionValue =\r\n              newLog.currentPositionValue + newOpenPositionValue;\r\n\r\n            newLog.liquidPrice = newLog.openPrice * (1 + 1 / newLog.leverage);\r\n            return newLog;\r\n          });\r\n        } else if (coinAmount === 0) {\r\n          alert(\"0개는 주문할 수 없습니다.\");\r\n        }\r\n        setAmountRate(0);\r\n      }\r\n    }\r\n  }, [\r\n    isLongSelected,\r\n    isCandleMoving,\r\n    shortAccountDetail,\r\n    totalPrice,\r\n    coinAmount,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const targetCash = (cashAccount * amountRate) / 100;\r\n    const ableCoinAmount = Math.floor(\r\n      targetCash /\r\n        (lastClosePrice * (1 + (levelInfo.transactionFeeRate / 100) * leverage))\r\n    );\r\n    setCoinAmount(ableCoinAmount);\r\n  }, [amountRate, leverage]);\r\n\r\n  useEffect(() => {\r\n    setTotalPrice(\r\n      lastClosePrice *\r\n        coinAmount *\r\n        (1 + (levelInfo.transactionFeeRate / 100) * leverage)\r\n    );\r\n  }, [lastClosePrice, coinAmount]);\r\n\r\n  useEffect(() => {\r\n    if (isCandleMoving) {\r\n      setLongLiquid(0);\r\n      setShortLiquid(0);\r\n    } else {\r\n      if (isLongSelected) {\r\n        setLongLiquid(lastClosePrice * (1 - 1 / leverage));\r\n      } else {\r\n        setShortLiquid(lastClosePrice * (1 + 1 / leverage));\r\n      }\r\n    }\r\n    return () => {\r\n      setLongLiquid(0);\r\n      setShortLiquid(0);\r\n    };\r\n  }, [lastClosePrice, leverage, isCandleMoving, isLongSelected]);\r\n\r\n  useEffect(() => {\r\n    if (isCandleMoving) {\r\n      setAmountRate(0);\r\n    }\r\n  }, [isCandleMoving]);\r\n\r\n  return (\r\n    <View style={{ height: \"100%\", width: \"100%\" }} onLayout={onLayout}>\r\n      <View style={{ flex: 1.2 }}>\r\n        <LeverageControlBox\r\n          isLongSelected={isLongSelected}\r\n          activeLeverage={activeLeverage}\r\n          leverage={leverage}\r\n          setLeverage={setLeverage}\r\n          disabled={disabled}\r\n        />\r\n      </View>\r\n      <View\r\n        style={{\r\n          flex: 1.5,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{ height: \"100%\", flex: 2, justifyContent: \"space-evenly\" }}\r\n        >\r\n          <TotalPriceBox totalPrice={totalPrice} />\r\n          <CoinAmountBox coinAmount={coinAmount} />\r\n        </View>\r\n        <View\r\n          style={{ height: \"100%\", flex: 1, justifyContent: \"space-evenly\" }}\r\n        >\r\n          <LiquidPriceBox\r\n            isLongSelected={isLongSelected}\r\n            longLiquid={longLiquid}\r\n            shortLiquid={shortLiquid}\r\n          />\r\n          <TransactionFeeRateBox\r\n            transactionFee={levelInfo.transactionFeeRate}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1.5 }}>\r\n        <AmountSettingBox\r\n          parentSize={size}\r\n          isLongSelected={isLongSelected}\r\n          amountRate={amountRate}\r\n          setAmountRate={setAmountRate}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 1.5, flexDirection: \"row\" }}>\r\n        <View style={{ flex: 3, alignItems: \"center\" }}>\r\n          {isLongSelected ? (\r\n            <TradeButton\r\n              isCandleMoving={isCandleMoving}\r\n              buttonHandler={buyButtonHandler}\r\n              isBuy={true}\r\n            />\r\n          ) : (\r\n            <TradeButton\r\n              isCandleMoving={isCandleMoving}\r\n              buttonHandler={sellButtonHandler}\r\n              isBuy={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default TradeController;\r\n","import { useRecoilValue } from \"recoil\";\r\nimport { longAccountDetailState } from \"../../../../atom\";\r\nimport TradeController from \"./TradeController\";\r\n\r\nfunction LongTradeController() {\r\n  const longAccountDetail = useRecoilValue(longAccountDetailState);\r\n\r\n  return (\r\n    <TradeController\r\n      disabled={longAccountDetail.positionActive}\r\n      activeLeverage={\r\n        longAccountDetail.positionActive ? longAccountDetail.leverage : null\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default LongTradeController;\r\n","import { useRecoilValue } from \"recoil\";\r\nimport { shortAccountDetailState } from \"../../../../atom\";\r\nimport TradeController from \"./TradeController\";\r\n\r\nfunction ShortTradeController() {\r\n  const shortAccountDetail = useRecoilValue(shortAccountDetailState);\r\n  return (\r\n    <TradeController\r\n      disabled={shortAccountDetail.positionActive}\r\n      activeLeverage={\r\n        shortAccountDetail.positionActive ? shortAccountDetail.leverage : null\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ShortTradeController;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { isLongControllerActiveState } from \"../../../atom\";\r\nimport rootStyles from \"../../../styles/rootStyles\";\r\nimport theme from \"../../../styles/theme\";\r\nimport CustomToggleSwitch from \"../../assets/CustomSwitch\";\r\nimport LongTradeController from \"./trade-controller/LongTradeController\";\r\nimport ShortTradeController from \"./trade-controller/ShortTradeController\";\r\n\r\nfunction Trade() {\r\n  const [isLongSelected, setIsLongSelected] = useRecoilState(\r\n    isLongControllerActiveState\r\n  );\r\n  return (\r\n    <View style={rootStyles.trade}>\r\n      <View style={{ flex: 1, backgroundColor: theme.colors.backgroundColor1 }}>\r\n        <CustomToggleSwitch\r\n          options={[\r\n            { label: \"롱\", value: true },\r\n            { label: \"숏\", value: false },\r\n          ]}\r\n          value={isLongSelected}\r\n          setValueFunction={setIsLongSelected}\r\n          selectedColor={\r\n            isLongSelected\r\n              ? theme.colors.longButtonColor\r\n              : theme.colors.shortButtonColor\r\n          }\r\n          nonSelectedColor={theme.colors.toneDownTextColor}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 6, backgroundColor: theme.colors.backgroundColor1 }}>\r\n        {isLongSelected ? <LongTradeController /> : <ShortTradeController />}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Trade;\r\n","import { ScrollView, View } from \"react-native\";\r\n\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport Shop from \"./shop/Shop\";\r\nimport Trade from \"./trade/Trade\";\r\n\r\nfunction ControlPanel() {\r\n  return (\r\n    <View style={rootStyles.controlPanel}>\r\n      <Shop />\r\n      <Trade />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import { Text, TouchableOpacity, View } from \"react-native\";\r\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\r\nimport {\r\n  cashAccountState,\r\n  isCandleMovingState,\r\n  levelNumberState,\r\n  longAccountState,\r\n  shortAccountState,\r\n  turnNumberState,\r\n} from \"../../atom\";\r\nimport {\r\n  AccountResetButtonContainer,\r\n  BaseButton,\r\n  NextTurnButtonContainer,\r\n} from \"../../styles/buttonStyles\";\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport {\r\n  NextTurnButtonText,\r\n  ResetButtonText,\r\n} from \"../../styles/TextStyledComponents\";\r\n\r\nfunction RootControlButton() {\r\n  const [turnNumber, setTurnNumber] = useRecoilState(turnNumberState);\r\n  const resetCashAccount = useResetRecoilState(cashAccountState);\r\n  const resetLongAccount = useResetRecoilState(longAccountState);\r\n  const resetShortAccount = useResetRecoilState(shortAccountState);\r\n  const resetLevelNumber = useResetRecoilState(levelNumberState);\r\n  const [isCandleMoving, setIsCandleMoving] =\r\n    useRecoilState(isCandleMovingState);\r\n  const nextTurnHandler = () => {\r\n    setIsCandleMoving(true);\r\n    setTurnNumber((prev) => prev + 1);\r\n  };\r\n  const resetButtonHandler = () => {\r\n    resetCashAccount();\r\n    resetLongAccount();\r\n    resetShortAccount();\r\n    resetLevelNumber();\r\n  };\r\n\r\n  return (\r\n    <View style={rootStyles.rootControlButton}>\r\n      <View\r\n        style={{ flex: 1, justifyContent: \"flex-start\", alignItems: \"center\" }}\r\n      >\r\n        <AccountResetButtonContainer\r\n          onPress={resetButtonHandler}\r\n          disabled={isCandleMoving}\r\n        >\r\n          <ResetButtonText>리셋</ResetButtonText>\r\n        </AccountResetButtonContainer>\r\n      </View>\r\n      <View\r\n        style={{\r\n          flex: 3.5,\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <NextTurnButtonContainer\r\n          onPress={nextTurnHandler}\r\n          disabled={isCandleMoving}\r\n        >\r\n          <NextTurnButtonText>Next Turn</NextTurnButtonText>\r\n        </NextTurnButtonContainer>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default RootControlButton;\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { LevelLabelText } from \"../../styles/TextStyledComponents\";\r\n\r\ninterface LevelLabelBoxProps {\r\n  label: string;\r\n  color: string;\r\n}\r\n\r\nfunction LevelLabelBox({ label, color }: LevelLabelBoxProps) {\r\n  return (\r\n    <View style={{ backgroundColor: color, padding: 3, marginRight: 5 }}>\r\n      <LevelLabelText>{label}</LevelLabelText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LevelLabelBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { ProgressBar, Colors } from \"react-native-paper\";\r\nimport { ProgressValueText } from \"../../styles/TextStyledComponents\";\r\n\r\ninterface LevelProgressBarProps {\r\n  progressRate: number;\r\n}\r\n\r\nfunction LevelProgressBar({ progressRate }: LevelProgressBarProps) {\r\n  return (\r\n    <View style={{ width: \"70%\" }}>\r\n      <ProgressBar progress={progressRate} color={Colors.greenA200} />\r\n      <View style={{ alignItems: \"flex-end\" }}>\r\n        <ProgressValueText>\r\n          {(progressRate * 100).toFixed(2)}%\r\n        </ProgressValueText>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LevelProgressBar);\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\r\nimport {\r\n  cashAccountState,\r\n  levelNumberState,\r\n  longAccountState,\r\n  shortAccountState,\r\n} from \"../../atom\";\r\nimport { LevelUpButtonContainer } from \"../../styles/buttonStyles\";\r\nimport { LevelUpText } from \"../../styles/TextStyledComponents\";\r\n\r\ninterface LevelUpButtonProps {\r\n  isReadyToLevelUp: boolean;\r\n}\r\n\r\nfunction LevelUpButton({ isReadyToLevelUp }: LevelUpButtonProps) {\r\n  const [levelNumber, setLevelNumber] = useRecoilState(levelNumberState);\r\n  const resetCashAccount = useResetRecoilState(cashAccountState);\r\n  const resetLongAccount = useResetRecoilState(longAccountState);\r\n  const resetShortAccount = useResetRecoilState(shortAccountState);\r\n\r\n  const levelUpHandler = () => {\r\n    if (levelNumber < 7) {\r\n      setLevelNumber((prev) => prev + 1);\r\n      resetCashAccount();\r\n      resetLongAccount();\r\n      resetShortAccount();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <LevelUpButtonContainer\r\n        disabled={!isReadyToLevelUp}\r\n        onPress={levelUpHandler}\r\n      >\r\n        <LevelUpText>레벨업</LevelUpText>\r\n      </LevelUpButtonContainer>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LevelUpButton);\r\n","import { memo, useEffect, useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  isCandleMovingState,\r\n  levelInfoState,\r\n  levelNumberState,\r\n  totalAccountState,\r\n} from \"../../atom\";\r\n\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport LevelLabelBox from \"./LevelLabelBox\";\r\nimport LevelProgressBar from \"./LevelProgressBar\";\r\nimport LevelUpButton from \"./LevelUpButton\";\r\n\r\nfunction LevelInfoBox() {\r\n  const levelNumber = useRecoilValue(levelNumberState);\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n  const totalAccount = useRecoilValue(totalAccountState);\r\n  const isCandleMoving = useRecoilValue(isCandleMovingState);\r\n  const [progressRate, setProgressRate] = useState<number>(\r\n    totalAccount.totalAsset / levelInfo.loan\r\n  );\r\n  const [isReadyToLevelUp, setIsReadyToLevelUp] = useState<boolean>(\r\n    progressRate >= 1\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isCandleMoving) {\r\n      setProgressRate(totalAccount.totalAsset / levelInfo.loan);\r\n    }\r\n  }, [isCandleMoving, levelNumber]);\r\n\r\n  useEffect(() => {\r\n    setIsReadyToLevelUp(progressRate >= 1);\r\n  }, [progressRate]);\r\n\r\n  return (\r\n    <View style={rootStyles.level}>\r\n      <View\r\n        style={{\r\n          flex: 2.7,\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        <LevelLabelBox label={levelInfo.levelName} color={levelInfo.color} />\r\n        <LevelProgressBar progressRate={progressRate} />\r\n      </View>\r\n      <View style={{ flex: 1, paddingRight: 10 }}>\r\n        <LevelUpButton isReadyToLevelUp={isReadyToLevelUp} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LevelInfoBox);\r\n","import { View } from \"react-native\";\r\nimport rootStyles from \"../styles/rootStyles\";\r\nimport MiddleAccount from \"./account/MiddleAccount\";\r\nimport TopAccount from \"./account/TopAccount\";\r\nimport Chart from \"./chart/Chart\";\r\nimport PositionInfo from \"./position-info/PositionInfo\";\r\nimport ControlPanel from \"./control-panel/ControlPanel\";\r\nimport RootControlButton from \"./root-control-button/RootControlButton\";\r\nimport LevelInfoBox from \"./level/LevelInfoBox\";\r\n\r\nfunction Display() {\r\n  return (\r\n    <>\r\n      <View style={rootStyles.display}>\r\n        <TopAccount />\r\n        <LevelInfoBox />\r\n        <Chart />\r\n        <MiddleAccount />\r\n        <PositionInfo />\r\n        <ControlPanel />\r\n        <RootControlButton />\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import { StatusBar } from \"expo-status-bar\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport Display from \"./components/Display\";\nimport theme from \"./styles/theme\";\n\nexport default function App() {\n  return (\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n        <Display />\n        <StatusBar style=\"light\" />\n      </ThemeProvider>\n    </RecoilRoot>\n  );\n}\n"],"sourceRoot":""}