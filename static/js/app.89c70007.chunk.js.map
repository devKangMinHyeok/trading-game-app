{"version":3,"sources":["styles/theme.ts","styles/rootStyles.ts","globalConstant.ts","atom.ts","functions/convertKrNumberType.ts","styles/TextStyledComponents.tsx","components/account/MiddleAccount.tsx","components/account/TopAccount.tsx","functions/calDate.ts","functions/getRandomRate.ts","functions/candleGenerator.ts","styles/chartStyles.ts","components/chart/CandleChart.tsx","components/chart/Chart.tsx","components/control-panel/shop/Shop.tsx","components/assets/CustomSwitch.tsx","hooks/useComponentSize.ts","components/control-panel/trade/trade-controller/components/AmountSettingBox.tsx","components/control-panel/trade/trade-controller/components/CoinAmountBox.tsx","components/control-panel/trade/trade-controller/components/LeverageControlBox.tsx","components/control-panel/trade/trade-controller/components/LiquidPriceBox.tsx","components/control-panel/trade/trade-controller/components/TotalPriceBox.tsx","styles/buttonStyles.tsx","components/control-panel/trade/trade-controller/components/TradeButton.tsx","components/control-panel/trade/trade-controller/components/TransactionFeeRateBox.tsx","components/control-panel/trade/trade-controller/TradeController.tsx","components/control-panel/trade/trade-controller/LongTradeController.tsx","components/control-panel/trade/trade-controller/ShortTradeController.tsx","components/control-panel/trade/Trade.tsx","components/control-panel/ControlPanel.tsx","components/root-control-button/RootControlButton.tsx","components/level/LevelLabelBox.tsx","components/level/LevelProgressBar.tsx","components/level/LevelUpButton.tsx","components/level/LevelInfoBox.tsx","components/info/loan-info/components/InterestBox.tsx","components/info/loan-info/components/LoanBox.tsx","components/info/loan-info/components/TurnNumberBox.tsx","components/info/loan-info/LoanInfo.tsx","components/assets/CustomVictoryStack.tsx","components/info/position-info/EmptyPositionBox.tsx","components/info/position-info/position-box/components/CloseButton.tsx","components/info/position-info/position-box/components/CurrentPositionInfo.tsx","components/info/position-info/position-box/components/LeverageInfoBox.tsx","components/info/position-info/position-box/components/OpenPositionInfo.tsx","components/info/position-info/position-box/components/ProfitInfoBox.tsx","components/info/position-info/position-box/components/TitleBox.tsx","components/info/position-info/position-box/PositionBox.tsx","components/info/position-info/PositionInfoViewer.tsx","components/info/position-info/PositionInfo.tsx","components/info/Info.tsx","components/Display.tsx","App.tsx"],"names":["theme","colors","backgroundColor1","backgroundColor2","backgroundColor3","baseTextColor","toneDownTextColor","positiveTextColor","negativeTextColor","longButtonColor","longCandleColor","positivePriceColor","shortButtonColor","shortCandleColor","negativePriceColor","longLiquidActiveLineColor","longLiquidInactiveLineColor","shortLiquidActiveLineColor","shortLiquidInactiveLineColor","crossHairLineColor","openPriceLineColor","dayNumberBackgroundColor","interestRateValueBackgroundColor","interestTurnLimitBackgroundColor","remainTurnBoxBackgrounderColor","LevelUpButtonBackgroundColor","CloseButtonBackgroundColor","CloseButtonBackgroundColor2","nextTurnButtonBackgroundColor","resetButtonBackgroundColor","font","bigValueFontSize","midiumValueFontSize","smallValueFontSize","bigRateFontSize","bigTextFontSize","midiumTextFontSize","smallTextFontSize","tinyFontsize","boldFontWeight","regularFontWeight","lightFontWeight","SCREEN_WIDTH","Dimensions","get","width","rootStyles","StyleSheet","create","display","flex","backgroundColor","topAccount","flexDirection","gap","justifyContent","alignItems","level","chart","overflow","middleAccount","Info","closePanel","positionInfo","loanInfo","padding","controlPanel","trade","shop","rootControlButton","CANDLE_INITIAL_DATE","Date","LEVEL_SETTING","levelNumber","levelName","randomGap","stddev","transactionFeeRate","color","loan","limitTurn","LEVERAGE_UNITS","label","value","INITIAL_CANDLE_SET","x","open","close","high","low","candleDataState","atom","key","default","turnNumberState","interestTurnNumberState","selector","loanTurnNumberState","turnNumber","levelInfoState","isLongControllerActiveState","isCandleMovingState","lastClosePriceState","lastOpenPriceState","longLiquidState","shortLiquidState","cashAccountState","levelNumberState","interestPriceState","loanInfoState","interestTurnNumber","cashAccount","interestPrice","futureActive","futureActiveState","totalFutureAccount","totalFutureAccountState","cashInterestRemain","futureInterestFee","leverage","futureInterestRemain","totalAsset","interest","payAble","cashAble","futureAble","cashRemain","futurePayFee","longAccountState","positionActive","openPrice","liquidPrice","openPositionAmount","openPositionValue","currentPositionValue","shortAccountState","isLongActive","longLeverage","isShortActive","shortLeverage","longAccountDetailState","longAccount","unrealizedPnl","profitRate","isPositive","shortAccountDetailState","shortAccount","longAccountDetail","shortAccountDetail","totalAccountState","futureAccount","openValuation","realizedPnl","cash","futureValuation","convertKrNumberType","number","toString","replace","BaseTextContainer","styled","Text","props","TopAccountText","TopAccountValue","TopAccountRate","LevelLabelText","ProgressValueText","TargetValueText","LevelUpText","MiddleAccountText","MiddleAccountValue","PositionTitleBoxText","isLong","PositionLeverageBoxText","PositionInfoTitleBoxText","PositionInfoValueBoxText","LiquidValueText","OpenValueText","UnrealizedPnlBoxText","UnrealizedPnlBoxValue","PositionCloseButtonText","EmptyPositionText","DayNumberText","LoanInfoTitleText","LoanInfoValueText","LoanInfoUnitText","InterestTurnLimitText","RemainTurnBoxText","ControlSectionTitleText","ControlSectionValueText","LiquidControlSectionValueText","OpenButtonText","ResetButtonText","NextTurnButtonText","memo","totalAccount","useRecoilValue","View","style","Math","ceil","toFixed","calDate","date","resDate","setDate","getDate","spareRandom","normalRandom","val","u","v","s","mul","random","sqrt","log","normalRandomScaled","mean","r","getRandomRate","min","max","normalRandomScaledInRange","candleGenerator","time","lastClosePrice","numberPerUnit","random_gap","previousCandle","candleSet","i","newCandle","cloneDeep","newClose","newHigh","newLow","push","sharedLabelStyle","fontSize","fill","CandleChart","levelInfo","useRecoilState","candleData","setCandleData","setIsCandleMoving","setLastClosePrice","lastOpenPrice","setLastOpenPrice","setLongAccount","setShortAccount","resetLongAccount","useResetRecoilState","resetShortAccount","longLiquid","shortLiquid","useState","chartXDomain","setChartXDomain","INITIAL_CANDLE_LOW","LAST_OF_INITIAL_CANDLE_HIGH","chartYDomain","setChartYDomain","updateCandleData","useCallback","index","lastIndex","setTimeout","prev","newData","slice","length","shift","newLog","useEffect","timers","lastDate","nextDate","lastPrice","newCandleSet","forEach","ele","clearTimeout","targetCandles","startDate","lowestPrice","highestPrice","domainPadding","containerComponent","cursorLabel","datum","round","y","cursorComponent","stroke","strokeWidth","cursorLabelComponent","parent","background","dependentAxis","offsetX","orientation","grid","tickLabels","candleWidth","data","d","candleColors","positive","negative","domain","text","textAnchor","backgroundPadding","left","right","top","bottom","backgroundStyle","opacity","strokeDasharray","Chart","Shop","switchStyle","disabled","selectedValue","selectedColor","nonSelectedColor","thisValue","container","height","box","borderWidth","borderStyle","borderColor","textStyle","options","setValueFunction","map","TouchableOpacity","onPress","evt","newValue","useComponentSize","size","setSize","onLayout","event","nativeEvent","layout","parentSize","isLongSelected","amountRate","setAmountRate","MultiSlider","sliderLength","values","onValuesChange","step","snapped","markerStyle","selectedStyle","trackStyle","coinAmount","activeLeverage","setLeverage","marginTop","totalPrice","BaseButton","LevelUpButtonContainer","CloseButtonContainer","OpenButtonContainer","AccountResetButtonContainer","NextTurnButtonContainer","isCandleMoving","buttonHandler","isBuy","transactionFee","TradeController","setCashAccount","setLongLiquid","setShortLiquid","setTotalPrice","setCoinAmount","buyButtonHandler","alert","newOpenPositionValue","sellButtonHandler","targetCash","ableCoinAmount","floor","paddingRight","LongTradeController","ShortTradeController","Trade","setIsLongSelected","ControlPanel","RootControlButton","loanTurnNumber","setLevelNumber","setTurnNumber","resetCashAccount","resetLevelNumber","resetTurnNumber","resetAccount","setLevelDown","newAccount","console","error","marginRight","progressRate","targetValue","ProgressBar","progress","Colors","greenA200","isReadyToLevelUp","setProgressRate","setIsReadyToLevelUp","remainTurn","loanPrice","LoanInfo","barCashRate","barFutureRate","position","barColor","setBarColor","animate","duration","colorScale","labels","labelComponent","dx","dy","barWidth","paddingTop","closeHandler","PositionSettingInfo","Number","currentfutureTotalAsset","marginBottom","borderRadius","PositionBox","accountDetail","totalAcount","setBarCashRate","setBarFutureRate","ScrollView","horizontal","alwaysBounceHorizontal","bounces","Display","App","StatusBar"],"mappings":"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","file":"static/js/app.89c70007.chunk.js","sourcesContent":["interface IColors {\r\n  backgroundColor1: string;\r\n  backgroundColor2: string;\r\n  backgroundColor3: string;\r\n\r\n  baseTextColor: string;\r\n  toneDownTextColor: string;\r\n  positiveTextColor: string;\r\n  negativeTextColor: string;\r\n\r\n  longButtonColor: string;\r\n  longCandleColor: string;\r\n  positivePriceColor: string;\r\n\r\n  shortButtonColor: string;\r\n  shortCandleColor: string;\r\n  negativePriceColor: string;\r\n\r\n  longLiquidActiveLineColor: string;\r\n  longLiquidInactiveLineColor: string;\r\n\r\n  shortLiquidActiveLineColor: string;\r\n  shortLiquidInactiveLineColor: string;\r\n\r\n  crossHairLineColor: string;\r\n\r\n  openPriceLineColor: string;\r\n\r\n  dayNumberBackgroundColor: string;\r\n  interestRateValueBackgroundColor: string;\r\n  interestTurnLimitBackgroundColor: string;\r\n  remainTurnBoxBackgrounderColor: string;\r\n\r\n  LevelUpButtonBackgroundColor: string;\r\n\r\n  CloseButtonBackgroundColor: string;\r\n  CloseButtonBackgroundColor2: string;\r\n\r\n  resetButtonBackgroundColor: string;\r\n  nextTurnButtonBackgroundColor: string;\r\n}\r\n\r\nconst colors: IColors = {\r\n  backgroundColor1: \"#161A1E\",\r\n  backgroundColor2: \"#1e2227ff\",\r\n  backgroundColor3: \"#14161aff\",\r\n\r\n  baseTextColor: \"#FFFFFF\",\r\n  toneDownTextColor: \"#bebebe\",\r\n  positiveTextColor: \"#32D993\",\r\n  negativeTextColor: \"#F6465D\",\r\n\r\n  longButtonColor: \"#32D993\",\r\n  longCandleColor: \"#0ECB81\",\r\n  positivePriceColor: \"#13B074\",\r\n\r\n  shortButtonColor: \"#F6465D\",\r\n  shortCandleColor: \"#F6465D\",\r\n  negativePriceColor: \"#F6465D\",\r\n\r\n  longLiquidActiveLineColor: \"#2be6ff\",\r\n  longLiquidInactiveLineColor: \"#2be6ff8e\",\r\n\r\n  shortLiquidActiveLineColor: \"#ee32ff\",\r\n  shortLiquidInactiveLineColor: \"#ee32ff8c\",\r\n\r\n  crossHairLineColor: \"#FFFFFF\",\r\n\r\n  openPriceLineColor: \"#ffc56e\",\r\n\r\n  dayNumberBackgroundColor: \"#18dcff\",\r\n  interestRateValueBackgroundColor: \"#00d460\",\r\n  interestTurnLimitBackgroundColor: \"#830094\",\r\n  remainTurnBoxBackgrounderColor: \"#fa3636\",\r\n\r\n  LevelUpButtonBackgroundColor: \"#00b052\",\r\n\r\n  CloseButtonBackgroundColor: \"#ffffff\",\r\n  CloseButtonBackgroundColor2: \"#f2b71c\",\r\n\r\n  nextTurnButtonBackgroundColor: \"#6c17ff\",\r\n  resetButtonBackgroundColor: \"#ff1616\",\r\n};\r\n\r\ninterface IFont {\r\n  bigValueFontSize: string;\r\n  midiumValueFontSize: string;\r\n  smallValueFontSize: string;\r\n\r\n  bigRateFontSize: string;\r\n\r\n  midiumTextFontSize: string;\r\n  bigTextFontSize: string;\r\n  smallTextFontSize: string;\r\n\r\n  tinyFontsize: string;\r\n\r\n  boldFontWeight: number;\r\n  regularFontWeight: number;\r\n  lightFontWeight: number;\r\n}\r\n\r\nconst font: IFont = {\r\n  bigValueFontSize: \"16px\",\r\n  midiumValueFontSize: \"14px\",\r\n  smallValueFontSize: \"12px\",\r\n\r\n  bigRateFontSize: \"14px\",\r\n\r\n  bigTextFontSize: \"16px\",\r\n  midiumTextFontSize: \"14px\",\r\n  smallTextFontSize: \"12px\",\r\n  tinyFontsize: \"11px\",\r\n\r\n  boldFontWeight: 600,\r\n  regularFontWeight: 500,\r\n  lightFontWeight: 400,\r\n};\r\n\r\nexport interface ITheme {\r\n  colors: IColors;\r\n  font: IFont;\r\n}\r\n\r\nconst theme: ITheme = {\r\n  colors,\r\n  font,\r\n};\r\n\r\nexport default theme;\r\n","import { Dimensions, StyleSheet } from \"react-native\";\r\nimport theme from \"./theme\";\r\n\r\nexport const { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\r\n\r\nconst rootStyles = StyleSheet.create({\r\n  display: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  topAccount: {\r\n    flexDirection: \"row\",\r\n    flex: 0.4,\r\n    gap: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n  },\r\n\r\n  level: {\r\n    flex: 0.25,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n  },\r\n\r\n  chart: {\r\n    flex: 1.6,\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n  },\r\n\r\n  middleAccount: {\r\n    flex: 0.3,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.backgroundColor2,\r\n  },\r\n\r\n  Info: {\r\n    flex: 1.2,\r\n  },\r\n\r\n  closePanel: {\r\n    width: SCREEN_WIDTH * 0.1,\r\n  },\r\n\r\n  positionInfo: {\r\n    width: SCREEN_WIDTH * 0.84,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    backgroundColor: theme.colors.backgroundColor2,\r\n  },\r\n\r\n  loanInfo: {\r\n    padding: 5,\r\n    width: SCREEN_WIDTH * 0.16,\r\n    backgroundColor: theme.colors.backgroundColor3,\r\n  },\r\n\r\n  controlPanel: {\r\n    flex: 1.4,\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  trade: {\r\n    flex: 7.5,\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n    padding: 5,\r\n  },\r\n\r\n  shop: {\r\n    flex: 1.5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.colors.backgroundColor1,\r\n  },\r\n\r\n  rootControlButton: {\r\n    flex: 0.6,\r\n    backgroundColor: theme.colors.backgroundColor2,\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n\r\nexport default rootStyles;\r\n","import { ICandleStick, ILevelInfo } from \"./interfaces/interface\";\r\n\r\n// Chart Style\r\nexport const LABEL_GAP_OF_LINE = 2;\r\nexport const DOMAIN_PADDING = 15;\r\nexport const CANDLE_WIDTH = 8;\r\n\r\nexport const CHART_X_DOMAIN_LENGTH = 25;\r\nexport const CHART_Y_DOMAIN_PADDING = 15;\r\n\r\nexport const TRADE_PRICE_STROKE_WIDTH = 1.5;\r\nexport const TRADE_PRICE_STROKE_DASH_ARRAY = 1;\r\n\r\nexport const LIQUID_PRICE_STROKE_WIDTH = 1.5;\r\n\r\nexport const OPEN_PRICE_STROKE_WIDTH = 1.5;\r\nexport const OPEN_PRICE_STROKE_DASH_ARRAY = 1.5;\r\n\r\nexport const LEFT_LABEL_FONT_SIZE = 9;\r\n\r\n// Chart System\r\nexport const SPLIT_UNIT_OF_CANDLE = 20;\r\nexport const CANDLE_MOVING_UNIT_MS = 200;\r\n\r\nexport const INITIAL_CANDLE_OPEN = 100;\r\nexport const INITIAL_CANDLE_CLOSE = 110;\r\nexport const INITIAL_CANDLE_HIGH = 120;\r\nexport const INITIAL_CANDLE_LOW = 90;\r\n\r\nexport const LAST_OF_INITIAL_CANDLE_OPEN = 180;\r\nexport const LAST_OF_INITIAL_CANDLE_CLOSE = 150;\r\nexport const LAST_OF_INITIAL_CANDLE_HIGH = 180;\r\nexport const LAST_OF_INITIAL_CANDLE_LOW = 140;\r\n\r\nexport const CANDLE_INITIAL_DATE = new Date(2022, 0, 1);\r\n\r\n// Account\r\nexport const INITIAL_CASH = 1000000;\r\n\r\nexport const POSITIVE = \"positive\";\r\nexport const NEGATIVE = \"negative\";\r\nexport const ZERO = \"zero\";\r\n\r\nexport const INTEREST_DUE_PERIOD = 10;\r\nexport const INTEREST_RATE = 0.0001;\r\nexport const LEVEL_SETTING: ILevelInfo[] = [\r\n  {\r\n    levelNumber: 1,\r\n    levelName: \"입문자\",\r\n    randomGap: 0.04,\r\n    stddev: 1,\r\n    transactionFeeRate: 0.04,\r\n    color: \"#ead600\",\r\n    loan: 2000000,\r\n    limitTurn: 50,\r\n  },\r\n  {\r\n    levelNumber: 2,\r\n    levelName: \"코린이\",\r\n    randomGap: 0.05,\r\n    stddev: 2,\r\n    transactionFeeRate: 0.06,\r\n    color: \"#ff7e2e\",\r\n    loan: 5000000,\r\n    limitTurn: 100,\r\n  },\r\n  {\r\n    levelNumber: 3,\r\n    levelName: \"초보자\",\r\n    randomGap: 0.06,\r\n    stddev: 3,\r\n    transactionFeeRate: 0.08,\r\n    color: \"#00dfb2\",\r\n    loan: 10000000,\r\n    limitTurn: 300,\r\n  },\r\n  {\r\n    levelNumber: 4,\r\n    levelName: \"중급자\",\r\n    randomGap: 0.07,\r\n    stddev: 4,\r\n    transactionFeeRate: 0.1,\r\n    color: \"#043efa\",\r\n    loan: 100000000,\r\n    limitTurn: 500,\r\n  },\r\n  {\r\n    levelNumber: 5,\r\n    levelName: \"전문가\",\r\n    randomGap: 0.08,\r\n    stddev: 5,\r\n    transactionFeeRate: 0.12,\r\n    color: \"#ad00dd\",\r\n    loan: 1000000000,\r\n    limitTurn: 1000,\r\n  },\r\n  {\r\n    levelNumber: 6,\r\n    levelName: \"예언자\",\r\n    randomGap: 0.09,\r\n    stddev: 6,\r\n    transactionFeeRate: 0.2,\r\n    color: \"#ff0099\",\r\n    loan: 5000000000,\r\n    limitTurn: 1000,\r\n  },\r\n  {\r\n    levelNumber: 7,\r\n    levelName: \"신\",\r\n    randomGap: 0.1,\r\n    stddev: 7,\r\n    transactionFeeRate: 0.35,\r\n    color: \"#ffffff\",\r\n    loan: 10000000000,\r\n    limitTurn: 1000,\r\n  },\r\n];\r\n\r\n// Leverage\r\nexport const INIT_LEVERAGE = 1;\r\nexport const LEVERAGE_MIN = 1;\r\nexport const LEVERAGE_MAX = 50;\r\n\r\nexport const LEVERAGE_UNITS = [\r\n  { label: \"x1\", value: 1 },\r\n  { label: \"x2\", value: 2 },\r\n  { label: \"x3\", value: 3 },\r\n  { label: \"x5\", value: 5 },\r\n  { label: \"x10\", value: 10 },\r\n  { label: \"x25\", value: 25 },\r\n  { label: \"x50\", value: 50 },\r\n];\r\nexport const INITIAL_CANDLE_SET: ICandleStick[] = [\r\n  {\r\n    x: CANDLE_INITIAL_DATE,\r\n    open: INITIAL_CANDLE_OPEN,\r\n    close: INITIAL_CANDLE_CLOSE,\r\n    high: INITIAL_CANDLE_HIGH,\r\n    low: INITIAL_CANDLE_LOW,\r\n  },\r\n  { x: new Date(2022, 0, 2), open: 110, close: 130, high: 130, low: 100 },\r\n  { x: new Date(2022, 0, 3), open: 130, close: 100, high: 140, low: 90 },\r\n  { x: new Date(2022, 0, 4), open: 100, close: 125, high: 150, low: 100 },\r\n  { x: new Date(2022, 0, 5), open: 125, close: 150, high: 170, low: 120 },\r\n  { x: new Date(2022, 0, 6), open: 150, close: 130, high: 160, low: 120 },\r\n  { x: new Date(2022, 0, 7), open: 130, close: 180, high: 200, low: 100 },\r\n  { x: new Date(2022, 0, 8), open: 180, close: 200, high: 200, low: 160 },\r\n  { x: new Date(2022, 0, 9), open: 200, close: 160, high: 210, low: 150 },\r\n  { x: new Date(2022, 0, 10), open: 160, close: 150, high: 200, low: 150 },\r\n  { x: new Date(2022, 0, 11), open: 150, close: 120, high: 160, low: 110 },\r\n  { x: new Date(2022, 0, 12), open: 120, close: 130, high: 140, low: 110 },\r\n  { x: new Date(2022, 0, 13), open: 130, close: 160, high: 180, low: 130 },\r\n  {\r\n    x: new Date(2022, 0, 14),\r\n    open: 160,\r\n    close: LAST_OF_INITIAL_CANDLE_OPEN,\r\n    high: 200,\r\n    low: 150,\r\n  },\r\n  {\r\n    x: new Date(2022, 0, 15),\r\n    open: LAST_OF_INITIAL_CANDLE_OPEN,\r\n    close: LAST_OF_INITIAL_CANDLE_CLOSE,\r\n    high: LAST_OF_INITIAL_CANDLE_HIGH,\r\n    low: LAST_OF_INITIAL_CANDLE_LOW,\r\n  },\r\n];\r\n","import { atom, selector } from \"recoil\";\r\nimport {\r\n  INITIAL_CANDLE_SET,\r\n  INITIAL_CASH,\r\n  INTEREST_DUE_PERIOD,\r\n  INTEREST_RATE,\r\n  LAST_OF_INITIAL_CANDLE_CLOSE,\r\n  LAST_OF_INITIAL_CANDLE_HIGH,\r\n  LAST_OF_INITIAL_CANDLE_LOW,\r\n  LAST_OF_INITIAL_CANDLE_OPEN,\r\n  LEVEL_SETTING,\r\n  NEGATIVE,\r\n  POSITIVE,\r\n  ZERO,\r\n} from \"./globalConstant\";\r\nimport {\r\n  bangType,\r\n  IFutureAccount,\r\n  IFutureAccountDetail,\r\n  ILevelInfo,\r\n  ITotalAccount,\r\n  ITotalFutureAccount,\r\n} from \"./interfaces/interface\";\r\n\r\n// UI 시스템\r\n\r\n// 게임 시스템\r\nexport const candleDataState = atom({\r\n  key: \"candleDataState\",\r\n  default: INITIAL_CANDLE_SET,\r\n});\r\n\r\nexport const turnNumberState = atom({\r\n  key: \"turnNumberState\",\r\n  default: 1,\r\n});\r\n\r\nexport const interestTurnNumberState = selector({\r\n  key: \"interestTurnNumberState\",\r\n  get: ({ get }) => {\r\n    const turnNumber = get(turnNumberState);\r\n    return INTEREST_DUE_PERIOD - (turnNumber % INTEREST_DUE_PERIOD);\r\n  },\r\n});\r\n\r\nexport const loanTurnNumberState = selector({\r\n  key: \"loanTurnNumberState\",\r\n  get: ({ get }) => {\r\n    const turnNumber = get(turnNumberState);\r\n    const { limitTurn } = get(levelInfoState);\r\n    return limitTurn - turnNumber;\r\n  },\r\n});\r\n\r\nexport const isLongControllerActiveState = atom({\r\n  key: \"isLongControllerActiveState\",\r\n  default: true,\r\n});\r\n\r\nexport const isCandleMovingState = atom({\r\n  key: \"isCandleMovingState\",\r\n  default: false,\r\n});\r\n\r\nexport const lastClosePriceState = atom({\r\n  key: \"lastClosePriceState\",\r\n  default: LAST_OF_INITIAL_CANDLE_CLOSE,\r\n});\r\n\r\nexport const lastOpenPriceState = atom({\r\n  key: \"lastOpenPriceState\",\r\n  default: LAST_OF_INITIAL_CANDLE_OPEN,\r\n});\r\n\r\nexport const lastHighPriceState = atom({\r\n  key: \"lastHighPriceState\",\r\n  default: LAST_OF_INITIAL_CANDLE_HIGH,\r\n});\r\n\r\nexport const lastLowPriceState = atom({\r\n  key: \"lastLowPriceState\",\r\n  default: LAST_OF_INITIAL_CANDLE_LOW,\r\n});\r\n\r\nexport const longLiquidState = atom({\r\n  key: \"longLiquidState\",\r\n  default: 0,\r\n});\r\n\r\nexport const shortLiquidState = atom({\r\n  key: \"shortLiquidState\",\r\n  default: 0,\r\n});\r\n\r\n// 게좌 시스템\r\n\r\nexport const cashAccountState = atom({\r\n  key: \"accountState\",\r\n  default: INITIAL_CASH,\r\n});\r\n\r\nexport const levelNumberState = atom({\r\n  key: \"levelNumberState\",\r\n  default: 1,\r\n});\r\n\r\nexport const levelInfoState = selector({\r\n  key: \"levelInfoState\",\r\n  get: ({ get }) => {\r\n    const levelNumber = get(levelNumberState);\r\n    return LEVEL_SETTING[levelNumber - 1];\r\n  },\r\n});\r\n\r\nexport const interestPriceState = selector({\r\n  key: \"interestPriceState\",\r\n  get: ({ get }) => {\r\n    const levelInfo = get(levelInfoState);\r\n    return levelInfo.loan * INTEREST_RATE;\r\n  },\r\n});\r\n\r\nexport const loanInfoState = selector({\r\n  key: \"loanInfoState\",\r\n  get: ({ get }) => {\r\n    const interestTurnNumber = get(interestTurnNumberState);\r\n    const loanTurnNumber = get(loanTurnNumberState);\r\n    const cashAccount = get(cashAccountState);\r\n    const interestPrice = get(interestPriceState);\r\n    const { loan: loanPrice, transactionFeeRate } = get(levelInfoState);\r\n    const futureActive = get(futureActiveState);\r\n    const totalFutureAccount = get(totalFutureAccountState);\r\n\r\n    const cashInterestRemain = cashAccount - interestPrice;\r\n    const futureInterestFee =\r\n      interestPrice * (1 + (transactionFeeRate * futureActive.leverage) / 100);\r\n    const futureInterestRemain =\r\n      totalFutureAccount.totalAsset - futureInterestFee;\r\n\r\n    return {\r\n      interest: {\r\n        payAble: cashInterestRemain >= 0 || futureInterestRemain >= 0,\r\n        cashAble: cashInterestRemain >= 0,\r\n        futureAble: futureInterestRemain >= 0,\r\n        interestTurnNumber,\r\n        cashRemain: cashInterestRemain,\r\n        futurePayFee: futureInterestFee,\r\n      },\r\n    };\r\n  },\r\n});\r\n\r\nexport const longAccountState = atom({\r\n  key: \"longAccountState\",\r\n  default: {\r\n    positionActive: false,\r\n    openPrice: 0,\r\n    liquidPrice: 0,\r\n    leverage: 1,\r\n    openPositionAmount: 0,\r\n    openPositionValue: 0,\r\n    currentPositionValue: 0,\r\n  } as IFutureAccount,\r\n});\r\n\r\nexport const shortAccountState = atom({\r\n  key: \"shortAccountState\",\r\n  default: {\r\n    positionActive: false,\r\n    openPrice: 0,\r\n    liquidPrice: 0,\r\n    leverage: 1,\r\n    openPositionAmount: 0,\r\n    openPositionValue: 0,\r\n    currentPositionValue: 0,\r\n  } as IFutureAccount,\r\n});\r\n\r\nexport const futureActiveState = selector({\r\n  key: \"futureActiveState\",\r\n  get: ({ get }) => {\r\n    const { positionActive: isLongActive, leverage: longLeverage } =\r\n      get(longAccountState);\r\n    const { positionActive: isShortActive, leverage: shortLeverage } =\r\n      get(shortAccountState);\r\n    const futureActive = isLongActive || isShortActive;\r\n    const leverage = futureActive\r\n      ? isLongActive\r\n        ? longLeverage\r\n        : shortLeverage\r\n      : 1;\r\n    return {\r\n      futureActive,\r\n      isLongActive,\r\n      isShortActive,\r\n      leverage,\r\n    };\r\n  },\r\n});\r\n\r\nexport const longAccountDetailState = selector({\r\n  key: \"longAccountDetailState\",\r\n  get: ({ get }) => {\r\n    const longAccount = get(longAccountState);\r\n    const unrealizedPnl =\r\n      longAccount.leverage *\r\n      (longAccount.currentPositionValue - longAccount.openPositionValue);\r\n    return {\r\n      positionActive: longAccount.positionActive,\r\n      openPrice: longAccount.openPrice,\r\n      liquidPrice: longAccount.liquidPrice,\r\n      leverage: longAccount.leverage,\r\n      openPositionAmount: longAccount.openPositionAmount,\r\n      openPositionValue: longAccount.openPositionValue,\r\n      currentPositionValue: longAccount.currentPositionValue,\r\n      unrealizedPnl,\r\n      profitRate: unrealizedPnl / longAccount.openPositionValue,\r\n      totalAsset: unrealizedPnl + longAccount.openPositionValue,\r\n      isPositive:\r\n        unrealizedPnl > 0 ? POSITIVE : unrealizedPnl < 0 ? NEGATIVE : ZERO,\r\n    } as IFutureAccountDetail;\r\n  },\r\n});\r\n\r\nexport const shortAccountDetailState = selector({\r\n  key: \"shortAccountDetailState\",\r\n  get: ({ get }) => {\r\n    const shortAccount = get(shortAccountState);\r\n    const unrealizedPnl =\r\n      shortAccount.leverage *\r\n      (shortAccount.openPositionValue - shortAccount.currentPositionValue);\r\n    return {\r\n      positionActive: shortAccount.positionActive,\r\n      openPrice: shortAccount.openPrice,\r\n      liquidPrice: shortAccount.liquidPrice,\r\n      leverage: shortAccount.leverage,\r\n      openPositionAmount: shortAccount.openPositionAmount,\r\n      openPositionValue: shortAccount.openPositionValue,\r\n      currentPositionValue: shortAccount.currentPositionValue,\r\n      unrealizedPnl,\r\n      profitRate: unrealizedPnl / shortAccount.openPositionValue,\r\n      totalAsset: unrealizedPnl + shortAccount.openPositionValue,\r\n      isPositive:\r\n        unrealizedPnl > 0 ? POSITIVE : unrealizedPnl < 0 ? NEGATIVE : ZERO,\r\n    } as IFutureAccountDetail;\r\n  },\r\n});\r\n\r\nexport const totalFutureAccountState = selector({\r\n  key: \"futureAccountState\",\r\n  get: ({ get }) => {\r\n    const longAccountDetail = get(longAccountDetailState);\r\n    const shortAccountDetail = get(shortAccountDetailState);\r\n\r\n    const openPositionValue =\r\n      longAccountDetail.openPositionValue +\r\n      shortAccountDetail.openPositionValue;\r\n    const currentPositionValue =\r\n      longAccountDetail.currentPositionValue +\r\n      shortAccountDetail.currentPositionValue;\r\n    const unrealizedPnl =\r\n      longAccountDetail.unrealizedPnl + shortAccountDetail.unrealizedPnl;\r\n\r\n    return {\r\n      positionActive:\r\n        longAccountDetail.positionActive || shortAccountDetail.positionActive,\r\n      openPositionValue,\r\n      currentPositionValue,\r\n      unrealizedPnl,\r\n      profitRate: unrealizedPnl / openPositionValue,\r\n      totalAsset: unrealizedPnl + openPositionValue,\r\n      isPositive:\r\n        unrealizedPnl > 0 ? POSITIVE : unrealizedPnl < 0 ? NEGATIVE : ZERO,\r\n    } as ITotalFutureAccount;\r\n  },\r\n});\r\n\r\nexport const totalAccountState = selector({\r\n  key: \"totalAccountState\",\r\n  get: ({ get }) => {\r\n    const cashAccount = get(cashAccountState);\r\n    const futureAccount = get(totalFutureAccountState);\r\n\r\n    const openValuation = futureAccount.openPositionValue + cashAccount;\r\n    const totalAsset = cashAccount + futureAccount.totalAsset;\r\n    const unrealizedPnl = totalAsset - openValuation;\r\n    const realizedPnl = totalAsset - INITIAL_CASH;\r\n    return {\r\n      cash: cashAccount,\r\n      futureValuation: futureAccount.totalAsset,\r\n      totalAsset,\r\n      unrealizedPnl,\r\n      profitRate: unrealizedPnl / openValuation,\r\n      isPositive:\r\n        realizedPnl > 0 ? POSITIVE : realizedPnl < 0 ? NEGATIVE : ZERO,\r\n    } as ITotalAccount;\r\n  },\r\n});\r\n","const convertKrNumberType = (number: number) => {\r\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport default convertKrNumberType;\r\n","import styled from \"styled-components/native\";\r\nimport { NEGATIVE, POSITIVE } from \"../globalConstant\";\r\nimport { ITheme } from \"./theme\";\r\n\r\ninterface IContainerProps {\r\n  theme?: ITheme;\r\n}\r\n\r\ninterface ITextContainerProps extends IContainerProps {\r\n  isPositive: string;\r\n}\r\n\r\ninterface IInfoContainerProps extends IContainerProps {\r\n  isLong: boolean;\r\n}\r\n\r\ninterface ICloseButtonContainerProps extends IContainerProps {\r\n  isLong: boolean;\r\n}\r\n\r\nexport const BaseTextContainer = styled.Text`\r\n  color: ${(props: IContainerProps) => props.theme.colors.baseTextColor};\r\n`;\r\n\r\n// Top Account\r\n\r\nexport const TopAccountText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.midiumTextFontSize};\r\n`;\r\n\r\nexport const TopAccountValue = styled(BaseTextContainer)`\r\n  font-size: ${(props: ITextContainerProps) =>\r\n    props.theme.font.bigValueFontSize};\r\n  color: ${(props: ITextContainerProps) =>\r\n    props.isPositive == POSITIVE\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.isPositive == NEGATIVE\r\n      ? props.theme.colors.negativeTextColor\r\n      : props.theme.colors.baseTextColor};\r\n`;\r\n\r\nexport const TopAccountRate = styled(BaseTextContainer)`\r\n  font-size: ${(props: ITextContainerProps) =>\r\n    props.theme.font.bigRateFontSize};\r\n  color: ${(props: ITextContainerProps) =>\r\n    props.isPositive == POSITIVE\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.isPositive == NEGATIVE\r\n      ? props.theme.colors.negativeTextColor\r\n      : props.theme.colors.baseTextColor};\r\n`;\r\n\r\n// Level\r\nexport const LevelLabelText = styled(BaseTextContainer)`\r\n  color: \"black\";\r\n  font-size: ${(props: IContainerProps) => props.theme.font.midiumTextFontSize};\r\n`;\r\n\r\nexport const ProgressValueText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) =>\r\n    props.theme.font.midiumValueFontSize};\r\n`;\r\n\r\nexport const TargetValueText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.smallValueFontSize};\r\n`;\r\n\r\nexport const LevelUpText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.midiumTextFontSize};\r\n`;\r\n\r\n// Middle Account\r\nexport const MiddleAccountText = styled(BaseTextContainer)`\r\n  color: ${(props: IContainerProps) => props.theme.colors.toneDownTextColor};\r\n  font-size: ${(props: IContainerProps) => props.theme.font.smallTextFontSize};\r\n`;\r\nexport const MiddleAccountValue = styled(BaseTextContainer)`\r\n  color: ${(props: IContainerProps) => props.theme.colors.baseTextColor};\r\n  font-size: ${(props: IContainerProps) => props.theme.font.bigValueFontSize};\r\n`;\r\n\r\n// Position Info\r\nexport const PositionTitleBoxText = styled(BaseTextContainer)`\r\n  background-color: ${(props: IInfoContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.theme.colors.negativeTextColor};\r\n  font-size: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.midiumTextFontSize};\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PositionLeverageBoxText = styled(BaseTextContainer)`\r\n  color: ${(props: IInfoContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.theme.colors.negativeTextColor};\r\n  font-size: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.bigValueFontSize};\r\n  font-weight: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.boldFontWeight};\r\n  margin-left: 5px;\r\n`;\r\n\r\nexport const PositionInfoTitleBoxText = styled(BaseTextContainer)`\r\n  color: ${(props: IInfoContainerProps) =>\r\n    props.theme.colors.toneDownTextColor};\r\n  font-size: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.smallTextFontSize};\r\n`;\r\n\r\nexport const PositionInfoValueBoxText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IInfoContainerProps) =>\r\n    props.theme.font.midiumValueFontSize};\r\n`;\r\n\r\nexport const LiquidValueText = styled(PositionInfoValueBoxText)`\r\n  color: ${(props: IInfoContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.longLiquidActiveLineColor\r\n      : props.theme.colors.shortLiquidActiveLineColor};\r\n`;\r\n\r\nexport const OpenValueText = styled(PositionInfoValueBoxText)`\r\n  color: ${(props: IContainerProps) => props.theme.colors.openPriceLineColor};\r\n`;\r\n\r\nexport const UnrealizedPnlBoxText = styled(PositionInfoTitleBoxText)``;\r\n\r\nexport const UnrealizedPnlBoxValue = styled(PositionInfoValueBoxText)`\r\n  color: ${(props: ITextContainerProps) =>\r\n    props.isPositive == POSITIVE\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.isPositive == NEGATIVE\r\n      ? props.theme.colors.negativeTextColor\r\n      : props.theme.colors.baseTextColor};\r\n`;\r\n\r\nexport const PositionCloseButtonText = styled(BaseTextContainer)`\r\n  /* color: ${(props: ICloseButtonContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.theme.colors.negativeTextColor}; */\r\n  color: \"black\";\r\n  font-weight: ${(props: ICloseButtonContainerProps) =>\r\n    props.theme.font.boldFontWeight};\r\n`;\r\n\r\nexport const EmptyPositionText = styled(BaseTextContainer)`\r\n  font-weight: ${(props: IContainerProps) => props.theme.font.boldFontWeight};\r\n`;\r\n\r\n// Loan Info\r\nexport const DayNumberText = styled(BaseTextContainer)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.dayNumberBackgroundColor};\r\n  padding: 1px;\r\n  font-size: ${(props: IContainerProps) => props.theme.font.midiumTextFontSize};\r\n  color: \"black\";\r\n`;\r\n\r\nexport const LoanInfoTitleText = styled(PositionInfoTitleBoxText)``;\r\n\r\nexport const LoanInfoValueText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.smallTextFontSize};\r\n`;\r\n\r\nexport const LoanInfoUnitText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.tinyFontsize};\r\n`;\r\n\r\nexport const InterestTurnLimitText = styled(BaseTextContainer)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.interestTurnLimitBackgroundColor};\r\n  font-size: ${(props: IContainerProps) => props.theme.font.smallTextFontSize};\r\n  padding: 1px;\r\n`;\r\n\r\nexport const RemainTurnBoxText = styled(BaseTextContainer)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.remainTurnBoxBackgrounderColor};\r\n  padding: 1px;\r\n  font-size: ${(props: IContainerProps) => props.theme.font.smallTextFontSize};\r\n`;\r\n\r\n// Controll Panel\r\nexport const ControlSectionTitleText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.smallTextFontSize};\r\n  color: ${(props: IContainerProps) => props.theme.colors.toneDownTextColor};\r\n`;\r\n\r\nexport const ControlSectionValueText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) =>\r\n    props.theme.font.midiumValueFontSize};\r\n`;\r\n\r\nexport const LiquidControlSectionValueText = styled(ControlSectionValueText)`\r\n  color: ${(props: IInfoContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.longLiquidActiveLineColor\r\n      : props.theme.colors.shortLiquidActiveLineColor};\r\n`;\r\n\r\nexport const OpenButtonText = styled(BaseTextContainer)`\r\n  /* color: ${(props: ICloseButtonContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.positiveTextColor\r\n      : props.theme.colors.negativeTextColor}; */\r\n  font-weight: ${(props: ICloseButtonContainerProps) =>\r\n    props.theme.font.boldFontWeight};\r\n`;\r\n\r\n// Root Control Button\r\nexport const ResetButtonText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.bigTextFontSize};\r\n  font-weight: ${(props: IContainerProps) => props.theme.font.boldFontWeight};\r\n`;\r\nexport const NextTurnButtonText = styled(BaseTextContainer)`\r\n  font-size: ${(props: IContainerProps) => props.theme.font.bigTextFontSize};\r\n  font-weight: ${(props: IContainerProps) => props.theme.font.boldFontWeight};\r\n`;\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { totalAccountState } from \"../../atom\";\r\nimport convertKrNumberType from \"../../functions/convertKrNumberType\";\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport {\r\n  MiddleAccountText,\r\n  MiddleAccountValue,\r\n} from \"../../styles/TextStyledComponents\";\r\n\r\nfunction MiddleAccount() {\r\n  const totalAccount = useRecoilValue(totalAccountState);\r\n  return (\r\n    <View style={rootStyles.middleAccount}>\r\n      <View style={{ flex: 1, padding: 10 }}>\r\n        <MiddleAccountText>선물 </MiddleAccountText>\r\n        <MiddleAccountValue>\r\n          {convertKrNumberType(Math.ceil(totalAccount.futureValuation))}원\r\n        </MiddleAccountValue>\r\n      </View>\r\n      <View style={{ flex: 1, padding: 10 }}>\r\n        <MiddleAccountText>현금 </MiddleAccountText>\r\n        <MiddleAccountValue>\r\n          {convertKrNumberType(Math.ceil(totalAccount.cash))}원\r\n        </MiddleAccountValue>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(MiddleAccount);\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { totalAccountState } from \"../../atom\";\r\nimport convertKrNumberType from \"../../functions/convertKrNumberType\";\r\nimport { INITIAL_CASH } from \"../../globalConstant\";\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport {\r\n  TopAccountRate,\r\n  TopAccountText,\r\n  TopAccountValue,\r\n} from \"../../styles/TextStyledComponents\";\r\n\r\nfunction TopAccount() {\r\n  const totalAccount = useRecoilValue(totalAccountState);\r\n\r\n  return (\r\n    <View style={rootStyles.topAccount}>\r\n      <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n        <TopAccountText>총 보유자산 | </TopAccountText>\r\n      </View>\r\n      <View style={{ flex: 2.3, flexDirection: \"row\", alignItems: \"flex-end\" }}>\r\n        <TopAccountValue isPositive={totalAccount.isPositive}>\r\n          {convertKrNumberType(Math.ceil(totalAccount.totalAsset))}원{\" \"}\r\n        </TopAccountValue>\r\n        <TopAccountRate isPositive={totalAccount.isPositive}>\r\n          {(\r\n            ((totalAccount.totalAsset - INITIAL_CASH) / INITIAL_CASH) *\r\n            100\r\n          ).toFixed(2)}\r\n          %\r\n        </TopAccountRate>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TopAccount);\r\n","const calDate = (date: Date, number: number) => {\r\n  const resDate = new Date(date);\r\n  resDate.setDate(resDate.getDate() + number);\r\n\r\n  return resDate;\r\n};\r\n\r\nexport default calDate;\r\n","var spareRandom = null;\r\n\r\nfunction normalRandom() {\r\n  let val: number, u: number, v: number, s: number, mul: number;\r\n\r\n  if (spareRandom !== null) {\r\n    val = spareRandom;\r\n    spareRandom = null;\r\n  } else {\r\n    do {\r\n      u = Math.random() * 2 - 1;\r\n      v = Math.random() * 2 - 1;\r\n\r\n      s = u * u + v * v;\r\n    } while (s === 0 || s >= 1);\r\n\r\n    mul = Math.sqrt((-2 * Math.log(s)) / s);\r\n\r\n    val = u * mul;\r\n    spareRandom = v * mul;\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\nfunction normalRandomInRange(min: number, max: number) {\r\n  var val: number;\r\n  do {\r\n    val = normalRandom();\r\n  } while (val < min || val > max);\r\n\r\n  return val;\r\n}\r\n\r\nfunction normalRandomScaled(mean: number, stddev: number) {\r\n  var r = normalRandom();\r\n\r\n  r = r * stddev + mean;\r\n\r\n  return r;\r\n}\r\n\r\nfunction normalRandomScaledInRange(\r\n  mean: number,\r\n  stddev: number,\r\n  min: number,\r\n  max: number\r\n) {\r\n  let r: number;\r\n  do {\r\n    r = normalRandomScaled(mean, stddev);\r\n  } while (r < min || r > max);\r\n\r\n  return r;\r\n}\r\n\r\nconst getRandomRate = (\r\n  mean: number,\r\n  stddev: number,\r\n  min: number,\r\n  max: number\r\n) => {\r\n  const rate = normalRandomScaledInRange(mean, stddev, min, max);\r\n  return rate;\r\n};\r\n\r\nexport default getRandomRate;\r\n","import { cloneDeep, random } from \"lodash\";\r\nimport { ICandleStick } from \"../interfaces/interface\";\r\nimport getRandomRate from \"./getRandomRate\";\r\n\r\nconst candleGenerator = (\r\n  time: Date,\r\n  lastClosePrice: number,\r\n  numberPerUnit: number,\r\n  random_gap: number = 0.05,\r\n  stddev: number = 1\r\n) => {\r\n  let previousCandle: ICandleStick = {\r\n    x: time,\r\n    open: lastClosePrice,\r\n    high: lastClosePrice,\r\n    low: lastClosePrice,\r\n    close: lastClosePrice,\r\n  };\r\n  const candleSet = [previousCandle];\r\n\r\n  for (let i = 0; i < numberPerUnit; i++) {\r\n    const newCandle = cloneDeep(previousCandle);\r\n    // const newClose =\r\n    //   newCandle.close * random(1 - random_gap, 1 + random_gap, true);\r\n    const newClose =\r\n      newCandle.close *\r\n      getRandomRate(1, stddev, 1 - random_gap, 1 + random_gap);\r\n    const newHigh = newCandle.high < newClose ? newClose : newCandle.high;\r\n    const newLow = newCandle.low > newClose ? newClose : newCandle.low;\r\n\r\n    newCandle.close = newClose;\r\n    newCandle.high = newHigh;\r\n    newCandle.low = newLow;\r\n\r\n    previousCandle = newCandle;\r\n    candleSet.push(newCandle);\r\n  }\r\n\r\n  return candleSet;\r\n};\r\n\r\nexport default candleGenerator;\r\n","import theme from \"./theme\";\r\n\r\nexport const sharedLabelStyle = {\r\n  fontSize: theme.font.smallValueFontSize,\r\n  fill: theme.colors.baseTextColor,\r\n};\r\n","import { cloneDeep, round } from \"lodash\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Dimensions, View } from \"react-native\";\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\r\nimport { DomainTuple } from \"victory-core\";\r\nimport {\r\n  VictoryAxis,\r\n  VictoryCandlestick,\r\n  VictoryChart,\r\n  VictoryCursorContainer,\r\n  VictoryLine,\r\n  VictoryLabel,\r\n  Line,\r\n} from \"victory-native\";\r\nimport {\r\n  candleDataState,\r\n  isCandleMovingState,\r\n  lastClosePriceState,\r\n  lastOpenPriceState,\r\n  levelInfoState,\r\n  longAccountDetailState,\r\n  longAccountState,\r\n  longLiquidState,\r\n  shortAccountDetailState,\r\n  shortAccountState,\r\n  shortLiquidState,\r\n  turnNumberState,\r\n} from \"../../atom\";\r\nimport calDate from \"../../functions/calDate\";\r\nimport candleGenerator from \"../../functions/candleGenerator\";\r\nimport {\r\n  CANDLE_MOVING_UNIT_MS,\r\n  CANDLE_WIDTH,\r\n  CHART_X_DOMAIN_LENGTH,\r\n  CHART_Y_DOMAIN_PADDING,\r\n  DOMAIN_PADDING,\r\n  INITIAL_CANDLE_LOW,\r\n  LABEL_GAP_OF_LINE,\r\n  LAST_OF_INITIAL_CANDLE_HIGH,\r\n  LEFT_LABEL_FONT_SIZE,\r\n  LIQUID_PRICE_STROKE_WIDTH,\r\n  OPEN_PRICE_STROKE_DASH_ARRAY,\r\n  OPEN_PRICE_STROKE_WIDTH,\r\n  SPLIT_UNIT_OF_CANDLE,\r\n  TRADE_PRICE_STROKE_DASH_ARRAY,\r\n  TRADE_PRICE_STROKE_WIDTH,\r\n} from \"../../globalConstant\";\r\nimport { ICandleStick } from \"../../interfaces/interface\";\r\nimport { sharedLabelStyle } from \"../../styles/chartStyles\";\r\nimport { SCREEN_WIDTH } from \"../../styles/rootStyles\";\r\nimport theme from \"../../styles/theme\";\r\n\r\nfunction CandleChart() {\r\n  const turnNumber = useRecoilValue(turnNumberState);\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n  const [candleData, setCandleData] = useRecoilState(candleDataState);\r\n  const [isCandleMoving, setIsCandleMoving] =\r\n    useRecoilState(isCandleMovingState);\r\n  const [lastClosePrice, setLastClosePrice] =\r\n    useRecoilState(lastClosePriceState);\r\n  const [lastOpenPrice, setLastOpenPrice] = useRecoilState(lastOpenPriceState);\r\n\r\n  const [longAccount, setLongAccount] = useRecoilState(longAccountState);\r\n  const [shortAccount, setShortAccount] = useRecoilState(shortAccountState);\r\n  const longAccountDetail = useRecoilValue(longAccountDetailState);\r\n  const shortAccountDetail = useRecoilValue(shortAccountDetailState);\r\n  const resetLongAccount = useResetRecoilState(longAccountState);\r\n  const resetShortAccount = useResetRecoilState(shortAccountState);\r\n\r\n  const [longLiquid, setLongLiquid] = useRecoilState(longLiquidState);\r\n  const [shortLiquid, setShortLiquid] = useRecoilState(shortLiquidState);\r\n\r\n  const [chartXDomain, setChartXDomain] = useState<DomainTuple>([\r\n    new Date(2022, 0, 1),\r\n    new Date(2022, 0, 15),\r\n  ]);\r\n  const [chartYDomain, setChartYDomain] = useState<DomainTuple>([\r\n    INITIAL_CANDLE_LOW - CHART_Y_DOMAIN_PADDING,\r\n    LAST_OF_INITIAL_CANDLE_HIGH + CHART_Y_DOMAIN_PADDING,\r\n  ]);\r\n\r\n  const updateCandleData = useCallback(\r\n    (newCandle: ICandleStick, index: number, lastIndex: number) => {\r\n      return setTimeout(() => {\r\n        setCandleData((prev) => {\r\n          const newData = [...prev];\r\n          if (newData.slice(-1)[0].x.toString() == newCandle.x.toString()) {\r\n            newData[newData.length - 1] = newCandle;\r\n          } else {\r\n            newData.push(newCandle);\r\n            if (newData.length > CHART_X_DOMAIN_LENGTH) newData.shift();\r\n          }\r\n          return newData;\r\n        });\r\n\r\n        setLastClosePrice(newCandle.close);\r\n\r\n        if (longAccountDetail.positionActive) {\r\n          setLongAccount((prev) => {\r\n            const newLog = cloneDeep(prev);\r\n            newLog.currentPositionValue =\r\n              newCandle.close * newLog.openPositionAmount;\r\n            return newLog;\r\n          });\r\n          if (longAccountDetail.liquidPrice >= newCandle.low) {\r\n            resetLongAccount();\r\n          }\r\n        }\r\n\r\n        if (shortAccountDetail.positionActive) {\r\n          setShortAccount((prev) => {\r\n            const newLog = cloneDeep(prev);\r\n            newLog.currentPositionValue =\r\n              newCandle.close * newLog.openPositionAmount;\r\n            return newLog;\r\n          });\r\n          if (shortAccountDetail.liquidPrice <= newCandle.high) {\r\n            resetShortAccount();\r\n          }\r\n        }\r\n\r\n        if (index === lastIndex) {\r\n          setIsCandleMoving(false);\r\n        }\r\n      }, CANDLE_MOVING_UNIT_MS * index);\r\n    },\r\n    [longAccountDetail, shortAccountDetail]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (turnNumber > 1) {\r\n      const timers: NodeJS.Timeout[] = [];\r\n      const lastDate = candleData.slice(-1)[0].x;\r\n      const nextDate = calDate(new Date(lastDate), 1);\r\n      const lastPrice = candleData.slice(-1)[0].close;\r\n      const newCandleSet = candleGenerator(\r\n        nextDate,\r\n        lastPrice,\r\n        SPLIT_UNIT_OF_CANDLE,\r\n        levelInfo.randomGap,\r\n        levelInfo.stddev\r\n      );\r\n      setLastOpenPrice(newCandleSet[0].open);\r\n      for (let i = 0; i < newCandleSet.length; i++) {\r\n        const newCandle = newCandleSet[i];\r\n        timers.push(updateCandleData(newCandle, i, newCandleSet.length - 1));\r\n      }\r\n\r\n      return () => {\r\n        timers.forEach((ele) => clearTimeout(ele));\r\n      };\r\n    }\r\n  }, [turnNumber]);\r\n\r\n  useEffect(() => {\r\n    const targetCandles = candleData.slice(-CHART_X_DOMAIN_LENGTH);\r\n\r\n    // x domain\r\n    const startDate = targetCandles[0].x;\r\n    const lastDate = new Date(startDate);\r\n    lastDate.setDate(startDate.getDate() + CHART_X_DOMAIN_LENGTH);\r\n    setChartXDomain([startDate, lastDate]);\r\n\r\n    // y domain\r\n    let lowestPrice = 10000000000;\r\n    let highestPrice = 0;\r\n\r\n    targetCandles.forEach((ele) => {\r\n      if (ele.low < lowestPrice) {\r\n        lowestPrice = ele.low;\r\n      }\r\n      if (ele.high > highestPrice) {\r\n        highestPrice = ele.high;\r\n      }\r\n    });\r\n\r\n    setChartYDomain([\r\n      lowestPrice - CHART_Y_DOMAIN_PADDING,\r\n      highestPrice + CHART_Y_DOMAIN_PADDING,\r\n    ]);\r\n  }, [candleData]);\r\n\r\n  return (\r\n    <View>\r\n      <VictoryChart\r\n        width={SCREEN_WIDTH}\r\n        domainPadding={{ x: DOMAIN_PADDING }}\r\n        containerComponent={\r\n          <VictoryCursorContainer\r\n            cursorLabel={({ datum }) => \"            \" + `${round(datum.y, 1)}`}\r\n            cursorComponent={\r\n              <Line\r\n                style={{\r\n                  stroke: theme.colors.crossHairLineColor,\r\n                  strokeWidth: 1,\r\n                }}\r\n              />\r\n            }\r\n            cursorLabelComponent={\r\n              <VictoryLabel\r\n                style={{\r\n                  fill: theme.colors.baseTextColor,\r\n                  fontSize: theme.font.smallValueFontSize,\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        }\r\n        style={{\r\n          parent: {\r\n            backgroundColor: \"transparent\",\r\n          },\r\n          background: {\r\n            fill: theme.colors.backgroundColor1,\r\n          },\r\n        }}\r\n      >\r\n        <VictoryAxis\r\n          dependentAxis\r\n          offsetX={50}\r\n          orientation=\"right\"\r\n          style={{\r\n            grid: { stroke: \"#b6b6b6\", strokeWidth: 0.5 },\r\n            tickLabels: {\r\n              fill: theme.colors.baseTextColor,\r\n              fontSize: 14,\r\n            },\r\n          }}\r\n        />\r\n        <VictoryCandlestick\r\n          candleWidth={CANDLE_WIDTH}\r\n          style={{\r\n            data: {\r\n              strokeWidth: 1,\r\n              stroke: (d: any) =>\r\n                d.close < d.open\r\n                  ? theme.colors.longCandleColor\r\n                  : theme.colors.shortCandleColor,\r\n            },\r\n          }}\r\n          candleColors={{\r\n            positive: theme.colors.longCandleColor,\r\n            negative: theme.colors.shortCandleColor,\r\n          }}\r\n          data={candleData}\r\n          domain={{\r\n            x: chartXDomain,\r\n            y: chartYDomain,\r\n          }}\r\n        />\r\n\r\n        {/* 현재가 Line */}\r\n        <VictoryLabel\r\n          text={lastClosePrice.toFixed(1)}\r\n          datum={{\r\n            x: calDate(new Date(chartXDomain[1]), 4),\r\n            y: lastClosePrice + 5,\r\n          }}\r\n          textAnchor=\"end\"\r\n          style={sharedLabelStyle}\r\n          backgroundPadding={[{ left: 5, right: 3, top: 3, bottom: 3 }]}\r\n          backgroundStyle={[\r\n            {\r\n              fill:\r\n                lastClosePrice > lastOpenPrice\r\n                  ? theme.colors.longCandleColor\r\n                  : theme.colors.shortCandleColor,\r\n              opacity: 0.98,\r\n            },\r\n          ]}\r\n        />\r\n        <VictoryLine\r\n          domain={{\r\n            x: chartXDomain,\r\n            y: chartYDomain,\r\n          }}\r\n          y={() => lastClosePrice}\r\n          style={{\r\n            data: {\r\n              stroke: (d: any) =>\r\n                lastClosePrice > lastOpenPrice\r\n                  ? theme.colors.longCandleColor\r\n                  : theme.colors.shortCandleColor,\r\n              strokeWidth: TRADE_PRICE_STROKE_WIDTH,\r\n              strokeDasharray: TRADE_PRICE_STROKE_DASH_ARRAY,\r\n            },\r\n          }}\r\n        />\r\n\r\n        {/* Long 청산가 */}\r\n        {longAccountDetail.positionActive ? (\r\n          <VictoryLabel\r\n            text=\"청산가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: longAccountDetail.liquidPrice,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        ) : (\r\n          <VictoryLabel\r\n            text=\"청산가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: longLiquid,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        )}\r\n        {longAccountDetail.positionActive ? (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => longAccountDetail.liquidPrice}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.longLiquidActiveLineColor,\r\n                strokeWidth: LIQUID_PRICE_STROKE_WIDTH,\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => longLiquid}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.longLiquidInactiveLineColor,\r\n                strokeWidth: LIQUID_PRICE_STROKE_WIDTH,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* Short 청산가 */}\r\n        {shortAccountDetail.positionActive ? (\r\n          <VictoryLabel\r\n            text=\"청산가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: shortAccountDetail.liquidPrice,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        ) : (\r\n          <VictoryLabel\r\n            text=\"청산가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: shortLiquid,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        )}\r\n        {shortAccountDetail.positionActive ? (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => shortAccountDetail.liquidPrice}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.shortLiquidActiveLineColor,\r\n                strokeWidth: LIQUID_PRICE_STROKE_WIDTH,\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => shortLiquid}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.shortLiquidInactiveLineColor,\r\n                strokeWidth: LIQUID_PRICE_STROKE_WIDTH,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* Long 평단가 */}\r\n        {longAccountDetail.positionActive ? (\r\n          <VictoryLabel\r\n            text=\"평단가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: longAccountDetail.openPrice,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        ) : null}\r\n        {longAccountDetail.positionActive ? (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => longAccountDetail.openPrice}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.openPriceLineColor,\r\n                strokeWidth: OPEN_PRICE_STROKE_WIDTH,\r\n                strokeDasharray: OPEN_PRICE_STROKE_DASH_ARRAY,\r\n              },\r\n            }}\r\n          />\r\n        ) : null}\r\n\r\n        {/* Short 평단가 */}\r\n        {shortAccountDetail.positionActive ? (\r\n          <VictoryLabel\r\n            text=\"평단가\"\r\n            datum={{\r\n              x: calDate(new Date(chartXDomain[0]), -LABEL_GAP_OF_LINE),\r\n              y: shortAccountDetail.openPrice,\r\n            }}\r\n            textAnchor=\"end\"\r\n            style={sharedLabelStyle}\r\n          />\r\n        ) : null}\r\n        {shortAccountDetail.positionActive ? (\r\n          <VictoryLine\r\n            domain={{\r\n              x: chartXDomain,\r\n              y: chartYDomain,\r\n            }}\r\n            y={() => shortAccountDetail.openPrice}\r\n            style={{\r\n              data: {\r\n                stroke: theme.colors.openPriceLineColor,\r\n                strokeWidth: OPEN_PRICE_STROKE_WIDTH,\r\n                strokeDasharray: OPEN_PRICE_STROKE_DASH_ARRAY,\r\n              },\r\n            }}\r\n          />\r\n        ) : null}\r\n      </VictoryChart>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CandleChart;\r\n","import { Text, View } from \"react-native\";\r\n\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport CandleChart from \"./CandleChart\";\r\n\r\nfunction Chart() {\r\n  return (\r\n    <View style={rootStyles.chart}>\r\n      <CandleChart />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { Text, View } from \"react-native\";\r\nimport rootStyles from \"../../../styles/rootStyles\";\r\nimport { BaseTextContainer } from \"../../../styles/TextStyledComponents\";\r\n\r\nfunction Shop() {\r\n  return (\r\n    <View style={rootStyles.shop}>\r\n      <BaseTextContainer>Shop</BaseTextContainer>\r\n      <BaseTextContainer>(준비중)</BaseTextContainer>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Shop;\r\n","import { memo } from \"react\";\r\nimport {\r\n  GestureResponderEvent,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\n\r\nconst switchStyle = (\r\n  disabled?: boolean,\r\n  selectedValue?: number | boolean,\r\n  selectedColor?: string,\r\n  nonSelectedColor?: string,\r\n  thisValue?: number | boolean\r\n) => {\r\n  return StyleSheet.create({\r\n    container: {\r\n      backgroundColor: \"transparent\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      flexDirection: \"row\",\r\n      opacity: disabled ? 0.5 : 1,\r\n    },\r\n    box: {\r\n      flex: 1,\r\n      backgroundColor: \"transprent\",\r\n      borderWidth: 1,\r\n      borderStyle: \"solid\",\r\n      borderColor:\r\n        selectedValue === thisValue ? selectedColor : nonSelectedColor,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  });\r\n};\r\n\r\nconst textStyle = (\r\n  disabled?: boolean,\r\n  selectedValue?: number | boolean,\r\n  selectedColor?: string,\r\n  nonSelectedColor?: string,\r\n  thisValue?: number | boolean\r\n) => {\r\n  return StyleSheet.create({\r\n    text: {\r\n      color: selectedValue === thisValue ? selectedColor : nonSelectedColor,\r\n    },\r\n  });\r\n};\r\n\r\nexport interface CustomToggleSwitchProps {\r\n  options: { label: string; value: number | boolean }[];\r\n  value: number | boolean;\r\n  setValueFunction: React.Dispatch<React.SetStateAction<number | boolean>>;\r\n  disabled?: boolean;\r\n  selectedColor?: string;\r\n  nonSelectedColor?: string;\r\n}\r\n\r\nfunction CustomToggleSwitch({\r\n  options,\r\n  value,\r\n  setValueFunction,\r\n  disabled,\r\n  selectedColor = \"#32D993\",\r\n  nonSelectedColor = \"#bebebe\",\r\n}: CustomToggleSwitchProps) {\r\n  const onPressHandler = (\r\n    evt: GestureResponderEvent,\r\n    newValue: number | boolean\r\n  ) => {\r\n    setValueFunction(newValue);\r\n  };\r\n  return (\r\n    <View style={switchStyle(disabled).container}>\r\n      {options.map((ele, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={(evt) => onPressHandler(evt, ele.value)}\r\n          style={\r\n            switchStyle(\r\n              disabled,\r\n              value,\r\n              selectedColor,\r\n              nonSelectedColor,\r\n              ele.value\r\n            ).box\r\n          }\r\n          disabled={disabled}\r\n        >\r\n          <Text\r\n            style={\r\n              textStyle(\r\n                disabled,\r\n                value,\r\n                selectedColor,\r\n                nonSelectedColor,\r\n                ele.value\r\n              ).text\r\n            }\r\n          >\r\n            {ele.label}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(CustomToggleSwitch);\r\n","import { useCallback, useState } from \"react\";\r\nimport { LayoutChangeEvent } from \"react-native\";\r\n\r\nexport interface ISize {\r\n  width: number;\r\n  height: number;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst useComponentSize = () => {\r\n  const [size, setSize] = useState<ISize>({\r\n    width: 0,\r\n    height: 0,\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const onLayout = useCallback((event: LayoutChangeEvent) => {\r\n    const { width, height, x, y } = event.nativeEvent.layout;\r\n    setSize({ width, height, x, y });\r\n  }, []);\r\n\r\n  return { size, onLayout };\r\n};\r\n\r\nexport default useComponentSize;\r\n","import MultiSlider from \"@ptomasroos/react-native-multi-slider\";\r\nimport { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { ISize } from \"../../../../../hooks/useComponentSize\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\nimport theme from \"../../../../../styles/theme\";\r\n\r\ninterface AmountSettingBoxProps {\r\n  parentSize: ISize;\r\n  isLongSelected: boolean;\r\n  amountRate: number;\r\n  setAmountRate: (value: number) => void;\r\n}\r\n\r\nfunction AmountSettingBox({\r\n  parentSize,\r\n  isLongSelected,\r\n  amountRate,\r\n  setAmountRate,\r\n}: AmountSettingBoxProps) {\r\n  const amountRateHandler = (value: number[]) => {\r\n    setAmountRate(value[0]);\r\n  };\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n      }}\r\n    >\r\n      <MultiSlider\r\n        sliderLength={parentSize.width * 0.8 || 200}\r\n        values={[amountRate]}\r\n        onValuesChange={amountRateHandler}\r\n        min={0}\r\n        max={101}\r\n        step={5}\r\n        snapped={true}\r\n        markerStyle={{\r\n          width: 18,\r\n          height: 18,\r\n          backgroundColor: isLongSelected\r\n            ? theme.colors.longButtonColor\r\n            : theme.colors.shortButtonColor,\r\n        }}\r\n        selectedStyle={{\r\n          backgroundColor: isLongSelected\r\n            ? theme.colors.longButtonColor\r\n            : theme.colors.shortButtonColor,\r\n        }}\r\n        trackStyle={{ backgroundColor: theme.colors.toneDownTextColor }}\r\n      />\r\n\r\n      <ControlSectionTitleText> {amountRate}%</ControlSectionTitleText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(AmountSettingBox);\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface CoinAmountBoxProps {\r\n  coinAmount: number;\r\n}\r\n\r\nfunction CoinAmountBox({ coinAmount }: CoinAmountBoxProps) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n      <ControlSectionTitleText>개수 | </ControlSectionTitleText>\r\n      <ControlSectionValueText>\r\n        {convertKrNumberType(coinAmount)}\r\n      </ControlSectionValueText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(CoinAmountBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { LEVERAGE_UNITS } from \"../../../../../globalConstant\";\r\nimport { ControlSectionTitleText } from \"../../../../../styles/TextStyledComponents\";\r\nimport theme from \"../../../../../styles/theme\";\r\nimport CustomToggleSwitch from \"../../../../assets/CustomSwitch\";\r\ninterface LeverageControlBoxProps {\r\n  isLongSelected: boolean;\r\n  activeLeverage: number;\r\n  leverage: number;\r\n  setLeverage: React.Dispatch<React.SetStateAction<number>>;\r\n  disabled: boolean;\r\n}\r\n\r\nfunction LeverageControlBox({\r\n  isLongSelected,\r\n  activeLeverage,\r\n  leverage,\r\n  setLeverage,\r\n  disabled,\r\n}: LeverageControlBoxProps) {\r\n  return (\r\n    <View style={{ width: \"100%\", height: \"100%\" }}>\r\n      <View style={{ marginTop: 10 }}>\r\n        <CustomToggleSwitch\r\n          options={LEVERAGE_UNITS}\r\n          value={activeLeverage ? activeLeverage : leverage}\r\n          setValueFunction={setLeverage}\r\n          disabled={disabled}\r\n          selectedColor={\r\n            isLongSelected\r\n              ? theme.colors.longButtonColor\r\n              : theme.colors.shortButtonColor\r\n          }\r\n          nonSelectedColor={theme.colors.toneDownTextColor}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LeverageControlBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n  LiquidControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface LiquidPriceBoxProps {\r\n  isLongSelected: boolean;\r\n  longLiquid: number;\r\n  shortLiquid: number;\r\n}\r\n\r\nfunction LiquidPriceBox({\r\n  isLongSelected,\r\n  longLiquid,\r\n  shortLiquid,\r\n}: LiquidPriceBoxProps) {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <ControlSectionTitleText>청산가 </ControlSectionTitleText>\r\n      <LiquidControlSectionValueText isLong={isLongSelected}>\r\n        {isLongSelected\r\n          ? convertKrNumberType(Math.ceil(longLiquid))\r\n          : convertKrNumberType(Math.ceil(shortLiquid))}\r\n      </LiquidControlSectionValueText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LiquidPriceBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface TotalPriceBoxProps {\r\n  totalPrice: number;\r\n}\r\n\r\nfunction TotalPriceBox({ totalPrice }: TotalPriceBoxProps) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n      <ControlSectionTitleText>주문총액 | </ControlSectionTitleText>\r\n      <ControlSectionValueText>\r\n        {convertKrNumberType(Math.ceil(totalPrice))}원\r\n      </ControlSectionValueText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TotalPriceBox);\r\n","import styled from \"styled-components/native\";\r\nimport { ITheme } from \"./theme\";\r\n\r\ninterface IContainerProps {\r\n  theme?: ITheme;\r\n}\r\n\r\ninterface IOpenContainerProps extends IContainerProps {\r\n  isLong: boolean;\r\n}\r\n\r\ninterface ILevelUpContainerProps extends IContainerProps {\r\n  disabled: boolean;\r\n}\r\n\r\nexport const BaseButton = styled.TouchableOpacity`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.CloseButtonBackgroundColor};\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const LevelUpButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.LevelUpButtonBackgroundColor};\r\n  opacity: ${(props: ILevelUpContainerProps) => (props.disabled ? 0.4 : 1)};\r\n  width: 85%;\r\n  height: 85%;\r\n`;\r\n\r\nexport const CloseButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.CloseButtonBackgroundColor2};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const OpenButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IOpenContainerProps) =>\r\n    props.isLong\r\n      ? props.theme.colors.longButtonColor\r\n      : props.theme.colors.shortButtonColor};\r\n  width: 40%;\r\n  height: 90%;\r\n`;\r\n\r\nexport const AccountResetButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.resetButtonBackgroundColor};\r\n  width: 70%;\r\n  height: 50%;\r\n`;\r\n\r\nexport const NextTurnButtonContainer = styled(BaseButton)`\r\n  background-color: ${(props: IContainerProps) =>\r\n    props.theme.colors.nextTurnButtonBackgroundColor};\r\n  width: 100%;\r\n  height: 50%;\r\n`;\r\n","import { memo } from \"react\";\r\nimport { Text, TouchableOpacity } from \"react-native\";\r\nimport { OpenButtonContainer } from \"../../../../../styles/buttonStyles\";\r\nimport { OpenButtonText } from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface TradeButtonProps {\r\n  isCandleMoving: boolean;\r\n  buttonHandler: () => void;\r\n  isBuy: boolean;\r\n}\r\n\r\nfunction TradeButton({\r\n  isCandleMoving,\r\n  buttonHandler,\r\n  isBuy,\r\n}: TradeButtonProps) {\r\n  return (\r\n    <OpenButtonContainer\r\n      isLong={isBuy}\r\n      onPress={buttonHandler}\r\n      disabled={isCandleMoving}\r\n    >\r\n      <OpenButtonText isLong={isBuy}>\r\n        {isBuy ? \"BUY / 롱\" : \"Sell / 숏\"}\r\n      </OpenButtonText>\r\n    </OpenButtonContainer>\r\n  );\r\n}\r\n\r\nexport default memo(TradeButton);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { levelInfoState } from \"../../../../../atom\";\r\nimport {\r\n  ControlSectionTitleText,\r\n  ControlSectionValueText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface TransactionFeeRateBoxProps {\r\n  transactionFee: number;\r\n}\r\n\r\nfunction TransactionFeeRateBox({ transactionFee }: TransactionFeeRateBoxProps) {\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <ControlSectionTitleText>수수료율 </ControlSectionTitleText>\r\n      <ControlSectionValueText style={{ color: levelInfo.color }}>\r\n        {transactionFee}%\r\n      </ControlSectionValueText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TransactionFeeRateBox);\r\n","import { cloneDeep } from \"lodash\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  cashAccountState,\r\n  isCandleMovingState,\r\n  isLongControllerActiveState,\r\n  lastClosePriceState,\r\n  levelInfoState,\r\n  longAccountDetailState,\r\n  longAccountState,\r\n  longLiquidState,\r\n  shortAccountDetailState,\r\n  shortAccountState,\r\n  shortLiquidState,\r\n} from \"../../../../atom\";\r\nimport useComponentSize from \"../../../../hooks/useComponentSize\";\r\nimport AmountSettingBox from \"./components/AmountSettingBox\";\r\nimport CoinAmountBox from \"./components/CoinAmountBox\";\r\n\r\nimport LeverageControlBox from \"./components/LeverageControlBox\";\r\nimport LiquidPriceBox from \"./components/LiquidPriceBox\";\r\nimport TotalPriceBox from \"./components/TotalPriceBox\";\r\nimport TradeButton from \"./components/TradeButton\";\r\nimport TransactionFeeRateBox from \"./components/TransactionFeeRateBox\";\r\n\r\nfunction TradeController({\r\n  disabled,\r\n  activeLeverage,\r\n}: {\r\n  disabled: boolean;\r\n  activeLeverage?: number;\r\n}) {\r\n  // Account System\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n  const [cashAccount, setCashAccount] = useRecoilState(cashAccountState);\r\n  const [longLiquid, setLongLiquid] = useRecoilState(longLiquidState);\r\n  const [shortLiquid, setShortLiquid] = useRecoilState(shortLiquidState);\r\n  const lastClosePrice = useRecoilValue(lastClosePriceState);\r\n  const [longAccount, setLongAccount] = useRecoilState(longAccountState);\r\n  const [shortAccount, setShortAccount] = useRecoilState(shortAccountState);\r\n  const longAccountDetail = useRecoilValue(longAccountDetailState);\r\n  const shortAccountDetail = useRecoilValue(shortAccountDetailState);\r\n  // UI System\r\n  const isCandleMoving = useRecoilValue(isCandleMovingState);\r\n  const isLongSelected = useRecoilValue(isLongControllerActiveState);\r\n\r\n  const [leverage, setLeverage] = useState(1);\r\n  const [amountRate, setAmountRate] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [coinAmount, setCoinAmount] = useState(0);\r\n\r\n  const { size, onLayout } = useComponentSize();\r\n\r\n  const buyButtonHandler = useCallback(() => {\r\n    if (isLongSelected) {\r\n      if (!isCandleMoving) {\r\n        if (shortAccountDetail.positionActive) {\r\n          alert(\"Long 포지션과 Short 포지션을 동시에 보유할 수 없습니다.\");\r\n        } else if (!longAccountDetail.positionActive && coinAmount > 0) {\r\n          setCashAccount((prev) => prev - totalPrice);\r\n          const newLongAccount = {\r\n            positionActive: true,\r\n            openPrice: lastClosePrice,\r\n            liquidPrice: longLiquid,\r\n            leverage: leverage,\r\n            openPositionValue: lastClosePrice * coinAmount,\r\n            openPositionAmount: coinAmount,\r\n            currentPositionValue: lastClosePrice * coinAmount,\r\n          };\r\n          setLongAccount(newLongAccount);\r\n        } else if (longAccountDetail.positionActive && coinAmount > 0) {\r\n          setCashAccount((prev) => prev - totalPrice);\r\n          setLongAccount((prev) => {\r\n            const newLog = cloneDeep(prev);\r\n            const newOpenPositionValue = lastClosePrice * coinAmount;\r\n            newLog.openPrice =\r\n              (newLog.openPrice * newLog.openPositionAmount +\r\n                newOpenPositionValue) /\r\n              (newLog.openPositionAmount + coinAmount);\r\n\r\n            newLog.openPositionAmount = newLog.openPositionAmount + coinAmount;\r\n\r\n            newLog.openPositionValue =\r\n              newLog.openPositionValue + newOpenPositionValue;\r\n\r\n            newLog.currentPositionValue =\r\n              newLog.currentPositionValue + newOpenPositionValue;\r\n\r\n            newLog.liquidPrice = newLog.openPrice * (1 - 1 / newLog.leverage);\r\n            return newLog;\r\n          });\r\n        } else if (coinAmount === 0) {\r\n          alert(\"0개는 주문할 수 없습니다.\");\r\n        }\r\n        setAmountRate(0);\r\n      }\r\n    }\r\n  }, [\r\n    isLongSelected,\r\n    isCandleMoving,\r\n    longAccountDetail,\r\n    totalPrice,\r\n    coinAmount,\r\n  ]);\r\n\r\n  const sellButtonHandler = useCallback(() => {\r\n    if (!isLongSelected) {\r\n      if (!isCandleMoving) {\r\n        if (longAccountDetail.positionActive) {\r\n          alert(\"Long 포지션과 Short 포지션을 동시에 보유할 수 없습니다.\");\r\n        } else if (!shortAccountDetail.positionActive && coinAmount > 0) {\r\n          setCashAccount((prev) => prev - totalPrice);\r\n          const newShortAccount = {\r\n            positionActive: true,\r\n            openPrice: lastClosePrice,\r\n            liquidPrice: shortLiquid,\r\n            leverage: leverage,\r\n            openPositionValue: lastClosePrice * coinAmount,\r\n            openPositionAmount: coinAmount,\r\n            currentPositionValue: lastClosePrice * coinAmount,\r\n          };\r\n          setShortAccount(newShortAccount);\r\n        } else if (shortAccountDetail.positionActive && coinAmount > 0) {\r\n          setCashAccount((prev) => prev - totalPrice);\r\n          setShortAccount((prev) => {\r\n            const newLog = cloneDeep(prev);\r\n            const newOpenPositionValue = lastClosePrice * coinAmount;\r\n            newLog.openPrice =\r\n              (newLog.openPrice * newLog.openPositionAmount +\r\n                newOpenPositionValue) /\r\n              (newLog.openPositionAmount + coinAmount);\r\n\r\n            newLog.openPositionAmount = newLog.openPositionAmount + coinAmount;\r\n\r\n            newLog.openPositionValue =\r\n              newLog.openPositionValue + newOpenPositionValue;\r\n\r\n            newLog.currentPositionValue =\r\n              newLog.currentPositionValue + newOpenPositionValue;\r\n\r\n            newLog.liquidPrice = newLog.openPrice * (1 + 1 / newLog.leverage);\r\n            return newLog;\r\n          });\r\n        } else if (coinAmount === 0) {\r\n          alert(\"0개는 주문할 수 없습니다.\");\r\n        }\r\n        setAmountRate(0);\r\n      }\r\n    }\r\n  }, [\r\n    isLongSelected,\r\n    isCandleMoving,\r\n    shortAccountDetail,\r\n    totalPrice,\r\n    coinAmount,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const targetCash = (cashAccount * amountRate) / 100;\r\n    const ableCoinAmount = Math.floor(\r\n      targetCash /\r\n        (lastClosePrice * (1 + (levelInfo.transactionFeeRate / 100) * leverage))\r\n    );\r\n    setCoinAmount(ableCoinAmount);\r\n  }, [amountRate, leverage]);\r\n\r\n  useEffect(() => {\r\n    setTotalPrice(\r\n      lastClosePrice *\r\n        coinAmount *\r\n        (1 + (levelInfo.transactionFeeRate / 100) * leverage)\r\n    );\r\n  }, [lastClosePrice, coinAmount]);\r\n\r\n  useEffect(() => {\r\n    if (isCandleMoving) {\r\n      setLongLiquid(0);\r\n      setShortLiquid(0);\r\n    } else {\r\n      if (isLongSelected) {\r\n        setLongLiquid(lastClosePrice * (1 - 1 / leverage));\r\n      } else {\r\n        setShortLiquid(lastClosePrice * (1 + 1 / leverage));\r\n      }\r\n    }\r\n    return () => {\r\n      setLongLiquid(0);\r\n      setShortLiquid(0);\r\n    };\r\n  }, [lastClosePrice, leverage, isCandleMoving, isLongSelected]);\r\n\r\n  useEffect(() => {\r\n    if (isCandleMoving) {\r\n      setAmountRate(0);\r\n    }\r\n  }, [isCandleMoving]);\r\n\r\n  return (\r\n    <View style={{ height: \"100%\", width: \"100%\" }} onLayout={onLayout}>\r\n      <View style={{ flex: 1.2 }}>\r\n        <LeverageControlBox\r\n          isLongSelected={isLongSelected}\r\n          activeLeverage={activeLeverage}\r\n          leverage={leverage}\r\n          setLeverage={setLeverage}\r\n          disabled={disabled}\r\n        />\r\n      </View>\r\n      <View\r\n        style={{\r\n          flex: 1.5,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{ height: \"100%\", flex: 2, justifyContent: \"space-evenly\" }}\r\n        >\r\n          <TotalPriceBox totalPrice={totalPrice} />\r\n          <CoinAmountBox coinAmount={coinAmount} />\r\n        </View>\r\n        <View\r\n          style={{ height: \"100%\", flex: 1, justifyContent: \"space-evenly\" }}\r\n        >\r\n          <LiquidPriceBox\r\n            isLongSelected={isLongSelected}\r\n            longLiquid={longLiquid}\r\n            shortLiquid={shortLiquid}\r\n          />\r\n          <TransactionFeeRateBox\r\n            transactionFee={levelInfo.transactionFeeRate}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1.5 }}>\r\n        <AmountSettingBox\r\n          parentSize={size}\r\n          isLongSelected={isLongSelected}\r\n          amountRate={amountRate}\r\n          setAmountRate={setAmountRate}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 1.5, flexDirection: \"row\" }}>\r\n        <View style={{ flex: 3, alignItems: \"flex-end\", paddingRight: 20 }}>\r\n          {isLongSelected ? (\r\n            <TradeButton\r\n              isCandleMoving={isCandleMoving}\r\n              buttonHandler={buyButtonHandler}\r\n              isBuy={true}\r\n            />\r\n          ) : (\r\n            <TradeButton\r\n              isCandleMoving={isCandleMoving}\r\n              buttonHandler={sellButtonHandler}\r\n              isBuy={false}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default TradeController;\r\n","import { useRecoilValue } from \"recoil\";\r\nimport { longAccountDetailState } from \"../../../../atom\";\r\nimport TradeController from \"./TradeController\";\r\n\r\nfunction LongTradeController() {\r\n  const longAccountDetail = useRecoilValue(longAccountDetailState);\r\n\r\n  return (\r\n    <TradeController\r\n      disabled={longAccountDetail.positionActive}\r\n      activeLeverage={\r\n        longAccountDetail.positionActive ? longAccountDetail.leverage : null\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default LongTradeController;\r\n","import { useRecoilValue } from \"recoil\";\r\nimport { shortAccountDetailState } from \"../../../../atom\";\r\nimport TradeController from \"./TradeController\";\r\n\r\nfunction ShortTradeController() {\r\n  const shortAccountDetail = useRecoilValue(shortAccountDetailState);\r\n  return (\r\n    <TradeController\r\n      disabled={shortAccountDetail.positionActive}\r\n      activeLeverage={\r\n        shortAccountDetail.positionActive ? shortAccountDetail.leverage : null\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ShortTradeController;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { isLongControllerActiveState } from \"../../../atom\";\r\nimport rootStyles from \"../../../styles/rootStyles\";\r\nimport theme from \"../../../styles/theme\";\r\nimport CustomToggleSwitch from \"../../assets/CustomSwitch\";\r\nimport LongTradeController from \"./trade-controller/LongTradeController\";\r\nimport ShortTradeController from \"./trade-controller/ShortTradeController\";\r\n\r\nfunction Trade() {\r\n  const [isLongSelected, setIsLongSelected] = useRecoilState(\r\n    isLongControllerActiveState\r\n  );\r\n  return (\r\n    <View style={rootStyles.trade}>\r\n      <View style={{ flex: 1, backgroundColor: theme.colors.backgroundColor1 }}>\r\n        <CustomToggleSwitch\r\n          options={[\r\n            { label: \"롱\", value: true },\r\n            { label: \"숏\", value: false },\r\n          ]}\r\n          value={isLongSelected}\r\n          setValueFunction={setIsLongSelected}\r\n          selectedColor={\r\n            isLongSelected\r\n              ? theme.colors.longButtonColor\r\n              : theme.colors.shortButtonColor\r\n          }\r\n          nonSelectedColor={theme.colors.toneDownTextColor}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 6, backgroundColor: theme.colors.backgroundColor1 }}>\r\n        {isLongSelected ? <LongTradeController /> : <ShortTradeController />}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Trade;\r\n","import { ScrollView, View } from \"react-native\";\r\n\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport Shop from \"./shop/Shop\";\r\nimport Trade from \"./trade/Trade\";\r\n\r\nfunction ControlPanel() {\r\n  return (\r\n    <View style={rootStyles.controlPanel}>\r\n      <Shop />\r\n      <Trade />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import { cloneDeep } from \"lodash\";\r\nimport { View } from \"react-native\";\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\r\nimport {\r\n  cashAccountState,\r\n  futureActiveState,\r\n  interestPriceState,\r\n  interestTurnNumberState,\r\n  isCandleMovingState,\r\n  levelInfoState,\r\n  levelNumberState,\r\n  loanInfoState,\r\n  loanTurnNumberState,\r\n  longAccountState,\r\n  shortAccountState,\r\n  turnNumberState,\r\n} from \"../../atom\";\r\nimport {\r\n  AccountResetButtonContainer,\r\n  NextTurnButtonContainer,\r\n} from \"../../styles/buttonStyles\";\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport {\r\n  NextTurnButtonText,\r\n  ResetButtonText,\r\n} from \"../../styles/TextStyledComponents\";\r\n\r\nfunction RootControlButton() {\r\n  const interestTurnNumber = useRecoilValue(interestTurnNumberState);\r\n  const loanTurnNumber = useRecoilValue(loanTurnNumberState);\r\n  const interestPrice = useRecoilValue(interestPriceState);\r\n  const futureActive = useRecoilValue(futureActiveState);\r\n  const loanInfo = useRecoilValue(loanInfoState);\r\n\r\n  const [levelNumber, setLevelNumber] = useRecoilState(levelNumberState);\r\n  const [longAccount, setLongAccount] = useRecoilState(longAccountState);\r\n  const [shortAccount, setShortAccount] = useRecoilState(shortAccountState);\r\n  const [turnNumber, setTurnNumber] = useRecoilState(turnNumberState);\r\n  const [cashAccount, setCashAccount] = useRecoilState(cashAccountState);\r\n\r\n  const resetCashAccount = useResetRecoilState(cashAccountState);\r\n  const resetLongAccount = useResetRecoilState(longAccountState);\r\n  const resetShortAccount = useResetRecoilState(shortAccountState);\r\n  const resetLevelNumber = useResetRecoilState(levelNumberState);\r\n  const resetTurnNumber = useResetRecoilState(turnNumberState);\r\n  const [isCandleMoving, setIsCandleMoving] =\r\n    useRecoilState(isCandleMovingState);\r\n\r\n  const payInterest = () => {\r\n    if (loanInfo.interest.cashAble) {\r\n      setCashAccount(loanInfo.interest.cashRemain);\r\n    } else if (loanInfo.interest.futureAble) {\r\n      if (futureActive.isLongActive) {\r\n        setLongAccount((prev) => {\r\n          const newAccount = cloneDeep(prev);\r\n          newAccount.openPositionAmount =\r\n            newAccount.openPositionAmount -\r\n            interestPrice / newAccount.openPrice;\r\n          newAccount.openPositionValue =\r\n            newAccount.openPositionValue - loanInfo.interest.futurePayFee;\r\n          newAccount.currentPositionValue =\r\n            newAccount.openPositionValue - loanInfo.interest.futurePayFee;\r\n          return newAccount;\r\n        });\r\n      } else if (futureActive.isShortActive) {\r\n        setShortAccount((prev) => {\r\n          const newAccount = cloneDeep(prev);\r\n          newAccount.openPositionAmount =\r\n            newAccount.openPositionAmount -\r\n            interestPrice / newAccount.openPrice;\r\n          newAccount.openPositionValue =\r\n            newAccount.openPositionValue - loanInfo.interest.futurePayFee;\r\n          newAccount.currentPositionValue =\r\n            newAccount.openPositionValue - loanInfo.interest.futurePayFee;\r\n          return newAccount;\r\n        });\r\n      }\r\n    } else {\r\n      console.error(\"PayInterest Able, but not Working?\");\r\n    }\r\n  };\r\n\r\n  const resetAccount = () => {\r\n    resetCashAccount();\r\n    resetLongAccount();\r\n    resetShortAccount();\r\n  };\r\n\r\n  const resetButtonHandler = () => {\r\n    resetTurnNumber();\r\n    resetAccount();\r\n    resetLevelNumber();\r\n  };\r\n\r\n  const setLevelDown = () => {\r\n    resetTurnNumber();\r\n    resetAccount();\r\n    setLevelNumber((prev) => {\r\n      if (prev > 1) return prev - 1;\r\n      else return 1;\r\n    });\r\n  };\r\n\r\n  const nextTurnHandler = () => {\r\n    if (interestTurnNumber == 1) {\r\n      if (loanInfo.interest.payAble) {\r\n        payInterest();\r\n        setTurnNumber((prev) => prev + 1);\r\n        setIsCandleMoving(true);\r\n      } else {\r\n        alert(\"이자를 내지 못하여 파산하셨습니다.\\n 레벨이 다운 됩니다.\");\r\n        setLevelDown();\r\n      }\r\n    } else if (loanTurnNumber == 1) {\r\n      alert(\"대출을 갚지 못하여 파산하셨습니다.\\n 레벨이 다운 됩니다.\");\r\n      setLevelDown();\r\n    } else {\r\n      setTurnNumber((prev) => prev + 1);\r\n      setIsCandleMoving(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={rootStyles.rootControlButton}>\r\n      <View\r\n        style={{ flex: 1, justifyContent: \"flex-start\", alignItems: \"center\" }}\r\n      >\r\n        <AccountResetButtonContainer\r\n          onPress={resetButtonHandler}\r\n          disabled={isCandleMoving}\r\n        >\r\n          <ResetButtonText>리셋</ResetButtonText>\r\n        </AccountResetButtonContainer>\r\n      </View>\r\n      <View\r\n        style={{\r\n          flex: 4,\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n          paddingRight: 25,\r\n        }}\r\n      >\r\n        <NextTurnButtonContainer\r\n          onPress={nextTurnHandler}\r\n          disabled={isCandleMoving}\r\n        >\r\n          <NextTurnButtonText>Next Turn</NextTurnButtonText>\r\n        </NextTurnButtonContainer>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default RootControlButton;\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { LevelLabelText } from \"../../styles/TextStyledComponents\";\r\n\r\ninterface LevelLabelBoxProps {\r\n  label: string;\r\n  color: string;\r\n}\r\n\r\nfunction LevelLabelBox({ label, color }: LevelLabelBoxProps) {\r\n  return (\r\n    <View style={{ backgroundColor: color, padding: 3, marginRight: 5 }}>\r\n      <LevelLabelText>{label}</LevelLabelText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LevelLabelBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { ProgressBar, Colors } from \"react-native-paper\";\r\nimport convertKrNumberType from \"../../functions/convertKrNumberType\";\r\nimport {\r\n  ProgressValueText,\r\n  TargetValueText,\r\n} from \"../../styles/TextStyledComponents\";\r\n\r\ninterface LevelProgressBarProps {\r\n  progressRate: number;\r\n  targetValue: number;\r\n}\r\n\r\nfunction LevelProgressBar({\r\n  progressRate,\r\n  targetValue,\r\n}: LevelProgressBarProps) {\r\n  return (\r\n    <View style={{ width: \"70%\" }}>\r\n      <ProgressBar progress={progressRate} color={Colors.greenA200} />\r\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n        <ProgressValueText>\r\n          {(progressRate * 100).toFixed(2)}%\r\n        </ProgressValueText>\r\n        <TargetValueText>{convertKrNumberType(targetValue)}</TargetValueText>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LevelProgressBar);\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\r\nimport {\r\n  cashAccountState,\r\n  levelNumberState,\r\n  longAccountState,\r\n  shortAccountState,\r\n  turnNumberState,\r\n} from \"../../atom\";\r\nimport { LevelUpButtonContainer } from \"../../styles/buttonStyles\";\r\nimport { LevelUpText } from \"../../styles/TextStyledComponents\";\r\n\r\ninterface LevelUpButtonProps {\r\n  isReadyToLevelUp: boolean;\r\n}\r\n\r\nfunction LevelUpButton({ isReadyToLevelUp }: LevelUpButtonProps) {\r\n  const [levelNumber, setLevelNumber] = useRecoilState(levelNumberState);\r\n  const resetTurnNumber = useResetRecoilState(turnNumberState);\r\n  const resetCashAccount = useResetRecoilState(cashAccountState);\r\n  const resetLongAccount = useResetRecoilState(longAccountState);\r\n  const resetShortAccount = useResetRecoilState(shortAccountState);\r\n\r\n  const levelUpHandler = () => {\r\n    if (levelNumber < 7) {\r\n      setLevelNumber((prev) => prev + 1);\r\n      resetCashAccount();\r\n      resetLongAccount();\r\n      resetShortAccount();\r\n      resetTurnNumber();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <LevelUpButtonContainer\r\n        disabled={!isReadyToLevelUp}\r\n        onPress={levelUpHandler}\r\n      >\r\n        <LevelUpText>상환</LevelUpText>\r\n      </LevelUpButtonContainer>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LevelUpButton);\r\n","import { memo, useEffect, useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  isCandleMovingState,\r\n  levelInfoState,\r\n  levelNumberState,\r\n  totalAccountState,\r\n  turnNumberState,\r\n} from \"../../atom\";\r\n\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport LevelLabelBox from \"./LevelLabelBox\";\r\nimport LevelProgressBar from \"./LevelProgressBar\";\r\nimport LevelUpButton from \"./LevelUpButton\";\r\n\r\nfunction LevelInfoBox() {\r\n  const turnNumber = useRecoilValue(turnNumberState);\r\n  const levelNumber = useRecoilValue(levelNumberState);\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n  const totalAccount = useRecoilValue(totalAccountState);\r\n  const isCandleMoving = useRecoilValue(isCandleMovingState);\r\n  const [progressRate, setProgressRate] = useState<number>(\r\n    totalAccount.totalAsset / levelInfo.loan\r\n  );\r\n  const [isReadyToLevelUp, setIsReadyToLevelUp] = useState<boolean>(\r\n    progressRate >= 1\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isCandleMoving) {\r\n      setProgressRate(totalAccount.totalAsset / levelInfo.loan);\r\n    }\r\n  }, [isCandleMoving, levelNumber, turnNumber]);\r\n\r\n  useEffect(() => {\r\n    setIsReadyToLevelUp(progressRate >= 1);\r\n  }, [progressRate]);\r\n\r\n  return (\r\n    <View style={rootStyles.level}>\r\n      <View\r\n        style={{\r\n          flex: 2.7,\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        <LevelLabelBox label={levelInfo.levelName} color={levelInfo.color} />\r\n        <LevelProgressBar\r\n          progressRate={progressRate}\r\n          targetValue={levelInfo.loan}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 1, paddingRight: 10 }}>\r\n        <LevelUpButton isReadyToLevelUp={isReadyToLevelUp} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LevelInfoBox);\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../functions/convertKrNumberType\";\r\nimport {\r\n  LoanInfoValueText,\r\n  InterestTurnLimitText,\r\n  LoanInfoTitleText,\r\n  LoanInfoUnitText,\r\n} from \"../../../../styles/TextStyledComponents\";\r\n\r\ninterface InterestBoxProps {\r\n  remainTurn: number;\r\n  interestPrice: number;\r\n}\r\n\r\nfunction InterestBox({ remainTurn, interestPrice }: InterestBoxProps) {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"space-evenly\" }}>\r\n      <View style={{ alignItems: \"flex-start\" }}>\r\n        {remainTurn == 1 ? (\r\n          <InterestTurnLimitText>내일</InterestTurnLimitText>\r\n        ) : (\r\n          <InterestTurnLimitText>D-{remainTurn}</InterestTurnLimitText>\r\n        )}\r\n      </View>\r\n      <View>\r\n        <LoanInfoTitleText>이자</LoanInfoTitleText>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <LoanInfoValueText>\r\n            {interestPrice / 10000 >= 1\r\n              ? `${convertKrNumberType(Math.ceil(interestPrice / 10000))}`\r\n              : `${convertKrNumberType(interestPrice)}`}\r\n          </LoanInfoValueText>\r\n          <LoanInfoUnitText>\r\n            {interestPrice / 10000 >= 1 ? `만원` : `원`}\r\n          </LoanInfoUnitText>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(InterestBox);\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../functions/convertKrNumberType\";\r\nimport {\r\n  LoanInfoTitleText,\r\n  LoanInfoUnitText,\r\n  LoanInfoValueText,\r\n  RemainTurnBoxText,\r\n} from \"../../../../styles/TextStyledComponents\";\r\n\r\ninterface LoanBoxProps {\r\n  limitTurn: number;\r\n  loanPrice: number;\r\n}\r\n\r\nfunction LoanBox({ limitTurn, loanPrice }: LoanBoxProps) {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"space-evenly\" }}>\r\n      <View style={{ alignItems: \"flex-start\" }}>\r\n        {limitTurn >= 1 ? (\r\n          limitTurn == 1 ? (\r\n            <RemainTurnBoxText>내일</RemainTurnBoxText>\r\n          ) : (\r\n            <RemainTurnBoxText>D-{limitTurn}</RemainTurnBoxText>\r\n          )\r\n        ) : (\r\n          <RemainTurnBoxText></RemainTurnBoxText>\r\n        )}\r\n      </View>\r\n      <View style={{ marginTop: 1 }}>\r\n        <LoanInfoTitleText>대출금</LoanInfoTitleText>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <LoanInfoValueText>\r\n            {loanPrice / 10000 >= 10000\r\n              ? `${convertKrNumberType(Math.ceil(loanPrice / 100000000))}`\r\n              : `${convertKrNumberType(Math.ceil(loanPrice / 10000))}`}\r\n          </LoanInfoValueText>\r\n          <LoanInfoUnitText>\r\n            {loanPrice / 10000 >= 10000 ? `억원` : `만원`}\r\n          </LoanInfoUnitText>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LoanBox);\r\n","import { memo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { DayNumberText } from \"../../../../styles/TextStyledComponents\";\r\n\r\ninterface TurnNumberBoxProps {\r\n  turnNumber: number;\r\n}\r\n\r\nfunction TurnNumberBox({ turnNumber }: TurnNumberBoxProps) {\r\n  return (\r\n    <View\r\n      style={{\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n      }}\r\n    >\r\n      <DayNumberText>{turnNumber}일째</DayNumberText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TurnNumberBox);\r\n","import { View } from \"react-native\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  interestPriceState,\r\n  interestTurnNumberState,\r\n  levelInfoState,\r\n  loanTurnNumberState,\r\n  turnNumberState,\r\n} from \"../../../atom\";\r\n\r\nimport { INTEREST_RATE } from \"../../../globalConstant\";\r\nimport rootStyles from \"../../../styles/rootStyles\";\r\nimport InterestBox from \"./components/InterestBox\";\r\nimport LoanBox from \"./components/LoanBox\";\r\n\r\nimport TurnNumberBox from \"./components/TurnNumberBox\";\r\n\r\nfunction LoanInfo() {\r\n  const turnNumber = useRecoilValue(turnNumberState);\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n  const interestPrice = useRecoilValue(interestPriceState);\r\n  const interestTurnNumber = useRecoilValue(interestTurnNumberState);\r\n  const loanTurnNumber = useRecoilValue(loanTurnNumberState);\r\n\r\n  return (\r\n    <View style={rootStyles.loanInfo}>\r\n      <View style={{ flex: 1 }}>\r\n        <TurnNumberBox turnNumber={turnNumber} />\r\n      </View>\r\n      <View style={{ flex: 5 }}>\r\n        <InterestBox\r\n          remainTurn={interestTurnNumber}\r\n          interestPrice={interestPrice}\r\n        />\r\n        <LoanBox limitTurn={loanTurnNumber} loanPrice={levelInfo.loan} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default LoanInfo;\r\n","import { memo, useEffect, useState } from \"react\";\r\nimport { VictoryBar, VictoryLabel, VictoryStack } from \"victory-native\";\r\nimport theme from \"../../styles/theme\";\r\n\r\nfunction CustomVictoryStack({\r\n  parentSize,\r\n  barCashRate,\r\n  barFutureRate,\r\n  position,\r\n}: {\r\n  parentSize: { width: number; height: number; x: number; y: number };\r\n  barCashRate: number;\r\n  barFutureRate: number;\r\n  position: boolean;\r\n}) {\r\n  const [barColor, setBarColor] = useState(\r\n    position ? theme.colors.positivePriceColor : theme.colors.negativePriceColor\r\n  );\r\n\r\n  useEffect(() => {\r\n    setBarColor(\r\n      position\r\n        ? theme.colors.positivePriceColor\r\n        : theme.colors.negativePriceColor\r\n    );\r\n  }, [position]);\r\n\r\n  return (\r\n    <VictoryStack\r\n      width={parentSize.width || 100}\r\n      height={parentSize.height || 100}\r\n      padding={10}\r\n      animate={{ duration: 300 }}\r\n      colorScale={[barColor, \"whitesmoke\"]}\r\n    >\r\n      <VictoryBar\r\n        data={[{ x: \"a\", y: barFutureRate }]}\r\n        labels={({ datum }) => `${Math.ceil(datum.y * 100)}%`}\r\n        style={{ labels: { fill: \"white\", fontSize: 14 } }}\r\n        labelComponent={<VictoryLabel dx={24} dy={6} />}\r\n        barWidth={15}\r\n      />\r\n      <VictoryBar data={[{ x: \"a\", y: barCashRate }]} barWidth={15} />\r\n    </VictoryStack>\r\n  );\r\n}\r\n\r\nexport default memo(CustomVictoryStack);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { EmptyPositionText } from \"../../../styles/TextStyledComponents\";\r\n\r\nfunction EmptyPositionBox() {\r\n  return (\r\n    <View\r\n      style={{ justifyContent: \"center\", alignItems: \"center\", paddingTop: 10 }}\r\n    >\r\n      <EmptyPositionText>포지션이 없습니다.</EmptyPositionText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(EmptyPositionBox);\r\n","import { memo } from \"react\";\r\nimport { Text, TouchableOpacity } from \"react-native\";\r\nimport { CloseButtonContainer } from \"../../../../../styles/buttonStyles\";\r\nimport { PositionCloseButtonText } from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface CloseButtonProps {\r\n  isLong: boolean;\r\n  closeHandler: () => void;\r\n}\r\n\r\nfunction CloseButton({ isLong, closeHandler }: CloseButtonProps) {\r\n  return (\r\n    <CloseButtonContainer onPress={closeHandler}>\r\n      <PositionCloseButtonText isLong={isLong}>\r\n        포지션 종료\r\n      </PositionCloseButtonText>\r\n    </CloseButtonContainer>\r\n  );\r\n}\r\n\r\nexport default memo(CloseButton);\r\n","import { View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  LiquidValueText,\r\n  OpenValueText,\r\n  PositionInfoTitleBoxText,\r\n  PositionInfoValueBoxText,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface PositionSettingInfoProps {\r\n  liquidPrice: number;\r\n  openPrice: number;\r\n  isLong: boolean;\r\n}\r\n\r\nfunction PositionSettingInfo({\r\n  liquidPrice,\r\n  openPrice,\r\n  isLong,\r\n}: PositionSettingInfoProps) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\" }}>\r\n      <View style={{ flex: 1.3 }}>\r\n        <PositionInfoTitleBoxText>청산가</PositionInfoTitleBoxText>\r\n        <LiquidValueText isLong={isLong}>\r\n          {convertKrNumberType(Number(liquidPrice.toFixed(2)))}\r\n        </LiquidValueText>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <PositionInfoTitleBoxText>평단가</PositionInfoTitleBoxText>\r\n        <OpenValueText>\r\n          {convertKrNumberType(Number(openPrice.toFixed(2)))}\r\n        </OpenValueText>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default PositionSettingInfo;\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { PositionLeverageBoxText } from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface LeverageInfoBoxProps {\r\n  leverage: number;\r\n  isLong: boolean;\r\n}\r\n\r\nfunction LeverageInfoBox({ leverage, isLong }: LeverageInfoBoxProps) {\r\n  return (\r\n    <View>\r\n      <PositionLeverageBoxText isLong={isLong}>\r\n        X{leverage}\r\n      </PositionLeverageBoxText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(LeverageInfoBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  PositionInfoTitleBoxText,\r\n  PositionInfoValueBoxText,\r\n  UnrealizedPnlBoxValue,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface OpenPositionInfoProps {\r\n  openPositionValue: number;\r\n  currentfutureTotalAsset: number;\r\n  isPositive: string;\r\n}\r\n\r\nfunction OpenPositionInfo({\r\n  openPositionValue,\r\n  currentfutureTotalAsset,\r\n  isPositive,\r\n}: OpenPositionInfoProps) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\" }}>\r\n      <View style={{ flex: 1.3 }}>\r\n        <PositionInfoTitleBoxText>총 매수</PositionInfoTitleBoxText>\r\n        <PositionInfoValueBoxText>\r\n          {convertKrNumberType(Math.ceil(openPositionValue))}\r\n        </PositionInfoValueBoxText>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <PositionInfoTitleBoxText>총 평가</PositionInfoTitleBoxText>\r\n        <UnrealizedPnlBoxValue isPositive={isPositive}>\r\n          {convertKrNumberType(Math.ceil(currentfutureTotalAsset))}\r\n        </UnrealizedPnlBoxValue>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(OpenPositionInfo);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport convertKrNumberType from \"../../../../../functions/convertKrNumberType\";\r\nimport {\r\n  UnrealizedPnlBoxText,\r\n  UnrealizedPnlBoxValue,\r\n} from \"../../../../../styles/TextStyledComponents\";\r\n\r\ninterface ProfitInfoBoxProps {\r\n  unrealizedPnl: number;\r\n  profitRate: number;\r\n  isPositive: string;\r\n}\r\n\r\nfunction ProfitInfoBox({\r\n  unrealizedPnl,\r\n  profitRate,\r\n  isPositive,\r\n}: ProfitInfoBoxProps) {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <View style={{ flex: 1.3 }}>\r\n        <UnrealizedPnlBoxText>미실현 손익</UnrealizedPnlBoxText>\r\n        <UnrealizedPnlBoxValue isPositive={isPositive}>\r\n          {convertKrNumberType(Math.ceil(unrealizedPnl))}원{\" \"}\r\n        </UnrealizedPnlBoxValue>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <UnrealizedPnlBoxText>수익률</UnrealizedPnlBoxText>\r\n        <UnrealizedPnlBoxValue isPositive={isPositive}>\r\n          {(profitRate * 100).toFixed(2)}%\r\n        </UnrealizedPnlBoxValue>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(ProfitInfoBox);\r\n","import { memo } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { PositionTitleBoxText } from \"../../../../../styles/TextStyledComponents\";\r\nimport theme from \"../../../../../styles/theme\";\r\n\r\ninterface TitleBoxProps {\r\n  isLong: boolean;\r\n}\r\n\r\nfunction TitleBox({ isLong }: TitleBoxProps) {\r\n  return (\r\n    <View\r\n      style={{\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: 4,\r\n        overflow: \"hidden\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: isLong\r\n          ? theme.colors.positiveTextColor\r\n          : theme.colors.negativeTextColor,\r\n      }}\r\n    >\r\n      <PositionTitleBoxText isLong={isLong}>\r\n        {isLong ? \"롱\" : \"숏\"}\r\n      </PositionTitleBoxText>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(TitleBox);\r\n","import { View } from \"react-native\";\r\nimport { IFutureAccountDetail } from \"../../../../interfaces/interface\";\r\nimport CloseButton from \"./components/CloseButton\";\r\nimport PositionSettingInfo from \"./components/CurrentPositionInfo\";\r\nimport LeverageInfoBox from \"./components/LeverageInfoBox\";\r\nimport OpenPositionInfo from \"./components/OpenPositionInfo\";\r\nimport ProfitInfoBox from \"./components/ProfitInfoBox\";\r\nimport TitleBox from \"./components/TitleBox\";\r\n\r\ninterface PositionBoxProps {\r\n  isLong: boolean;\r\n  accountDetail: IFutureAccountDetail;\r\n  closeHandler: () => void;\r\n}\r\n\r\nfunction PositionBox({\r\n  accountDetail,\r\n  closeHandler,\r\n  isLong,\r\n}: PositionBoxProps) {\r\n  return (\r\n    <View style={{ height: \"100%\", flexDirection: \"column\", padding: 5 }}>\r\n      <View style={{ flex: 1, flexDirection: \"row\", paddingRight: 10 }}>\r\n        <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TitleBox isLong={isLong} />\r\n          <LeverageInfoBox isLong={isLong} leverage={accountDetail.leverage} />\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <CloseButton isLong={isLong} closeHandler={closeHandler} />\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 5, justifyContent: \"space-evenly\" }}>\r\n        <ProfitInfoBox\r\n          unrealizedPnl={accountDetail.unrealizedPnl}\r\n          profitRate={accountDetail.profitRate}\r\n          isPositive={accountDetail.isPositive}\r\n        />\r\n        <OpenPositionInfo\r\n          openPositionValue={accountDetail.openPositionValue}\r\n          currentfutureTotalAsset={accountDetail.totalAsset}\r\n          isPositive={accountDetail.isPositive}\r\n        />\r\n        <PositionSettingInfo\r\n          liquidPrice={accountDetail.liquidPrice}\r\n          openPrice={accountDetail.openPrice}\r\n          isLong={isLong}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default PositionBox;\r\n","import { memo } from \"react\";\r\nimport { IFutureAccountDetail } from \"../../../interfaces/interface\";\r\nimport EmptyPositionBox from \"./EmptyPositionBox\";\r\nimport PositionBox from \"./position-box/PositionBox\";\r\n\r\ninterface PositionInfoViewerProps {\r\n  accountDetail: IFutureAccountDetail;\r\n  closeHandler: () => void;\r\n  isLong: boolean;\r\n}\r\n\r\nfunction PositionInfoViewer({\r\n  accountDetail,\r\n  closeHandler,\r\n  isLong,\r\n}: PositionInfoViewerProps) {\r\n  return (\r\n    <PositionBox\r\n      accountDetail={accountDetail}\r\n      closeHandler={closeHandler}\r\n      isLong={isLong}\r\n    />\r\n  );\r\n}\r\n\r\nexport default memo(PositionInfoViewer);\r\n","import { memo, useEffect, useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\r\nimport {\r\n  cashAccountState,\r\n  isCandleMovingState,\r\n  levelInfoState,\r\n  longAccountDetailState,\r\n  longAccountState,\r\n  shortAccountDetailState,\r\n  shortAccountState,\r\n  totalAccountState,\r\n} from \"../../../atom\";\r\nimport useComponentSize from \"../../../hooks/useComponentSize\";\r\nimport rootStyles from \"../../../styles/rootStyles\";\r\nimport CustomVictoryStack from \"../../assets/CustomVictoryStack\";\r\nimport EmptyPositionBox from \"./EmptyPositionBox\";\r\nimport PositionInfoViewer from \"./PositionInfoViewer\";\r\n\r\nfunction PositionInfo() {\r\n  const isCandleMoving = useRecoilValue(isCandleMovingState);\r\n  const levelInfo = useRecoilValue(levelInfoState);\r\n\r\n  const [cashAccount, setCashAccount] = useRecoilState(cashAccountState);\r\n  const longAccountDetail = useRecoilValue(longAccountDetailState);\r\n  const resetLongAccount = useResetRecoilState(longAccountState);\r\n  const shortAccountDetail = useRecoilValue(shortAccountDetailState);\r\n  const resetShortAccount = useResetRecoilState(shortAccountState);\r\n  const totalAcount = useRecoilValue(totalAccountState);\r\n\r\n  const [barCashRate, setBarCashRate] = useState(\r\n    totalAcount.cash / totalAcount.totalAsset\r\n  );\r\n  const [barFutureRate, setBarFutureRate] = useState(\r\n    totalAcount.futureValuation / totalAcount.totalAsset\r\n  );\r\n  const { size, onLayout } = useComponentSize();\r\n\r\n  const longCloseHandler = () => {\r\n    if (!isCandleMoving) {\r\n      setCashAccount(\r\n        (prev) =>\r\n          prev +\r\n          longAccountDetail.totalAsset *\r\n            (1 -\r\n              (levelInfo.transactionFeeRate * longAccountDetail.leverage) / 100)\r\n      );\r\n      resetLongAccount();\r\n    }\r\n  };\r\n\r\n  const shortCloseHandler = () => {\r\n    if (!isCandleMoving) {\r\n      setCashAccount(\r\n        (prev) =>\r\n          prev +\r\n          shortAccountDetail.totalAsset *\r\n            (1 -\r\n              (levelInfo.transactionFeeRate * shortAccountDetail.leverage) /\r\n                100)\r\n      );\r\n      resetShortAccount();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isCandleMoving) {\r\n      setBarCashRate(totalAcount.cash / totalAcount.totalAsset);\r\n      setBarFutureRate(totalAcount.futureValuation / totalAcount.totalAsset);\r\n    }\r\n  }, [isCandleMoving, totalAcount]);\r\n\r\n  return (\r\n    <View style={rootStyles.positionInfo}>\r\n      <View style={{ flex: 1, flexDirection: \"row\" }} onLayout={onLayout}>\r\n        <CustomVictoryStack\r\n          parentSize={size}\r\n          barCashRate={barCashRate}\r\n          barFutureRate={barFutureRate}\r\n          position={longAccountDetail.positionActive}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 3.2 }}>\r\n        {longAccountDetail.positionActive ? (\r\n          <PositionInfoViewer\r\n            accountDetail={longAccountDetail}\r\n            closeHandler={longCloseHandler}\r\n            isLong={true}\r\n          />\r\n        ) : null}\r\n        {shortAccountDetail.positionActive ? (\r\n          <PositionInfoViewer\r\n            accountDetail={shortAccountDetail}\r\n            closeHandler={shortCloseHandler}\r\n            isLong={false}\r\n          />\r\n        ) : null}\r\n        {!longAccountDetail.positionActive &&\r\n        !shortAccountDetail.positionActive ? (\r\n          <EmptyPositionBox />\r\n        ) : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default memo(PositionInfo);\r\n","import { ScrollView, View } from \"react-native\";\r\nimport rootStyles from \"../../styles/rootStyles\";\r\nimport LoanInfo from \"./loan-info/LoanInfo\";\r\nimport PositionInfo from \"./position-info/PositionInfo\";\r\n\r\nfunction Info() {\r\n  return (\r\n    <View style={rootStyles.Info}>\r\n      <ScrollView\r\n        horizontal={true}\r\n        alwaysBounceHorizontal={false}\r\n        bounces={false}\r\n      >\r\n        <PositionInfo />\r\n        <LoanInfo />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import { View } from \"react-native\";\r\nimport rootStyles from \"../styles/rootStyles\";\r\nimport MiddleAccount from \"./account/MiddleAccount\";\r\nimport TopAccount from \"./account/TopAccount\";\r\nimport Chart from \"./chart/Chart\";\r\nimport PositionInfo from \"./info/position-info/PositionInfo\";\r\nimport ControlPanel from \"./control-panel/ControlPanel\";\r\nimport RootControlButton from \"./root-control-button/RootControlButton\";\r\nimport LevelInfoBox from \"./level/LevelInfoBox\";\r\nimport Info from \"./info/Info\";\r\n\r\nfunction Display() {\r\n  return (\r\n    <>\r\n      <View style={rootStyles.display}>\r\n        <TopAccount />\r\n        <LevelInfoBox />\r\n        <Chart />\r\n        <MiddleAccount />\r\n        <Info />\r\n        <ControlPanel />\r\n        <RootControlButton />\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import { StatusBar } from \"expo-status-bar\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport Display from \"./components/Display\";\nimport theme from \"./styles/theme\";\n\nexport default function App() {\n  return (\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n        <Display />\n        <StatusBar style=\"light\" />\n      </ThemeProvider>\n    </RecoilRoot>\n  );\n}\n"],"sourceRoot":""}